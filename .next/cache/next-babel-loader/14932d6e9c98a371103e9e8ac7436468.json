{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\gmont\\\\sekndproduction\\\\state\\\\SearchGridContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from \"react\";\n\nvar gridReducer = function gridReducer(state, action) {\n  switch (action.type) {\n    case \"ADD_SQUARES\":\n      var squares = [];\n      var numberOfSquares = 0;\n\n      while (numberOfSquares < action.payload.numberOfSquares) {\n        squares.push({\n          part: null\n        });\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        squares: squares\n      });\n\n    case \"ADD_TIMES\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        startTime: action.payload.startTime,\n        startDate: action.payload.startDate,\n        endTime: action.payload.endTime,\n        endDate: action.payload.endDate\n      });\n\n    case \"ADD_PART_TO_SQUARE\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        squares: state.squares.map(function (square, i) {\n          return i !== action.payload.index ? square : {\n            part: action.payload.part\n          };\n        })\n      });\n\n    case \"REMOVE_PART_FROM_SQUARE\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        squares: state.squares.map(function (square, i) {\n          return i !== action.payload.index ? {\n            part: action.payload.part\n          } : square;\n        })\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar GridStateContext = /*#__PURE__*/React.createContext(undefined);\nvar GridDispatchContext = /*#__PURE__*/React.createContext(undefined);\nexport var GridProvider = function GridProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _React$useReducer = React.useReducer(gridReducer, {\n    squares: [],\n    startDate: \"\",\n    startTime: 0,\n    endDate: \"\",\n    endTime: 0\n  }),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      state = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  return __jsx(GridStateContext.Provider, {\n    value: state,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, __jsx(GridDispatchContext.Provider, {\n    value: dispatch,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, children));\n};\n\n_s(GridProvider, \"9qRZ5qzF6gzPHIBtkDgpG1J9NTE=\");\n\n_c = GridProvider;\nexport var useGridState = function useGridState() {\n  _s2();\n\n  var context = React.useContext(GridStateContext);\n\n  if (undefined === context) {\n    throw new Error(\"Please use within GridProvider\");\n  }\n\n  return context;\n};\n\n_s2(useGridState, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport var useGridDispatch = function useGridDispatch() {\n  _s3();\n\n  var context = React.useContext(GridDispatchContext);\n\n  if (undefined === context) {\n    throw new Error(\"Please use within GridProvider\");\n  }\n\n  return context;\n};\n\n_s3(useGridDispatch, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"GridProvider\");","map":{"version":3,"sources":["C:/Users/gmont/sekndproduction/state/SearchGridContext.tsx"],"names":["React","gridReducer","state","action","type","squares","numberOfSquares","payload","push","part","startTime","startDate","endTime","endDate","map","square","i","index","GridStateContext","createContext","undefined","GridDispatchContext","GridProvider","children","useReducer","dispatch","useGridState","context","useContext","Error","useGridDispatch"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\n\r\ntype Squares = { part: { [key: string]: any } | null }[];\r\n\r\ntype GridTimes = {\r\n  startTime: number;\r\n  startDate: string;\r\n  endTime: number;\r\n  endDate: string;\r\n};\r\n\r\ntype State = {\r\n  squares: Squares;\r\n} & GridTimes;\r\n\r\ntype Action = {\r\n  type: string;\r\n  payload: {\r\n    id?: string;\r\n    index?: number;\r\n    numberOfSquares?: number;\r\n    startDate?: string;\r\n    startTime?: number;\r\n    endDate?: string;\r\n    endTime?: number;\r\n    part?: { [key: string]: any };\r\n  };\r\n};\r\n\r\nconst gridReducer: React.Reducer<State, Action> = (state: State, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_SQUARES\":\r\n      const squares: Squares = [];\r\n      let numberOfSquares: number = 0;\r\n      while (numberOfSquares < action.payload.numberOfSquares) {\r\n        squares.push({ part: null });\r\n      }\r\n      return { ...state, squares };\r\n    case \"ADD_TIMES\":\r\n      return {\r\n        ...state,\r\n        startTime: action.payload.startTime,\r\n        startDate: action.payload.startDate,\r\n        endTime: action.payload.endTime,\r\n        endDate: action.payload.endDate,\r\n      };\r\n    case \"ADD_PART_TO_SQUARE\":\r\n      return {\r\n        ...state,\r\n        squares: state.squares.map((square, i) => {\r\n          return i !== action.payload.index\r\n            ? square\r\n            : { part: action.payload.part };\r\n        }),\r\n      };\r\n    case \"REMOVE_PART_FROM_SQUARE\":\r\n      return {\r\n        ...state,\r\n        squares: state.squares.map((square, i) => {\r\n          return i !== action.payload.index\r\n            ? { part: action.payload.part }\r\n            : square;\r\n        }),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst GridStateContext: React.Context<State> = React.createContext(undefined);\r\n\r\nconst GridDispatchContext: React.Context<\r\n  React.Dispatch<Action> | undefined\r\n> = React.createContext(undefined);\r\n\r\nexport const GridProvider: ({\r\n  children,\r\n}: {\r\n  children: React.ReactNode;\r\n}) => JSX.Element = ({ children }: { children: React.ReactNode }) => {\r\n  const [state, dispatch] = React.useReducer(gridReducer, {\r\n    squares: [],\r\n    startDate: \"\",\r\n    startTime: 0,\r\n    endDate: \"\",\r\n    endTime: 0,\r\n  });\r\n\r\n  return (\r\n    <GridStateContext.Provider value={state}>\r\n      <GridDispatchContext.Provider value={dispatch}>\r\n        {children}\r\n      </GridDispatchContext.Provider>\r\n    </GridStateContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useGridState = (): State => {\r\n  const context = React.useContext(GridStateContext);\r\n\r\n  if (undefined === context) {\r\n    throw new Error(\"Please use within GridProvider\");\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const useGridDispatch = (): React.Dispatch<Action> => {\r\n  const context = React.useContext(GridDispatchContext);\r\n\r\n  if (undefined === context) {\r\n    throw new Error(\"Please use within GridProvider\");\r\n  }\r\n  return context;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}