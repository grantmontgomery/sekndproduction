{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gmont\\\\sekndproduction\\\\components\\\\SearchResults\\\\ResultCard\\\\ResultCard.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from \"react\";\nimport css from \"./ResultCard.module.scss\";\nexport const ResultCard = ({\n  item\n}) => {\n  const [state, setState] = React.useState({\n    added: false\n  });\n\n  const determineCardType = type => {\n    return;\n  };\n\n  return __jsx(\"div\", {\n    className: css.resultCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, __jsx(\"span\", {\n    className: css.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, \"Title\"), __jsx(\"button\", {\n    className: css.addButton,\n    onClick: () => state.added ? setState(state => _objectSpread(_objectSpread({}, state), {}, {\n      added: false\n    })) : setState(state => _objectSpread(_objectSpread({}, state), {}, {\n      added: true\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, state.added ? \"Remove from Parts -\" : \"Add to Parts +\"), __jsx(\"div\", {\n    className: css.starsWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["C:/Users/gmont/sekndproduction/components/SearchResults/ResultCard/ResultCard.tsx"],"names":["React","css","ResultCard","item","state","setState","useState","added","determineCardType","type","resultCard","title","addButton","starsWrapper"],"mappings":";;;;;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,GAAP,MAAgB,0BAAhB;AAEA,OAAO,MAAMC,UAAkC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC9D,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,KAAK,CAACM,QAAN,CAAe;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAf,CAA1B;;AACA,QAAMC,iBAAyC,GAAIC,IAAD,IAAU;AAC1D;AACD,GAFD;;AAGA,SACE;AAAK,IAAA,SAAS,EAAER,GAAG,CAACS,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAET,GAAG,CAACU,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AACE,IAAA,SAAS,EAAEV,GAAG,CAACW,SADjB;AAEE,IAAA,OAAO,EAAE,MACPR,KAAK,CAACG,KAAN,GACIF,QAAQ,CAAED,KAAD,oCAAiBA,KAAjB;AAAwBG,MAAAA,KAAK,EAAE;AAA/B,MAAD,CADZ,GAEIF,QAAQ,CAAED,KAAD,oCAAiBA,KAAjB;AAAwBG,MAAAA,KAAK,EAAE;AAA/B,MAAD,CALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGH,KAAK,CAACG,KAAN,GAAc,qBAAd,GAAsC,gBARzC,CAFF,EAYE;AAAK,IAAA,SAAS,EAAEN,GAAG,CAACY,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF;AAgBD,CArBM","sourcesContent":["import { sectionFooterSecondaryContent } from \"aws-amplify\";\r\nimport * as React from \"react\";\r\nimport css from \"./ResultCard.module.scss\";\r\n\r\nexport const ResultCard: React.FC<{ item: {} }> = ({ item }) => {\r\n  const [state, setState] = React.useState({ added: false });\r\n  const determineCardType: (type: string) => void = (type) => {\r\n    return;\r\n  };\r\n  return (\r\n    <div className={css.resultCard}>\r\n      <span className={css.title}>Title</span>\r\n      <button\r\n        className={css.addButton}\r\n        onClick={() =>\r\n          state.added\r\n            ? setState((state) => ({ ...state, added: false }))\r\n            : setState((state) => ({ ...state, added: true }))\r\n        }\r\n      >\r\n        {state.added ? \"Remove from Parts -\" : \"Add to Parts +\"}\r\n      </button>\r\n      <div className={css.starsWrapper}></div>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}