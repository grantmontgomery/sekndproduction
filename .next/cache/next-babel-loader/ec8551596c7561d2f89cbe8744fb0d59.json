{"ast":null,"code":"export default ((req, res) => {\n  if (req.method !== \"GET\") {\n    //url setup\n    const yelpEvents = new URL(\"https://api.yelp.com/v3/events\"),\n          params = {\n      location: req.body.location,\n      start_date: req.body.start_date,\n      end_date: req.body.end_date,\n      radius: req.body.radius\n    };\n    Object.keys(params).forEach(key => yelpEvents.searchParams.append(key, params[key]));\n\n    if (req.body.categories !== \"\") {\n      yelpEvents.searchParams.append(\"categories\", req.body.categories);\n    }\n\n    const yelpUrlString = yelpEvents.toString(); //function\n\n    const yelpdataFetch = async (urlString) => {\n      try {\n        const yelpResponse = await fetch(urlString, {\n          headers: {\n            Authorization: `Bearer ${process.env.YELP_API_KEY}`\n          }\n        });\n        const jsonResponse = await yelpResponse.json();\n        return jsonResponse;\n      } catch (err) {\n        return err;\n      }\n    };\n\n    return yelpdataFetch(yelpUrlString).then(data => res.send(data)).catch(err => res.send(err));\n  }\n\n  return res.status(200).end(\"Yelp Events API\");\n});","map":{"version":3,"sources":["C:/Users/gmont/sekndproduction/pages/api/yelpEventsAPI.ts"],"names":["req","res","method","yelpEvents","URL","params","location","body","start_date","end_date","radius","Object","keys","forEach","key","searchParams","append","categories","yelpUrlString","toString","yelpdataFetch","urlString","yelpResponse","fetch","headers","Authorization","process","env","YELP_API_KEY","jsonResponse","json","err","then","data","send","catch","status","end"],"mappings":"AASA,gBAAe,CAACA,GAAD,EAAsBC,GAAtB,KAA+C;AAC5D,MAAID,GAAG,CAACE,MAAJ,KAAe,KAAnB,EAA0B;AACxB;AACA,UAAMC,UAAe,GAAG,IAAIC,GAAJ,CAAQ,gCAAR,CAAxB;AAAA,UACEC,MAAc,GAAG;AACfC,MAAAA,QAAQ,EAAEN,GAAG,CAACO,IAAJ,CAASD,QADJ;AAEfE,MAAAA,UAAU,EAAER,GAAG,CAACO,IAAJ,CAASC,UAFN;AAGfC,MAAAA,QAAQ,EAAET,GAAG,CAACO,IAAJ,CAASE,QAHJ;AAIfC,MAAAA,MAAM,EAAEV,GAAG,CAACO,IAAJ,CAASG;AAJF,KADnB;AAOAC,IAAAA,MAAM,CAACC,IAAP,CAAYP,MAAZ,EAAoBQ,OAApB,CAA6BC,GAAD,IAC1BX,UAAU,CAACY,YAAX,CAAwBC,MAAxB,CAA+BF,GAA/B,EAAoCT,MAAM,CAACS,GAAD,CAA1C,CADF;;AAGA,QAAId,GAAG,CAACO,IAAJ,CAASU,UAAT,KAAwB,EAA5B,EAAgC;AAC9Bd,MAAAA,UAAU,CAACY,YAAX,CAAwBC,MAAxB,CAA+B,YAA/B,EAA6ChB,GAAG,CAACO,IAAJ,CAASU,UAAtD;AACD;;AAED,UAAMC,aAAqB,GAAGf,UAAU,CAACgB,QAAX,EAA9B,CAhBwB,CAkBxB;;AACA,UAAMC,aAAkD,GAAG,OACzDC,SADyD,KAEtD;AACH,UAAI;AACF,cAAMC,YAAsB,GAAG,MAAMC,KAAK,CAACF,SAAD,EAAY;AACpDG,UAAAA,OAAO,EAAE;AACPC,YAAAA,aAAa,EAAG,UAASC,OAAO,CAACC,GAAR,CAAYC,YAAa;AAD3C;AAD2C,SAAZ,CAA1C;AAKA,cAAMC,YAAkB,GAAG,MAAMP,YAAY,CAACQ,IAAb,EAAjC;AACA,eAAOD,YAAP;AACD,OARD,CAQE,OAAOE,GAAP,EAAY;AACZ,eAAOA,GAAP;AACD;AACF,KAdD;;AAgBA,WAAOX,aAAa,CAACF,aAAD,CAAb,CACJc,IADI,CACEC,IAAD,IAAUhC,GAAG,CAACiC,IAAJ,CAASD,IAAT,CADX,EAEJE,KAFI,CAEGJ,GAAD,IAAS9B,GAAG,CAACiC,IAAJ,CAASH,GAAT,CAFX,CAAP;AAGD;;AACD,SAAO9B,GAAG,CAACmC,MAAJ,CAAW,GAAX,EAAgBC,GAAhB,CAAoB,iBAApB,CAAP;AACD,CAzCD","sourcesContent":["import { NextApiRequest, NextApiResponse } from \"next\";\r\n\r\ntype Params = {\r\n  location: string;\r\n  start_date: number;\r\n  end_date: number;\r\n  radius: number;\r\n};\r\n\r\nexport default (req: NextApiRequest, res: NextApiResponse) => {\r\n  if (req.method !== \"GET\") {\r\n    //url setup\r\n    const yelpEvents: URL = new URL(\"https://api.yelp.com/v3/events\"),\r\n      params: Params = {\r\n        location: req.body.location,\r\n        start_date: req.body.start_date,\r\n        end_date: req.body.end_date,\r\n        radius: req.body.radius,\r\n      };\r\n    Object.keys(params).forEach((key) =>\r\n      yelpEvents.searchParams.append(key, params[key])\r\n    );\r\n    if (req.body.categories !== \"\") {\r\n      yelpEvents.searchParams.append(\"categories\", req.body.categories);\r\n    }\r\n\r\n    const yelpUrlString: string = yelpEvents.toString();\r\n\r\n    //function\r\n    const yelpdataFetch: (urlString: string) => Promise<any> = async (\r\n      urlString\r\n    ) => {\r\n      try {\r\n        const yelpResponse: Response = await fetch(urlString, {\r\n          headers: {\r\n            Authorization: `Bearer ${process.env.YELP_API_KEY}`,\r\n          },\r\n        });\r\n        const jsonResponse: JSON = await yelpResponse.json();\r\n        return jsonResponse;\r\n      } catch (err) {\r\n        return err;\r\n      }\r\n    };\r\n\r\n    return yelpdataFetch(yelpUrlString)\r\n      .then((data) => res.send(data))\r\n      .catch((err) => res.send(err));\r\n  }\r\n  return res.status(200).end(\"Yelp Events API\");\r\n};\r\n"]},"metadata":{},"sourceType":"module"}