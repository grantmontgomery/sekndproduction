{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport default class ScheduleGrid {\n  constructor(unixStartDate, unixEndDate) {\n    _defineProperty(this, \"unixStartDate\", void 0);\n\n    _defineProperty(this, \"unixEndDate\", void 0);\n\n    _defineProperty(this, \"numberofSquares\", void 0);\n\n    _defineProperty(this, \"templateAreas\", void 0);\n\n    _defineProperty(this, \"startHour\", void 0);\n\n    _defineProperty(this, \"hourDifference\", void 0);\n\n    _defineProperty(this, \"columnAmount\", void 0);\n\n    _defineProperty(this, \"endHour\", void 0);\n\n    _defineProperty(this, \"hourStrings\", void 0);\n\n    this.unixStartDate = unixStartDate;\n    this.unixEndDate = unixEndDate;\n    this.startHour = 0;\n    this.hourDifference = 0;\n    this.templateAreas = \"\";\n    this.columnAmount = 0;\n    this.endHour = 0;\n    this.hourStrings = [];\n    this.numberofSquares = 0;\n  }\n\n  setSquares() {\n    const timeDifference = this.unixEndDate - this.unixStartDate;\n    const hours = Math.floor(timeDifference / 3600);\n    const numColumns = hours * 2 + 4;\n    const numberOfSquares = numColumns * 5;\n    this.numberofSquares = numberOfSquares;\n    this.columnAmount = numColumns;\n    this.hourDifference = hours;\n  }\n\n  setHours() {\n    const startDate = new Date(this.unixStartDate * 1000);\n    const endDate = new Date(this.unixEndDate * 1000);\n    const startHour = startDate.getHours();\n    const endHour = endDate.getHours();\n    this.startHour = startHour;\n    this.endHour = endHour;\n  }\n\n  setGridTemplate() {\n    const square = \"square \";\n    const rowString = `\"${square.repeat(this.columnAmount - 1)} square\"`;\n    this.templateAreas = `${rowString.repeat(5)}`;\n  }\n\n  setHoursHeader() {\n    let hourCounter = 0;\n    let startHourCounter = this.startHour;\n    const hourNumbers = [];\n\n    while (hourCounter <= this.hourDifference) {\n      hourNumbers.push(startHourCounter);\n      hourCounter++;\n      startHourCounter < 24 ? startHourCounter++ : startHourCounter = 1;\n    }\n\n    const hourStrings = [];\n    hourNumbers.forEach(hour => {\n      if (hour === 24) {\n        return hourStrings.push(\"12:00 a.m\");\n      } else if (hour === 12) {\n        return hourStrings.push(\"12:00 p.m\");\n      } else {\n        return hour < 12 ? hourStrings.push(`${hour}:00 a.m`) : hourStrings.push(`${hour - 12}:00 p.m`);\n      }\n    });\n    this.hourStrings = hourStrings;\n  }\n\n  setGrid() {\n    this.setSquares();\n    this.setHours();\n    this.setGridTemplate();\n    this.setHoursHeader();\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}