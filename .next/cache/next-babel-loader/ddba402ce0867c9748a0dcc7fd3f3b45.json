{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gmont\\\\sekndproduction\\\\components\\\\DatePart\\\\NormalPiece\\\\NormalPiece.tsx\";\nvar __jsx = React.createElement;\nimport * as React from \"react\";\nimport css from \"./NormalPiece.module.scss\";\nimport { usePartsDispatch } from \"../../../state/DatePartsContext\";\nimport { PartImage } from \"./PartImage\";\nexport const NormalPiece = ({\n  part\n}) => {\n  const dispatch = usePartsDispatch();\n\n  const determineImageBackgroundSource = () => {\n    switch (part.type) {\n      case \"place\":\n        return part.source === \"yelp\" ? part.image_url : null;\n\n      case \"event\":\n        return part.source === \"yelp\" ? part.image_url : part.images[0].url;\n\n      default:\n        return \"\";\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: css.normalPiece,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, __jsx(PartImage, {\n    type: part.type,\n    image: determineImageBackgroundSource(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: `${css.partTitle} ${part.type ? css.eventTitle : css.placeTitle}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, part.name), __jsx(\"button\", {\n    className: css.delete,\n    onClick: () => dispatch({\n      type: \"REMOVE_PART\",\n      payload: {\n        id: part.id\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"X\")));\n};","map":{"version":3,"sources":["C:/Users/gmont/sekndproduction/components/DatePart/NormalPiece/NormalPiece.tsx"],"names":["React","css","usePartsDispatch","PartImage","NormalPiece","part","dispatch","determineImageBackgroundSource","type","source","image_url","images","url","normalPiece","partTitle","eventTitle","placeTitle","name","delete","payload","id"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,GAAP,MAAgB,2BAAhB;AACA,SAASC,gBAAT,QAAiC,iCAAjC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAO,MAAMC,WAAuD,GAAG,CAAC;AACtEC,EAAAA;AADsE,CAAD,KAEjE;AACJ,QAAMC,QAAQ,GAAGJ,gBAAgB,EAAjC;;AACA,QAAMK,8BAA4C,GAAG,MAAM;AACzD,YAAQF,IAAI,CAACG,IAAb;AACE,WAAK,OAAL;AACE,eAAOH,IAAI,CAACI,MAAL,KAAgB,MAAhB,GAAyBJ,IAAI,CAACK,SAA9B,GAA0C,IAAjD;;AACF,WAAK,OAAL;AACE,eAAOL,IAAI,CAACI,MAAL,KAAgB,MAAhB,GAAyBJ,IAAI,CAACK,SAA9B,GAA0CL,IAAI,CAACM,MAAL,CAAY,CAAZ,EAAeC,GAAhE;;AACF;AACE,eAAO,EAAP;AANJ;AAQD,GATD;;AAWA,SACE;AAAK,IAAA,SAAS,EAAEX,GAAG,CAACY,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,IAAI,EAAER,IAAI,CAACG,IADb;AAEE,IAAA,KAAK,EAAED,8BAA8B,EAFvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE;AACE,IAAA,SAAS,EAAG,GAAEN,GAAG,CAACa,SAAU,IAC1BT,IAAI,CAACG,IAAL,GAAYP,GAAG,CAACc,UAAhB,GAA6Bd,GAAG,CAACe,UAClC,EAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOX,IAAI,CAACY,IAAZ,CALF,EAME;AACE,IAAA,SAAS,EAAEhB,GAAG,CAACiB,MADjB;AAEE,IAAA,OAAO,EAAE,MACPZ,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,aAAR;AAAuBW,MAAAA,OAAO,EAAE;AAAEC,QAAAA,EAAE,EAAEf,IAAI,CAACe;AAAX;AAAhC,KAAD,CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SANF,CALF,CADF;AAuBD,CAtCM","sourcesContent":["import * as React from \"react\";\r\nimport css from \"./NormalPiece.module.scss\";\r\nimport { usePartsDispatch } from \"../../../state/DatePartsContext\";\r\nimport { PartImage } from \"./PartImage\";\r\n\r\nexport const NormalPiece: React.FC<{ part: { [key: string]: any } }> = ({\r\n  part,\r\n}) => {\r\n  const dispatch = usePartsDispatch();\r\n  const determineImageBackgroundSource: () => string = () => {\r\n    switch (part.type) {\r\n      case \"place\":\r\n        return part.source === \"yelp\" ? part.image_url : null;\r\n      case \"event\":\r\n        return part.source === \"yelp\" ? part.image_url : part.images[0].url;\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={css.normalPiece}>\r\n      <PartImage\r\n        type={part.type}\r\n        image={determineImageBackgroundSource()}\r\n      ></PartImage>\r\n      <div\r\n        className={`${css.partTitle} ${\r\n          part.type ? css.eventTitle : css.placeTitle\r\n        }`}\r\n      >\r\n        <span>{part.name}</span>\r\n        <button\r\n          className={css.delete}\r\n          onClick={() =>\r\n            dispatch({ type: \"REMOVE_PART\", payload: { id: part.id } })\r\n          }\r\n        >\r\n          X\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}