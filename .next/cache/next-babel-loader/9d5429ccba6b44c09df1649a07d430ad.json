{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\gmont\\\\sekndproduction\\\\state\\\\GridSquaresContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport * as React from \"react\";\nimport Cookie from \"js-cookie\";\n\nvar squaresReducer = function squaresReducer(state, action) {\n  switch (action.type) {\n    case \"ADD_SQUARES\":\n      return {\n        squares: _toConsumableArray(new Array(action.payload.numberOfSquares)).map(function () {\n          return {\n            part: null\n          };\n        })\n      };\n\n    case \"ADD_PART_TO_SQUARE\":\n      return {\n        squares: state.squares.map(function (square, i) {\n          return i !== action.payload.index ? square : {\n            part: action.payload.part\n          };\n        })\n      };\n\n    case \"REMOVE_PART_FROM_SQUARE\":\n      return {\n        squares: state.squares.map(function (square, i) {\n          return i !== action.payload.index ? {\n            part: action.payload.part\n          } : square;\n        })\n      };\n\n    default:\n      return state;\n  }\n};\n\nvar SquaresContext = /*#__PURE__*/React.createContext(undefined);\nvar SquaresDispatch = /*#__PURE__*/React.createContext(undefined);\nexport var SquaresProvider = function SquaresProvider(_ref) {\n  _s();\n\n  var children = _ref.children,\n      initialSquaresState = _ref.initialSquaresState;\n\n  var _React$useReducer = React.useReducer(squaresReducer, initialSquaresState ? initialSquaresState : {\n    squares: []\n  }),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      state = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  React.useEffect(function () {\n    Cookie.set(\"squares\", state);\n  }, [state]);\n  return __jsx(SquaresContext.Provider, {\n    value: state,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, __jsx(SquaresDispatch.Provider, {\n    value: dispatch,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, children));\n};\n\n_s(SquaresProvider, \"soCohUMuW/BlO/b8wG3TC28L7ik=\");\n\n_c = SquaresProvider;\nexport var useSquaresState = function useSquaresState() {\n  _s2();\n\n  var context = React.useContext(SquaresContext);\n\n  if (context === undefined) {\n    throw new Error(\"Please use within Squares Provider\");\n  }\n\n  return context;\n};\n\n_s2(useSquaresState, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport var useSquaresDispatch = function useSquaresDispatch() {\n  _s3();\n\n  var context = React.useContext(SquaresDispatch);\n\n  if (context === undefined) {\n    throw new Error(\"Please use within Squares Provider\");\n  }\n\n  return context;\n};\n\n_s3(useSquaresDispatch, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"SquaresProvider\");","map":{"version":3,"sources":["C:/Users/gmont/sekndproduction/state/GridSquaresContext.tsx"],"names":["React","Cookie","squaresReducer","state","action","type","squares","Array","payload","numberOfSquares","map","part","square","i","index","SquaresContext","createContext","undefined","SquaresDispatch","SquaresProvider","children","initialSquaresState","useReducer","dispatch","useEffect","set","useSquaresState","context","useContext","Error","useSquaresDispatch"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport Cookie from \"js-cookie\";\r\n\r\ntype State = {\r\n  squares: { part: { [key: string]: any } | null }[];\r\n};\r\ntype Action = {\r\n  type: string;\r\n  payload: {\r\n    numberOfSquares?: number;\r\n    part?: { [key: string]: any };\r\n    index?: number;\r\n    id?: string;\r\n  };\r\n};\r\n\r\nconst squaresReducer: React.Reducer<State, Action> = (\r\n  state: State,\r\n  action: Action\r\n) => {\r\n  switch (action.type) {\r\n    case \"ADD_SQUARES\":\r\n      return {\r\n        squares: [...new Array(action.payload.numberOfSquares)].map(() => ({\r\n          part: null,\r\n        })),\r\n      };\r\n    case \"ADD_PART_TO_SQUARE\":\r\n      return {\r\n        squares: state.squares.map((square, i) => {\r\n          return i !== action.payload.index\r\n            ? square\r\n            : { part: action.payload.part };\r\n        }),\r\n      };\r\n    case \"REMOVE_PART_FROM_SQUARE\":\r\n      return {\r\n        squares: state.squares.map((square, i) => {\r\n          return i !== action.payload.index\r\n            ? { part: action.payload.part }\r\n            : square;\r\n        }),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst SquaresContext: React.Context<State> = React.createContext(undefined);\r\n\r\nconst SquaresDispatch: React.Context<\r\n  React.Dispatch<Action> | undefined\r\n> = React.createContext(undefined);\r\n\r\nexport const SquaresProvider: ({\r\n  children,\r\n  initialSquaresState,\r\n}: {\r\n  children: React.ReactNode;\r\n  initialSquaresState?: State;\r\n}) => JSX.Element = ({ children, initialSquaresState }) => {\r\n  const [state, dispatch] = React.useReducer(\r\n    squaresReducer,\r\n    initialSquaresState\r\n      ? initialSquaresState\r\n      : {\r\n          squares: [],\r\n        }\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    Cookie.set(\"squares\", state);\r\n  }, [state]);\r\n\r\n  return (\r\n    <SquaresContext.Provider value={state}>\r\n      <SquaresDispatch.Provider value={dispatch}>\r\n        {children}\r\n      </SquaresDispatch.Provider>\r\n    </SquaresContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useSquaresState = (): State => {\r\n  const context = React.useContext(SquaresContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"Please use within Squares Provider\");\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const useSquaresDispatch = (): React.Dispatch<Action> => {\r\n  const context = React.useContext(SquaresDispatch);\r\n\r\n  if (context === undefined) {\r\n    throw new Error(\"Please use within Squares Provider\");\r\n  }\r\n  return context;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}