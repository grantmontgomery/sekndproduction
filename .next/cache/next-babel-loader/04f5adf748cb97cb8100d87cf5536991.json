{"ast":null,"code":"var __jsx = React.createElement;\nimport * as React from \"react\";\nimport css from \"./EventPriceGenre.module.scss\";\nexport var EventPriceGenre = function EventPriceGenre(_ref) {\n  var venue = _ref.venue,\n      price = _ref.price,\n      source = _ref.source,\n      genre = _ref.genre;\n\n  var parsePrice = function parsePrice() {\n    switch (source) {\n      case \"yelp\":\n        if (!price) return \"Check link for price.\";\n        return \"Starting at $\".concat(price, \".00\");\n\n      case \"ticketmaster\":\n        if (!price || !price.min) return \"Check link for price\";\n\n        var truePrice = function truePrice() {\n          if (price.min % 1 === 0) return \"Starting at $\".concat(price.min, \".00\");\n          var priceString = price.min.toString();\n          var decimalIndex = priceString.indexOf(\".\");\n          var cents = priceString.substring(decimalIndex + 1);\n          return \"Starting at $\".concat(priceString.substring(0, decimalIndex), \".\").concat(cents.length > 1 ? cents : \"\".concat(cents, \"0\"));\n        };\n\n        return truePrice();\n    }\n  };\n\n  var setGenre = function setGenre() {\n    if (source === \"yelp\") {\n      if (genre.indexOf(\"-\") !== -1 || genre.indexOf(\" \") !== -1) {\n        var characterSplit = genre.indexOf(\" \") !== -1 ? \" \" : \"-\";\n        var splitted = genre.split(characterSplit);\n        var upperCase = splitted.map(function (word) {\n          return \"\".concat(word.substring(0, 1).toUpperCase()).concat(word.substring(1));\n        });\n        return __jsx(\"span\", {\n          className: css.genre\n        }, \"\\u2022 \".concat(upperCase.join(\" \")));\n      } else {\n        return __jsx(\"span\", {\n          className: css.genre\n        }, \"\\u2022 \".concat(genre[0].toUpperCase()).concat(genre.substring(1)));\n      }\n    }\n\n    if (!genre) return null;\n    var segmentString = \"\";\n    var genreString = \"\";\n    genre[0].segment ? segmentString = genre[0].segment.name : null;\n    genre[0][\"genre\"] ? genreString = genre[0][\"genre\"].name : null;\n    return __jsx(\"span\", {\n      className: css.genre\n    }, \"\\u2022 \".concat(segmentString, \" \").concat(genreString));\n  };\n\n  return __jsx(\"div\", {\n    className: css.eventPrice\n  }, __jsx(\"span\", null, parsePrice()), setGenre());\n};","map":null,"metadata":{},"sourceType":"module"}