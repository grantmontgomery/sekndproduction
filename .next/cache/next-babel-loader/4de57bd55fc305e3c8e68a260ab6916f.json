{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nclass ScheduleGrid {\n  constructor(unixStartDate, unixEndDate) {\n    _defineProperty(this, \"startTime\", void 0);\n\n    _defineProperty(this, \"startDate\", void 0);\n\n    _defineProperty(this, \"endTime\", void 0);\n\n    _defineProperty(this, \"endDate\", void 0);\n\n    _defineProperty(this, \"numberofSquares\", void 0);\n\n    _defineProperty(this, \"startHour\", void 0);\n\n    _defineProperty(this, \"endHour\", void 0);\n\n    this.startDate = \"\";\n    this.startTime = unixStartDate;\n    this.endDate = \"\";\n    this.endTime = unixEndDate;\n    this.startHour = \"\";\n    this.endHour = \"\";\n    this.numberofSquares = 0;\n  }\n\n  setSquares() {\n    const timeDifference = this.endTime - this.startTime;\n    const hours = Math.floor(timeDifference / 3600000);\n    const numColumns = hours * 2 + 4;\n    const numSquares = numColumns * 5;\n    this.numberofSquares = numSquares;\n  }\n\n  name() {}\n\n} // const dispatch = useGridDispatch();\n\n\nexport default function setSquares(unixStartDate, unixEndDate) {\n  const timeDifference = unixEndDate - unixStartDate;\n  const hours = Math.floor(timeDifference / 3600000);\n  const numColumns = hours * 2 + 4;\n  const numberOfSquares = numColumns * 5;\n  console.log(numberOfSquares);\n}","map":{"version":3,"sources":["C:/Users/gmont/sekndproduction/components/SearchBox/Logic/setScheduleGrid.ts"],"names":["ScheduleGrid","constructor","unixStartDate","unixEndDate","startDate","startTime","endDate","endTime","startHour","endHour","numberofSquares","setSquares","timeDifference","hours","Math","floor","numColumns","numSquares","name","numberOfSquares","console","log"],"mappings":";;AAGA,MAAMA,YAAN,CAAmB;AASjBC,EAAAA,WAAW,CAACC,aAAD,EAAgBC,WAAhB,EAA6B;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACtC,SAAKC,SAAL,GAAiB,EAAjB;AACA,SAAKC,SAAL,GAAiBH,aAAjB;AACA,SAAKI,OAAL,GAAe,EAAf;AACA,SAAKC,OAAL,GAAeJ,WAAf;AACA,SAAKK,SAAL,GAAiB,EAAjB;AACA,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKC,eAAL,GAAuB,CAAvB;AACD;;AAEMC,EAAAA,UAAP,GAAoB;AAClB,UAAMC,cAAsB,GAAG,KAAKL,OAAL,GAAe,KAAKF,SAAnD;AACA,UAAMQ,KAAa,GAAGC,IAAI,CAACC,KAAL,CAAWH,cAAc,GAAG,OAA5B,CAAtB;AACA,UAAMI,UAAkB,GAAGH,KAAK,GAAG,CAAR,GAAY,CAAvC;AACA,UAAMI,UAAkB,GAAGD,UAAU,GAAG,CAAxC;AACA,SAAKN,eAAL,GAAuBO,UAAvB;AACD;;AAEMC,EAAAA,IAAP,GAAc,CAAE;;AA3BC,C,CA8BnB;;;AAEA,eAAe,SAASP,UAAT,CACbT,aADa,EAEbC,WAFa,EAGP;AACN,QAAMS,cAAsB,GAAGT,WAAW,GAAGD,aAA7C;AACA,QAAMW,KAAa,GAAGC,IAAI,CAACC,KAAL,CAAWH,cAAc,GAAG,OAA5B,CAAtB;AACA,QAAMI,UAAkB,GAAGH,KAAK,GAAG,CAAR,GAAY,CAAvC;AACA,QAAMM,eAAuB,GAAGH,UAAU,GAAG,CAA7C;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAYF,eAAZ;AACD","sourcesContent":["import { Dispatch } from \"react\";\r\nimport { useGridDispatch } from \"../../../state/SearchGridContext\";\r\n\r\nclass ScheduleGrid {\r\n  startTime: number;\r\n  startDate: string;\r\n  endTime: number;\r\n  endDate: string;\r\n  numberofSquares: number;\r\n  startHour: string;\r\n  endHour: string;\r\n\r\n  constructor(unixStartDate, unixEndDate) {\r\n    this.startDate = \"\";\r\n    this.startTime = unixStartDate;\r\n    this.endDate = \"\";\r\n    this.endTime = unixEndDate;\r\n    this.startHour = \"\";\r\n    this.endHour = \"\";\r\n    this.numberofSquares = 0;\r\n  }\r\n\r\n  public setSquares() {\r\n    const timeDifference: number = this.endTime - this.startTime;\r\n    const hours: number = Math.floor(timeDifference / 3600000);\r\n    const numColumns: number = hours * 2 + 4;\r\n    const numSquares: number = numColumns * 5;\r\n    this.numberofSquares = numSquares;\r\n  }\r\n\r\n  public name() {}\r\n}\r\n\r\n// const dispatch = useGridDispatch();\r\n\r\nexport default function setSquares(\r\n  unixStartDate: number,\r\n  unixEndDate: number\r\n): void {\r\n  const timeDifference: number = unixEndDate - unixStartDate;\r\n  const hours: number = Math.floor(timeDifference / 3600000);\r\n  const numColumns: number = hours * 2 + 4;\r\n  const numberOfSquares: number = numColumns * 5;\r\n\r\n  console.log(numberOfSquares);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}