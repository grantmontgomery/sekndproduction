{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gmont\\\\sekndproduction\\\\pages\\\\search\\\\[queried].tsx\";\nvar __jsx = React.createElement;\nimport * as React from \"react\";\nimport { Layout } from \"../../components\";\nexport default function Queried({\n  params: {\n    queried\n  },\n  searchParamsValues\n}) {\n  console.log(searchParamsValues);\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }));\n}\nexport const getServerSideProps = async ({\n  params\n}) => {\n  const checkURLIsString = params.queried.toString();\n  const paramValueArray = checkURLIsString.split(\"+\");\n  const searchParamsValues = {};\n  paramValueArray.forEach(param => {\n    const indexOfEqual = param.search(\"=\");\n    if (indexOfEqual === -1) return;else {\n      const paramKey = param.substring(0, indexOfEqual);\n      const paramValue = param.substring(indexOfEqual + 1);\n      searchParamsValues[paramKey] = paramValue;\n    }\n  });\n  return {\n    props: {\n      params,\n      searchParamsValues\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/gmont/sekndproduction/pages/search/[queried].tsx"],"names":["React","Layout","Queried","params","queried","searchParamsValues","console","log","getServerSideProps","checkURLIsString","toString","paramValueArray","split","forEach","param","indexOfEqual","search","paramKey","substring","paramValue","props"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,MAAT,QAAuB,kBAAvB;AAKA,eAAe,SAASC,OAAT,CAAiB;AAAEC,EAAAA,MAAM,EAAE;AAAEC,IAAAA;AAAF,GAAV;AAAuBC,EAAAA;AAAvB,CAAjB,EAA8D;AAC3EC,EAAAA,OAAO,CAACC,GAAR,CAAYF,kBAAZ;AACA,SACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;AAED,OAAO,MAAMG,kBAAsC,GAAG,OAAO;AAAEL,EAAAA;AAAF,CAAP,KAAsB;AAC1E,QAAMM,gBAAwB,GAAGN,MAAM,CAACC,OAAP,CAAeM,QAAf,EAAjC;AACA,QAAMC,eAAyB,GAAGF,gBAAgB,CAACG,KAAjB,CAAuB,GAAvB,CAAlC;AAEA,QAAMP,kBAA6C,GAAG,EAAtD;AAEAM,EAAAA,eAAe,CAACE,OAAhB,CAAyBC,KAAD,IAAW;AACjC,UAAMC,YAAoB,GAAGD,KAAK,CAACE,MAAN,CAAa,GAAb,CAA7B;AACA,QAAID,YAAY,KAAK,CAAC,CAAtB,EAAyB,OAAzB,KACK;AACH,YAAME,QAAgB,GAAGH,KAAK,CAACI,SAAN,CAAgB,CAAhB,EAAmBH,YAAnB,CAAzB;AACA,YAAMI,UAAkB,GAAGL,KAAK,CAACI,SAAN,CAAgBH,YAAY,GAAG,CAA/B,CAA3B;AACAV,MAAAA,kBAAkB,CAACY,QAAD,CAAlB,GAA+BE,UAA/B;AACD;AACF,GARD;AAUA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLjB,MAAAA,MADK;AAELE,MAAAA;AAFK;AADF,GAAP;AAMD,CAtBM","sourcesContent":["import * as React from \"react\";\r\nimport { GetServerSideProps } from \"next\";\r\nimport { Layout } from \"../../components\";\r\nimport { useRouter } from \"next/router\";\r\nimport { ParsedUrlQuery } from \"querystring\";\r\nimport { parse } from \"path\";\r\n\r\nexport default function Queried({ params: { queried }, searchParamsValues }) {\r\n  console.log(searchParamsValues);\r\n  return (\r\n    <React.Fragment>\r\n      <Layout></Layout>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport const getServerSideProps: GetServerSideProps = async ({ params }) => {\r\n  const checkURLIsString: string = params.queried.toString();\r\n  const paramValueArray: string[] = checkURLIsString.split(\"+\");\r\n\r\n  const searchParamsValues: { [key: string]: string } = {};\r\n\r\n  paramValueArray.forEach((param) => {\r\n    const indexOfEqual: number = param.search(\"=\");\r\n    if (indexOfEqual === -1) return;\r\n    else {\r\n      const paramKey: string = param.substring(0, indexOfEqual);\r\n      const paramValue: string = param.substring(indexOfEqual + 1);\r\n      searchParamsValues[paramKey] = paramValue;\r\n    }\r\n  });\r\n\r\n  return {\r\n    props: {\r\n      params,\r\n      searchParamsValues,\r\n    },\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}