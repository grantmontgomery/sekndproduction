{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from \"react\";\nimport { usePartsState, usePartsDispatch } from \"../../state/DatePartsContext\";\nimport css from \"./DateParts.module.scss\";\nimport { DatePart } from \"../DatePart/DatePart\";\nexport const DateParts = ({\n  location\n}) => {\n  const {\n    parts\n  } = usePartsState();\n  const [state, setState] = React.useState({\n    input: \"\",\n    color: \"linear-gradient(45deg, #ee0979, #ff6a00)\"\n  });\n  const dispatch = usePartsDispatch();\n\n  const handlePartSubmit = () => {\n    if (state.input === \"\") return alert(\"Fill out input\");\n    return dispatch({\n      type: \"ADD_PART\",\n      payload: {\n        part: {\n          name: state.input,\n          color: state.color,\n          type: \"custom\",\n          details: \"\",\n          id: `${name}${Math.random()}`\n        }\n      }\n    }), setState(state => _objectSpread(_objectSpread({}, state), {}, {\n      input: \"\"\n    }));\n  };\n\n  return __jsx(\"div\", {\n    className: `${css.dateParts} ${css[location]}`\n  }, __jsx(\"div\", {\n    className: css.partsWrapper\n  }, __jsx(\"header\", null, __jsx(\"label\", {\n    htmlFor: \"\"\n  }, \"Date Parts\"), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Another Idea?\",\n    value: state.input,\n    onChange: ({\n      target\n    }) => setState(state => _objectSpread(_objectSpread({}, state), {}, {\n      input: target.value\n    })),\n    className: css.partInput\n  }), __jsx(\"div\", {\n    className: css.colorInput\n  }, __jsx(\"button\", {\n    onClick: () => setState(state => _objectSpread(_objectSpread({}, state), {}, {\n      color: \"linear-gradient(45deg, #799f0c, #ffe000)\"\n    }))\n  }), __jsx(\"button\", {\n    onClick: () => setState(state => _objectSpread(_objectSpread({}, state), {}, {\n      color: \"linear-gradient(45deg, #155799, #159957)\"\n    }))\n  }), __jsx(\"button\", {\n    onClick: () => setState(state => _objectSpread(_objectSpread({}, state), {}, {\n      color: \"linear-gradient(45deg, #ee0979, #ff6a00)\"\n    }))\n  }), __jsx(\"button\", {\n    onClick: () => setState(state => _objectSpread(_objectSpread({}, state), {}, {\n      color: \" linear-gradient(45deg, #333399, #ff00cc)\"\n    }))\n  }), __jsx(\"button\", {\n    onClick: () => setState(state => _objectSpread(_objectSpread({}, state), {}, {\n      color: \"linear-gradient(45deg, #0f2027, #2c5364)\"\n    }))\n  })), __jsx(\"button\", {\n    className: css.add,\n    style: {\n      color: \"white\",\n      background: state.color\n    },\n    onClick: handlePartSubmit\n  }, \"Add\")), __jsx(\"div\", {\n    className: css.partsList\n  }, __jsx(\"div\", {\n    className: css.partsInner\n  }, parts.map(part => __jsx(DatePart, {\n    key: part.id,\n    location: \"list\",\n    part: part,\n    gridIndex: part.gridIndex\n  }))))), __jsx(\"div\", {\n    className: css.modal\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}