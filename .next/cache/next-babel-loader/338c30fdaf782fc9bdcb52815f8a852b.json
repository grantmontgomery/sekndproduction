{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport * as React from \"react\";\nimport { Layout, ResultCard } from \"../../components\";\nimport { yelpBusinessesCall } from \"../../apicalls\";\nimport css from \"../../styles/Queried.module.scss\";\nexport default function Queried(_ref) {\n  var props = _ref.props;\n  console.log(props);\n  return __jsx(Layout, null, __jsx(\"main\", {\n    className: css.queriedPage\n  }, __jsx(\"section\", {\n    className: css.queryDisplay\n  }), __jsx(\"section\", {\n    className: css.header\n  }), __jsx(\"section\", {\n    className: css.results\n  }, __jsx(\"div\", {\n    className: css.resultsSlider\n  }, props.results.map(function (business) {\n    return __jsx(ResultCard, null);\n  })))));\n}\n\nQueried.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var query, checkURLIsString, paramValueArray, searchParamsValues, apiResponse, apiJSON;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            query = _ref2.query;\n\n            if (!query.queried) {\n              _context.next = 15;\n              break;\n            }\n\n            checkURLIsString = query.queried.toString();\n            paramValueArray = checkURLIsString.split(\"+\");\n            searchParamsValues = {};\n            paramValueArray.forEach(function (param) {\n              var indexOfEqual = param.search(\"=\");\n              if (indexOfEqual === -1) return;else {\n                var paramKey = param.substring(0, indexOfEqual);\n                var paramValue = param.substring(indexOfEqual + 1);\n                searchParamsValues[paramKey] = paramValue;\n              }\n            });\n            _context.next = 8;\n            return yelpBusinessesCall(searchParamsValues);\n\n          case 8:\n            apiResponse = _context.sent;\n            _context.next = 11;\n            return apiResponse.json();\n\n          case 11:\n            apiJSON = _context.sent;\n            return _context.abrupt(\"return\", {\n              props: {\n                results: apiJSON\n              }\n            });\n\n          case 15:\n            return _context.abrupt(\"return\", {\n              props: {\n                results: {}\n              }\n            });\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();","map":null,"metadata":{},"sourceType":"module"}