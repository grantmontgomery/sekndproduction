{"ast":null,"code":"export default (async (req, res) => {\n  try {\n    if (req.method !== \"GET\") {\n      const {\n        startDateTime,\n        endDateTime,\n        radius,\n        location\n      } = req.body;\n      const ticketmasterEvents = new URL(\"https://app.ticketmaster.com/discovery/v2/events\"),\n            params = {\n        radius,\n        startDateTime,\n        endDateTime,\n        unit: [\"km\"],\n        apikey: process.env.TICKETMASTER_API_KEY\n      };\n      Object.keys(params).forEach(key => ticketmasterEvents.searchParams.append(key, params[key]));\n\n      if (isNaN(parseInt(location))) {\n        ticketmasterEvents.searchParams.append(\"city\", location);\n      } else {\n        ticketmasterEvents.searchParams.append(\"postalCode\", location);\n      }\n\n      const ticketmasterURLString = ticketmasterEvents.toString(); //function\n\n      const ticketmasterResponse = await fetch(ticketmasterURLString);\n      const jsonResponse = await ticketmasterResponse.json();\n      return res.send(jsonResponse);\n    }\n\n    return res.status(200).end(\"Ticket MAster API\");\n  } catch (err) {\n    return res.send(err);\n  }\n});","map":{"version":3,"sources":["C:/Users/gmont/sekndproduction/pages/api/ticketmasterAPI.ts"],"names":["req","res","method","startDateTime","endDateTime","radius","location","body","ticketmasterEvents","URL","params","unit","apikey","process","env","TICKETMASTER_API_KEY","Object","keys","forEach","key","searchParams","append","isNaN","parseInt","ticketmasterURLString","toString","ticketmasterResponse","fetch","jsonResponse","json","send","status","end","err"],"mappings":"AAaA,gBAAe,OAAOA,GAAP,EAA4BC,GAA5B,KAAqD;AAClE,MAAI;AACF,QAAID,GAAG,CAACE,MAAJ,KAAe,KAAnB,EAA0B;AACxB,YAAM;AAAEC,QAAAA,aAAF;AAAiBC,QAAAA,WAAjB;AAA8BC,QAAAA,MAA9B;AAAsCC,QAAAA;AAAtC,UAAmDN,GAAG,CAACO,IAA7D;AACA,YAAMC,kBAAuB,GAAG,IAAIC,GAAJ,CAC5B,kDAD4B,CAAhC;AAAA,YAGEC,MAAc,GAAG;AACfL,QAAAA,MADe;AAEfF,QAAAA,aAFe;AAGfC,QAAAA,WAHe;AAIfO,QAAAA,IAAI,EAAE,CAAC,IAAD,CAJS;AAKfC,QAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC;AALL,OAHnB;AAUAC,MAAAA,MAAM,CAACC,IAAP,CAAYP,MAAZ,EAAoBQ,OAApB,CAA6BC,GAAD,IAC1BX,kBAAkB,CAACY,YAAnB,CAAgCC,MAAhC,CAAuCF,GAAvC,EAA4CT,MAAM,CAACS,GAAD,CAAlD,CADF;;AAIA,UAAIG,KAAK,CAACC,QAAQ,CAACjB,QAAD,CAAT,CAAT,EAA+B;AAC7BE,QAAAA,kBAAkB,CAACY,YAAnB,CAAgCC,MAAhC,CAAuC,MAAvC,EAA+Cf,QAA/C;AACD,OAFD,MAEO;AACLE,QAAAA,kBAAkB,CAACY,YAAnB,CAAgCC,MAAhC,CAAuC,YAAvC,EAAqDf,QAArD;AACD;;AAED,YAAMkB,qBAA6B,GAAGhB,kBAAkB,CAACiB,QAAnB,EAAtC,CAtBwB,CAuBxB;;AAEA,YAAMC,oBAA8B,GAAG,MAAMC,KAAK,CAACH,qBAAD,CAAlD;AAEA,YAAMI,YAAkB,GAAG,MAAMF,oBAAoB,CAACG,IAArB,EAAjC;AACA,aAAO5B,GAAG,CAAC6B,IAAJ,CAASF,YAAT,CAAP;AACD;;AACD,WAAO3B,GAAG,CAAC8B,MAAJ,CAAW,GAAX,EAAgBC,GAAhB,CAAoB,mBAApB,CAAP;AACD,GAhCD,CAgCE,OAAOC,GAAP,EAAY;AACZ,WAAOhC,GAAG,CAAC6B,IAAJ,CAASG,GAAT,CAAP;AACD;AACF,CApCD","sourcesContent":["import { NextApiRequest, NextApiResponse } from \"next\";\r\n\r\ntype Params = {\r\n  radius: string;\r\n  startDateTime: string;\r\n  endDateTime: string;\r\n  unit: string[];\r\n  apikey: string;\r\n  segmentID?: string;\r\n  city?: string;\r\n  postalCode?: string;\r\n};\r\n\r\nexport default async (req: NextApiRequest, res: NextApiResponse) => {\r\n  try {\r\n    if (req.method !== \"GET\") {\r\n      const { startDateTime, endDateTime, radius, location } = req.body;\r\n      const ticketmasterEvents: URL = new URL(\r\n          \"https://app.ticketmaster.com/discovery/v2/events\"\r\n        ),\r\n        params: Params = {\r\n          radius,\r\n          startDateTime,\r\n          endDateTime,\r\n          unit: [\"km\"],\r\n          apikey: process.env.TICKETMASTER_API_KEY,\r\n        };\r\n      Object.keys(params).forEach((key) =>\r\n        ticketmasterEvents.searchParams.append(key, params[key])\r\n      );\r\n\r\n      if (isNaN(parseInt(location))) {\r\n        ticketmasterEvents.searchParams.append(\"city\", location);\r\n      } else {\r\n        ticketmasterEvents.searchParams.append(\"postalCode\", location);\r\n      }\r\n\r\n      const ticketmasterURLString: string = ticketmasterEvents.toString();\r\n      //function\r\n\r\n      const ticketmasterResponse: Response = await fetch(ticketmasterURLString);\r\n\r\n      const jsonResponse: JSON = await ticketmasterResponse.json();\r\n      return res.send(jsonResponse);\r\n    }\r\n    return res.status(200).end(\"Ticket MAster API\");\r\n  } catch (err) {\r\n    return res.send(err);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}