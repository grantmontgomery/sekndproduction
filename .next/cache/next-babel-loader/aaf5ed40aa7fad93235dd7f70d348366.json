{"ast":null,"code":"var __jsx = React.createElement;\nimport * as React from \"react\";\n\nconst gridReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_GRID_TEMPLATE\":\n      return {\n        hourStrings: action.payload.hourStrings,\n        gridTemplate: action.payload.gridTemplate\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst GridStateContext = /*#__PURE__*/React.createContext(undefined);\nconst GridDispatchContext = /*#__PURE__*/React.createContext(undefined);\nexport const GridProvider = ({\n  children\n}) => {\n  const [state, dispatch] = React.useReducer(gridReducer, {\n    gridTemplate: \"\",\n    hourStrings: []\n  });\n  return __jsx(GridStateContext.Provider, {\n    value: state\n  }, __jsx(GridDispatchContext.Provider, {\n    value: dispatch\n  }, children));\n};\nexport const useGridState = () => {\n  const context = React.useContext(GridStateContext);\n\n  if (context === undefined) {\n    throw new Error(\"Please use within GridProvider\");\n  }\n\n  return context;\n};\nexport const useGridDispatch = () => {\n  const context = React.useContext(GridDispatchContext);\n\n  if (context === undefined) {\n    throw new Error(\"Please use within GridProvider\");\n  }\n\n  return context;\n};","map":null,"metadata":{},"sourceType":"module"}