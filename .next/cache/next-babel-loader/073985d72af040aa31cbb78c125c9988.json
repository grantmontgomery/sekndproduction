{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\gmont\\\\sekndproduction\\\\components\\\\SearchBox\\\\Parts\\\\WhenInput\\\\WhenInput.tsx\";\n\nvar __jsx = React.createElement;\nimport * as React from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport css from \"./WhenInput.module.scss\";\nexport var WhenInput = function WhenInput(_ref) {\n  var handleInputChange = _ref.handleInputChange,\n      startDate = _ref.startDate,\n      endDate = _ref.endDate;\n\n  var handleChange = function handleChange(event, field) {\n    return handleInputChange(field, event.target.value);\n  };\n\n  return __jsx(\"div\", {\n    className: css.when,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"When are you meeting?\"), __jsx(DatePicker, {\n    className: css.from,\n    placeholderText: \"Start time\",\n    autoComplete: \"off\",\n    selected: startDate,\n    minDate: new Date(),\n    dateFormat: \"Pp\",\n    showTimeSelect: true,\n    onChange: function onChange(event) {\n      return handleChange(event, \"startDate\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), __jsx(DatePicker, {\n    className: css.to,\n    placeholderText: \"End Time\",\n    autoComplete: \"off\",\n    minDate: new Date(),\n    selected: endDate,\n    dateFormat: \"Pp\",\n    showTimeSelect: true,\n    onChange: function onChange(event) {\n      return handleChange(event, \"endDate\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }));\n};\n_c = WhenInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"WhenInput\");","map":{"version":3,"sources":["C:/Users/gmont/sekndproduction/components/SearchBox/Parts/WhenInput/WhenInput.tsx"],"names":["React","DatePicker","css","WhenInput","handleInputChange","startDate","endDate","handleChange","event","field","target","value","when","from","Date","to"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AAEA,OAAOC,GAAP,MAAgB,yBAAhB;AAIA,OAAO,IAAMC,SAA0B,GAAG,SAA7BA,SAA6B,OAIpC;AAAA,MAHJC,iBAGI,QAHJA,iBAGI;AAAA,MAFJC,SAEI,QAFJA,SAEI;AAAA,MADJC,OACI,QADJA,OACI;;AACJ,MAAMC,YAGG,GAAG,SAHNA,YAGM,CAACC,KAAD,EAAQC,KAAR,EAAkB;AAC5B,WAAOL,iBAAiB,CACtBK,KADsB,EAErBD,KAAK,CAACE,MAAP,CAAuDC,KAFjC,CAAxB;AAID,GARD;;AASA,SACE;AAAK,IAAA,SAAS,EAAET,GAAG,CAACU,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE,MAAC,UAAD;AACE,IAAA,SAAS,EAAEV,GAAG,CAACW,IADjB;AAEE,IAAA,eAAe,EAAE,YAFnB;AAGE,IAAA,YAAY,EAAC,KAHf;AAIE,IAAA,QAAQ,EAAER,SAJZ;AAKE,IAAA,OAAO,EAAE,IAAIS,IAAJ,EALX;AAME,IAAA,UAAU,EAAC,IANb;AAOE,IAAA,cAAc,MAPhB;AAQE,IAAA,QAAQ,EAAE,kBAACN,KAAD;AAAA,aAAWD,YAAY,CAACC,KAAD,EAAQ,WAAR,CAAvB;AAAA,KARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAYE,MAAC,UAAD;AACE,IAAA,SAAS,EAAEN,GAAG,CAACa,EADjB;AAEE,IAAA,eAAe,EAAE,UAFnB;AAGE,IAAA,YAAY,EAAC,KAHf;AAIE,IAAA,OAAO,EAAE,IAAID,IAAJ,EAJX;AAKE,IAAA,QAAQ,EAAER,OALZ;AAME,IAAA,UAAU,EAAC,IANb;AAOE,IAAA,cAAc,MAPhB;AAQE,IAAA,QAAQ,EAAE,kBAACE,KAAD;AAAA,aAAWD,YAAY,CAACC,KAAD,EAAQ,SAAR,CAAvB;AAAA,KARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF;AAyBD,CAvCM;KAAML,S","sourcesContent":["import * as React from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport InputProps from \"../../SearchBox\";\r\nimport css from \"./WhenInput.module.scss\";\r\n\r\ntype Props = Pick<InputProps, \"startDate\" | \"handleInputChange\" | \"endDate\">;\r\n\r\nexport const WhenInput: React.FC<Props> = ({\r\n  handleInputChange,\r\n  startDate,\r\n  endDate,\r\n}) => {\r\n  const handleChange: (\r\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\r\n    field: string\r\n  ) => void = (event, field) => {\r\n    return handleInputChange(\r\n      field,\r\n      (event.target as HTMLInputElement | HTMLSelectElement).value\r\n    );\r\n  };\r\n  return (\r\n    <div className={css.when}>\r\n      <label htmlFor=\"\">When are you meeting?</label>\r\n      <DatePicker\r\n        className={css.from}\r\n        placeholderText={\"Start time\"}\r\n        autoComplete=\"off\"\r\n        selected={startDate}\r\n        minDate={new Date()}\r\n        dateFormat=\"Pp\"\r\n        showTimeSelect\r\n        onChange={(event) => handleChange(event, \"startDate\")}\r\n      ></DatePicker>\r\n      <DatePicker\r\n        className={css.to}\r\n        placeholderText={\"End Time\"}\r\n        autoComplete=\"off\"\r\n        minDate={new Date()}\r\n        selected={endDate}\r\n        dateFormat=\"Pp\"\r\n        showTimeSelect\r\n        onChange={(event) => handleChange(event, \"endDate\")}\r\n      ></DatePicker>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}