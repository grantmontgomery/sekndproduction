{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\gmont\\\\sekndproduction\\\\components\\\\SearchResults\\\\ResultCard\\\\Parts\\\\ImageBackground\\\\ImageBackground.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport * as React from \"react\";\nimport css from \"./ImageBackground.module.scss\";\nexport var ImageBackground = function ImageBackground(_ref) {\n  _s();\n\n  var extended = _ref.extended,\n      imageLoaded = _ref.imageLoaded,\n      handleRetract = _ref.handleRetract,\n      type = _ref.type,\n      source = _ref.source,\n      children = _ref.children;\n\n  var _React$useState = React.useState({\n    loaded: false\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1]; // const determineImageRatio: () => { width: string; height: string } = () => {\n  //   switch (type) {\n  //     case \"event\":\n  //       return source === \"yelp\"\n  //         ? { width: \"100%\", height: \"auto\" }\n  //         : { width: \"auto\", height: \"100%\" };\n  //     case \"place\":\n  //       return { width: \"100%\", height: \"auto\" };\n  //     default:\n  //       return { width: \"100%\", height: \"auto\" };\n  //   }\n  // };\n\n\n  var determineImageRatio = function determineImageRatio() {\n    return source === \"yelp\" ? css.byWidth : css.byWidth;\n  };\n\n  return __jsx(\"div\", {\n    className: \"\".concat(css.imgBackground, \" \").concat(extended ? css.extended : null, \" \").concat(imageLoaded ? css.loaded : css.loading),\n    onClick: handleRetract,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, children);\n};\n\n_s(ImageBackground, \"UUlx3HLKVnuIH4JqASzL9fwBRkc=\");\n\n_c = ImageBackground;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageBackground\");","map":{"version":3,"sources":["C:/Users/gmont/sekndproduction/components/SearchResults/ResultCard/Parts/ImageBackground/ImageBackground.tsx"],"names":["React","css","ImageBackground","extended","imageLoaded","handleRetract","type","source","children","useState","loaded","state","setState","determineImageRatio","byWidth","imgBackground","loading"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,GAAP,MAAgB,+BAAhB;AAEA,OAAO,IAAMC,eAMX,GAAG,SANQA,eAMR,OAAsE;AAAA;;AAAA,MAAnEC,QAAmE,QAAnEA,QAAmE;AAAA,MAAzDC,WAAyD,QAAzDA,WAAyD;AAAA,MAA5CC,aAA4C,QAA5CA,aAA4C;AAAA,MAA7BC,IAA6B,QAA7BA,IAA6B;AAAA,MAAvBC,MAAuB,QAAvBA,MAAuB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,wBAC/CR,KAAK,CAACS,QAAN,CAAoC;AAC5DC,IAAAA,MAAM,EAAE;AADoD,GAApC,CAD+C;AAAA;AAAA,MAClEC,KADkE;AAAA,MAC3DC,QAD2D,wBAKzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA,MAAMC,mBAAiC,GAAG,SAApCA,mBAAoC,GAAM;AAC9C,WAAON,MAAM,KAAK,MAAX,GAAoBN,GAAG,CAACa,OAAxB,GAAkCb,GAAG,CAACa,OAA7C;AACD,GAFD;;AAIA,SACE;AACE,IAAA,SAAS,YAAKb,GAAG,CAACc,aAAT,cAA0BZ,QAAQ,GAAGF,GAAG,CAACE,QAAP,GAAkB,IAApD,cACPC,WAAW,GAAGH,GAAG,CAACS,MAAP,GAAgBT,GAAG,CAACe,OADxB,CADX;AAIE,IAAA,OAAO,EAAEX,aAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGG,QANH,CADF;AAUD,CAvCM;;GAAMN,e;;KAAAA,e","sourcesContent":["import * as React from \"react\";\r\nimport css from \"./ImageBackground.module.scss\";\r\n\r\nexport const ImageBackground: React.FC<{\r\n  type: string;\r\n  source: string;\r\n  extended: boolean;\r\n  imageLoaded: boolean;\r\n  handleRetract: () => void;\r\n}> = ({ extended, imageLoaded, handleRetract, type, source, children }) => {\r\n  const [state, setState] = React.useState<{ loaded: boolean }>({\r\n    loaded: false,\r\n  });\r\n\r\n  // const determineImageRatio: () => { width: string; height: string } = () => {\r\n  //   switch (type) {\r\n  //     case \"event\":\r\n  //       return source === \"yelp\"\r\n  //         ? { width: \"100%\", height: \"auto\" }\r\n  //         : { width: \"auto\", height: \"100%\" };\r\n  //     case \"place\":\r\n  //       return { width: \"100%\", height: \"auto\" };\r\n\r\n  //     default:\r\n  //       return { width: \"100%\", height: \"auto\" };\r\n  //   }\r\n  // };\r\n\r\n  const determineImageRatio: () => string = () => {\r\n    return source === \"yelp\" ? css.byWidth : css.byWidth;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`${css.imgBackground} ${extended ? css.extended : null} ${\r\n        imageLoaded ? css.loaded : css.loading\r\n      }`}\r\n      onClick={handleRetract}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}