{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gmont\\\\sekndproduction\\\\components\\\\DatePart\\\\NormalPiece\\\\NormalPiece.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from \"react\";\nimport css from \"./NormalPiece.module.scss\";\nimport { DetailsSection } from \"./DetailsSection\";\nimport { usePartsDispatch } from \"../../../state/DatePartsContext\";\nimport { PartImage } from \"./PartImage\";\nexport const NormalPiece = ({\n  part\n}) => {\n  const [state, setState] = React.useState({\n    extend: false\n  });\n  const dispatch = usePartsDispatch();\n\n  const determineImageBackgroundSource = () => {\n    switch (part.type) {\n      case \"place\":\n        return part.source === \"yelp\" ? part.image_url : null;\n\n      case \"event\":\n        return part.source === \"yelp\" ? part.image_url : part.images[0].url;\n\n      default:\n        return \"\";\n    }\n  };\n\n  const determinePartDetails = () => {\n    switch (part.type) {\n      case \"custom\":\n        return __jsx(DetailsSection, {\n          id: part.id,\n          details: part.details,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 11\n          }\n        });\n\n      case \"event\":\n        return;\n\n      case \"place\":\n        return;\n\n      default:\n        return null;\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: `${css.normalPiece} ${state.extend ? css.extended : null}`,\n    onClick: () => setState({\n      extend: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, __jsx(PartImage, {\n    type: part.type,\n    color: part.type === \"custom\" ? part.color : null,\n    image: determineImageBackgroundSource(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: css.partTitle,\n    onClick: () => state.extend ? setState(state => _objectSpread(_objectSpread({}, state), {}, {\n      extend: false\n    })) : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, part.name), __jsx(\"button\", {\n    className: css.delete,\n    onClick: () => dispatch({\n      type: \"REMOVE_PART\",\n      payload: {\n        id: part.id\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"X\")), state.extend ? determinePartDetails() : null);\n};","map":{"version":3,"sources":["C:/Users/gmont/sekndproduction/components/DatePart/NormalPiece/NormalPiece.tsx"],"names":["React","css","DetailsSection","usePartsDispatch","PartImage","NormalPiece","part","state","setState","useState","extend","dispatch","determineImageBackgroundSource","type","source","image_url","images","url","determinePartDetails","id","details","normalPiece","extended","color","partTitle","name","delete","payload"],"mappings":";;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,GAAP,MAAgB,2BAAhB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,gBAAT,QAAiC,iCAAjC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAO,MAAMC,WAAuD,GAAG,CAAC;AACtEC,EAAAA;AADsE,CAAD,KAEjE;AACJ,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,KAAK,CAACS,QAAN,CAAoC;AAC5DC,IAAAA,MAAM,EAAE;AADoD,GAApC,CAA1B;AAGA,QAAMC,QAAQ,GAAGR,gBAAgB,EAAjC;;AACA,QAAMS,8BAA4C,GAAG,MAAM;AACzD,YAAQN,IAAI,CAACO,IAAb;AACE,WAAK,OAAL;AACE,eAAOP,IAAI,CAACQ,MAAL,KAAgB,MAAhB,GAAyBR,IAAI,CAACS,SAA9B,GAA0C,IAAjD;;AACF,WAAK,OAAL;AACE,eAAOT,IAAI,CAACQ,MAAL,KAAgB,MAAhB,GAAyBR,IAAI,CAACS,SAA9B,GAA0CT,IAAI,CAACU,MAAL,CAAY,CAAZ,EAAeC,GAAhE;;AACF;AACE,eAAO,EAAP;AANJ;AAQD,GATD;;AAWA,QAAMC,oBAAuC,GAAG,MAAM;AACpD,YAAQZ,IAAI,CAACO,IAAb;AACE,WAAK,QAAL;AACE,eACE,MAAC,cAAD;AAAgB,UAAA,EAAE,EAAEP,IAAI,CAACa,EAAzB;AAA6B,UAAA,OAAO,EAAEb,IAAI,CAACc,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAGF,WAAK,OAAL;AACE;;AACF,WAAK,OAAL;AACE;;AACF;AACE,eAAO,IAAP;AAVJ;AAYD,GAbD;;AAeA,SACE;AACE,IAAA,SAAS,EAAG,GAAEnB,GAAG,CAACoB,WAAY,IAAGd,KAAK,CAACG,MAAN,GAAeT,GAAG,CAACqB,QAAnB,GAA8B,IAAK,EADtE;AAEE,IAAA,OAAO,EAAE,MAAMd,QAAQ,CAAC;AAAEE,MAAAA,MAAM,EAAE;AAAV,KAAD,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,MAAC,SAAD;AACE,IAAA,IAAI,EAAEJ,IAAI,CAACO,IADb;AAEE,IAAA,KAAK,EAAEP,IAAI,CAACO,IAAL,KAAc,QAAd,GAAyBP,IAAI,CAACiB,KAA9B,GAAsC,IAF/C;AAGE,IAAA,KAAK,EAAEX,8BAA8B,EAHvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EASE;AACE,IAAA,SAAS,EAAEX,GAAG,CAACuB,SADjB;AAEE,IAAA,OAAO,EAAE,MACPjB,KAAK,CAACG,MAAN,GACIF,QAAQ,CAAED,KAAD,oCAAiBA,KAAjB;AAAwBG,MAAAA,MAAM,EAAE;AAAhC,MAAD,CADZ,GAEI,IALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOJ,IAAI,CAACmB,IAAZ,CARF,EASE;AACE,IAAA,SAAS,EAAExB,GAAG,CAACyB,MADjB;AAEE,IAAA,OAAO,EAAE,MACPf,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,aAAR;AAAuBc,MAAAA,OAAO,EAAE;AAAER,QAAAA,EAAE,EAAEb,IAAI,CAACa;AAAX;AAAhC,KAAD,CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SATF,CATF,EA2BGZ,KAAK,CAACG,MAAN,GAAeQ,oBAAoB,EAAnC,GAAwC,IA3B3C,CADF;AA+BD,CAhEM","sourcesContent":["import * as React from \"react\";\r\nimport css from \"./NormalPiece.module.scss\";\r\nimport { DetailsSection } from \"./DetailsSection\";\r\nimport { usePartsDispatch } from \"../../../state/DatePartsContext\";\r\nimport { PartImage } from \"./PartImage\";\r\n\r\nexport const NormalPiece: React.FC<{ part: { [key: string]: any } }> = ({\r\n  part,\r\n}) => {\r\n  const [state, setState] = React.useState<{ extend: boolean }>({\r\n    extend: false,\r\n  });\r\n  const dispatch = usePartsDispatch();\r\n  const determineImageBackgroundSource: () => string = () => {\r\n    switch (part.type) {\r\n      case \"place\":\r\n        return part.source === \"yelp\" ? part.image_url : null;\r\n      case \"event\":\r\n        return part.source === \"yelp\" ? part.image_url : part.images[0].url;\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const determinePartDetails: () => JSX.Element = () => {\r\n    switch (part.type) {\r\n      case \"custom\":\r\n        return (\r\n          <DetailsSection id={part.id} details={part.details}></DetailsSection>\r\n        );\r\n      case \"event\":\r\n        return;\r\n      case \"place\":\r\n        return;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`${css.normalPiece} ${state.extend ? css.extended : null}`}\r\n      onClick={() => setState({ extend: true })}\r\n    >\r\n      <PartImage\r\n        type={part.type}\r\n        color={part.type === \"custom\" ? part.color : null}\r\n        image={determineImageBackgroundSource()}\r\n      ></PartImage>\r\n      <div\r\n        className={css.partTitle}\r\n        onClick={() =>\r\n          state.extend\r\n            ? setState((state) => ({ ...state, extend: false }))\r\n            : null\r\n        }\r\n      >\r\n        <span>{part.name}</span>\r\n        <button\r\n          className={css.delete}\r\n          onClick={() =>\r\n            dispatch({ type: \"REMOVE_PART\", payload: { id: part.id } })\r\n          }\r\n        >\r\n          X\r\n        </button>\r\n      </div>\r\n      {state.extend ? determinePartDetails() : null}\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}