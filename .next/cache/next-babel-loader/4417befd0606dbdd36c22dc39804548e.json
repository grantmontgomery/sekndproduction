{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\gmont\\\\sekndproduction\\\\components\\\\SearchResults\\\\ResultCard\\\\Parts\\\\EventsInfo\\\\EventTimes\\\\EventTimes.tsx\";\n\nvar __jsx = React.createElement;\nimport * as React from \"react\";\nimport css from \"./EventTimes.module.scss\";\nexport var EventTimes = function EventTimes(_ref) {\n  var startTime = _ref.startTime,\n      endTime = _ref.endTime,\n      source = _ref.source;\n\n  var parseYelpTimes = function parseYelpTimes() {\n    var date = new Date(startTime);\n    console.log(date.toLocaleDateString(\"en-US\"));\n    return date.toLocaleDateString(\"en-US\");\n  };\n\n  var determineSource = function determineSource() {\n    return source === \"yelp\" ? parseYelpTimes() : null;\n  };\n\n  return __jsx(\"div\", {\n    className: css.times,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, determineSource()), __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \" 9/26/2020 8:30 PM\"));\n};\n_c = EventTimes;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventTimes\");","map":{"version":3,"sources":["C:/Users/gmont/sekndproduction/components/SearchResults/ResultCard/Parts/EventsInfo/EventTimes/EventTimes.tsx"],"names":["React","css","EventTimes","startTime","endTime","source","parseYelpTimes","date","Date","console","log","toLocaleDateString","determineSource","times"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,GAAP,MAAgB,0BAAhB;AAEA,OAAO,IAAMC,UAIX,GAAG,SAJQA,UAIR,OAAoC;AAAA,MAAjCC,SAAiC,QAAjCA,SAAiC;AAAA,MAAtBC,OAAsB,QAAtBA,OAAsB;AAAA,MAAbC,MAAa,QAAbA,MAAa;;AACvC,MAAMC,cAA4B,GAAG,SAA/BA,cAA+B,GAAM;AACzC,QAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASL,SAAT,CAAb;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,kBAAL,SAAZ;AACA,WAAOJ,IAAI,CAACI,kBAAL,SAAP;AACD,GAJD;;AAMA,MAAMC,eAA6B,GAAG,SAAhCA,eAAgC,GAAM;AAC1C,WAAOP,MAAM,KAAK,MAAX,GAAoBC,cAAc,EAAlC,GAAuC,IAA9C;AACD,GAFD;;AAIA,SACE;AAAK,IAAA,SAAS,EAAEL,GAAG,CAACY,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOD,eAAe,EAAtB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,CADF;AAMD,CArBM;KAAMV,U","sourcesContent":["import * as React from \"react\";\r\nimport css from \"./EventTimes.module.scss\";\r\n\r\nexport const EventTimes: React.FC<{\r\n  startTime: string;\r\n  endTime: string | null;\r\n  source: string;\r\n}> = ({ startTime, endTime, source }) => {\r\n  const parseYelpTimes: () => string = () => {\r\n    const date = new Date(startTime);\r\n    console.log(date.toLocaleDateString(`en-US`));\r\n    return date.toLocaleDateString(`en-US`);\r\n  };\r\n\r\n  const determineSource: () => string = () => {\r\n    return source === \"yelp\" ? parseYelpTimes() : null;\r\n  };\r\n\r\n  return (\r\n    <div className={css.times}>\r\n      <span>{determineSource()}</span>\r\n      <span> 9/26/2020 8:30 PM</span>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}