{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar ScheduleGrid = /*#__PURE__*/function () {\n  function ScheduleGrid(unixStartDate, unixEndDate) {\n    _classCallCheck(this, ScheduleGrid);\n\n    _defineProperty(this, \"startTime\", void 0);\n\n    _defineProperty(this, \"startDate\", void 0);\n\n    _defineProperty(this, \"endTime\", void 0);\n\n    _defineProperty(this, \"endDate\", void 0);\n\n    _defineProperty(this, \"numberofSquares\", void 0);\n\n    _defineProperty(this, \"startHour\", void 0);\n\n    _defineProperty(this, \"endHour\", void 0);\n\n    this.startDate = \"\";\n    this.startTime = unixStartDate;\n    this.endDate = \"\";\n    this.endTime = unixEndDate;\n    this.startHour = \"\";\n    this.endHour = \"\";\n    this.numberofSquares = 0;\n  }\n\n  _createClass(ScheduleGrid, [{\n    key: \"setSquares\",\n    value: function setSquares() {\n      var timeDifference = this.endTime - this.startTime;\n      var hours = Math.floor(timeDifference / 3600000);\n      var numColumns = hours * 2 + 4;\n      var numSquares = numColumns * 5;\n      this.numberofSquares = numSquares;\n    }\n  }, {\n    key: \"name\",\n    value: function name() {}\n  }]);\n\n  return ScheduleGrid;\n}(); // const dispatch = useGridDispatch();\n\n\nexport default function setSquares(unixStartDate, unixEndDate) {\n  var timeDifference = unixEndDate - unixStartDate;\n  var hours = Math.floor(timeDifference / 3600);\n  var numColumns = hours * 2 + 4;\n  var numberOfSquares = numColumns * 5;\n}","map":{"version":3,"sources":["C:/Users/gmont/sekndproduction/components/SearchBox/Logic/setScheduleGrid.ts"],"names":["ScheduleGrid","unixStartDate","unixEndDate","startDate","startTime","endDate","endTime","startHour","endHour","numberofSquares","timeDifference","hours","Math","floor","numColumns","numSquares","setSquares","numberOfSquares"],"mappings":";;;;IAEMA,Y;AASJ,wBAAYC,aAAZ,EAA2BC,WAA3B,EAAwC;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACtC,SAAKC,SAAL,GAAiB,EAAjB;AACA,SAAKC,SAAL,GAAiBH,aAAjB;AACA,SAAKI,OAAL,GAAe,EAAf;AACA,SAAKC,OAAL,GAAeJ,WAAf;AACA,SAAKK,SAAL,GAAiB,EAAjB;AACA,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKC,eAAL,GAAuB,CAAvB;AACD;;;;iCAEmB;AAClB,UAAMC,cAAsB,GAAG,KAAKJ,OAAL,GAAe,KAAKF,SAAnD;AACA,UAAMO,KAAa,GAAGC,IAAI,CAACC,KAAL,CAAWH,cAAc,GAAG,OAA5B,CAAtB;AACA,UAAMI,UAAkB,GAAGH,KAAK,GAAG,CAAR,GAAY,CAAvC;AACA,UAAMI,UAAkB,GAAGD,UAAU,GAAG,CAAxC;AACA,WAAKL,eAAL,GAAuBM,UAAvB;AACD;;;2BAEa,CAAE;;;;KAGlB;;;AAEA,eAAe,SAASC,UAAT,CACbf,aADa,EAEbC,WAFa,EAGP;AACN,MAAMQ,cAAsB,GAAGR,WAAW,GAAGD,aAA7C;AACA,MAAMU,KAAa,GAAGC,IAAI,CAACC,KAAL,CAAWH,cAAc,GAAG,IAA5B,CAAtB;AACA,MAAMI,UAAkB,GAAGH,KAAK,GAAG,CAAR,GAAY,CAAvC;AACA,MAAMM,eAAuB,GAAGH,UAAU,GAAG,CAA7C;AACD","sourcesContent":["import { Dispatch } from \"react\";\r\n\r\nclass ScheduleGrid {\r\n  startTime: number;\r\n  startDate: string;\r\n  endTime: number;\r\n  endDate: string;\r\n  numberofSquares: number;\r\n  startHour: string;\r\n  endHour: string;\r\n\r\n  constructor(unixStartDate, unixEndDate) {\r\n    this.startDate = \"\";\r\n    this.startTime = unixStartDate;\r\n    this.endDate = \"\";\r\n    this.endTime = unixEndDate;\r\n    this.startHour = \"\";\r\n    this.endHour = \"\";\r\n    this.numberofSquares = 0;\r\n  }\r\n\r\n  public setSquares() {\r\n    const timeDifference: number = this.endTime - this.startTime;\r\n    const hours: number = Math.floor(timeDifference / 3600000);\r\n    const numColumns: number = hours * 2 + 4;\r\n    const numSquares: number = numColumns * 5;\r\n    this.numberofSquares = numSquares;\r\n  }\r\n\r\n  public name() {}\r\n}\r\n\r\n// const dispatch = useGridDispatch();\r\n\r\nexport default function setSquares(\r\n  unixStartDate: number,\r\n  unixEndDate: number\r\n): void {\r\n  const timeDifference: number = unixEndDate - unixStartDate;\r\n  const hours: number = Math.floor(timeDifference / 3600);\r\n  const numColumns: number = hours * 2 + 4;\r\n  const numberOfSquares: number = numColumns * 5;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}