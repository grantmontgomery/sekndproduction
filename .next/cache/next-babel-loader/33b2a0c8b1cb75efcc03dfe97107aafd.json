{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar ScheduleGrid = /*#__PURE__*/function () {\n  function ScheduleGrid(unixStartDate, unixEndDate) {\n    _classCallCheck(this, ScheduleGrid);\n\n    _defineProperty(this, \"unixStartDate\", void 0);\n\n    _defineProperty(this, \"unixEndDate\", void 0);\n\n    _defineProperty(this, \"numberofSquares\", void 0);\n\n    _defineProperty(this, \"startHour\", void 0);\n\n    _defineProperty(this, \"endHour\", void 0);\n\n    this.unixStartDate = unixStartDate;\n    this.unixEndDate = unixEndDate;\n    this.startHour = \"\";\n    this.endHour = \"\";\n    this.numberofSquares = 0;\n  }\n\n  _createClass(ScheduleGrid, [{\n    key: \"setSquares\",\n    value: function setSquares() {\n      var timeDifference = this.unixEndDate - this.unixStartDate;\n      var hours = Math.floor(timeDifference / 3600);\n      var numColumns = hours * 2 + 4;\n      var numberOfSquares = numColumns * 5;\n      this.numberofSquares = numberOfSquares;\n    }\n  }, {\n    key: \"setHours\",\n    value: function setHours() {\n      var startDate = new Date(this.unixStartDate * 1000);\n      var endDate = new Date(this.unixEndDate * 1000);\n      var startHour = startDate.getHours();\n      var endHour = endDate.getHours();\n      this.startHour = startHour.toString();\n      this.endHour = endHour.toString();\n    }\n  }, {\n    key: \"setGrid\",\n    value: function setGrid() {\n      this.setSquares();\n      this.setHours();\n    }\n  }]);\n\n  return ScheduleGrid;\n}(); // const dispatch = useGridDispatch();\n\n\nexport default function setSquares(unixStartDate, unixEndDate) {\n  var newDate = new ScheduleGrid(unixStartDate, unixEndDate);\n  newDate.setGrid();\n  console.log(newDate);\n}","map":{"version":3,"sources":["C:/Users/gmont/sekndproduction/components/SearchBox/Logic/setScheduleGrid.ts"],"names":["ScheduleGrid","unixStartDate","unixEndDate","startHour","endHour","numberofSquares","timeDifference","hours","Math","floor","numColumns","numberOfSquares","startDate","Date","endDate","getHours","toString","setSquares","setHours","newDate","setGrid","console","log"],"mappings":";;;;IAEMA,Y;AAOJ,wBAAYC,aAAZ,EAA2BC,WAA3B,EAAwC;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACtC,SAAKD,aAAL,GAAqBA,aAArB;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACA,SAAKC,SAAL,GAAiB,EAAjB;AACA,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKC,eAAL,GAAuB,CAAvB;AACD;;;;iCAEmB;AAClB,UAAMC,cAAsB,GAAG,KAAKJ,WAAL,GAAmB,KAAKD,aAAvD;AACA,UAAMM,KAAa,GAAGC,IAAI,CAACC,KAAL,CAAWH,cAAc,GAAG,IAA5B,CAAtB;AACA,UAAMI,UAAkB,GAAGH,KAAK,GAAG,CAAR,GAAY,CAAvC;AACA,UAAMI,eAAuB,GAAGD,UAAU,GAAG,CAA7C;AACA,WAAKL,eAAL,GAAuBM,eAAvB;AACD;;;+BAEiB;AAChB,UAAMC,SAAe,GAAG,IAAIC,IAAJ,CAAS,KAAKZ,aAAL,GAAqB,IAA9B,CAAxB;AACA,UAAMa,OAAa,GAAG,IAAID,IAAJ,CAAS,KAAKX,WAAL,GAAmB,IAA5B,CAAtB;AAEA,UAAMC,SAAiB,GAAGS,SAAS,CAACG,QAAV,EAA1B;AACA,UAAMX,OAAe,GAAGU,OAAO,CAACC,QAAR,EAAxB;AAEA,WAAKZ,SAAL,GAAiBA,SAAS,CAACa,QAAV,EAAjB;AACA,WAAKZ,OAAL,GAAeA,OAAO,CAACY,QAAR,EAAf;AACD;;;8BAEgB;AACf,WAAKC,UAAL;AACA,WAAKC,QAAL;AACD;;;;KAGH;;;AAEA,eAAe,SAASD,UAAT,CACbhB,aADa,EAEbC,WAFa,EAGP;AACN,MAAMiB,OAAO,GAAG,IAAInB,YAAJ,CAAiBC,aAAjB,EAAgCC,WAAhC,CAAhB;AACAiB,EAAAA,OAAO,CAACC,OAAR;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACD","sourcesContent":["import { Dispatch } from \"react\";\r\n\r\nclass ScheduleGrid {\r\n  unixStartDate: number;\r\n  unixEndDate: number;\r\n  numberofSquares: number;\r\n  startHour: string;\r\n  endHour: string;\r\n\r\n  constructor(unixStartDate, unixEndDate) {\r\n    this.unixStartDate = unixStartDate;\r\n    this.unixEndDate = unixEndDate;\r\n    this.startHour = \"\";\r\n    this.endHour = \"\";\r\n    this.numberofSquares = 0;\r\n  }\r\n\r\n  public setSquares() {\r\n    const timeDifference: number = this.unixEndDate - this.unixStartDate;\r\n    const hours: number = Math.floor(timeDifference / 3600);\r\n    const numColumns: number = hours * 2 + 4;\r\n    const numberOfSquares: number = numColumns * 5;\r\n    this.numberofSquares = numberOfSquares;\r\n  }\r\n\r\n  public setHours() {\r\n    const startDate: Date = new Date(this.unixStartDate * 1000);\r\n    const endDate: Date = new Date(this.unixEndDate * 1000);\r\n\r\n    const startHour: number = startDate.getHours();\r\n    const endHour: number = endDate.getHours();\r\n\r\n    this.startHour = startHour.toString();\r\n    this.endHour = endHour.toString();\r\n  }\r\n\r\n  public setGrid() {\r\n    this.setSquares();\r\n    this.setHours();\r\n  }\r\n}\r\n\r\n// const dispatch = useGridDispatch();\r\n\r\nexport default function setSquares(\r\n  unixStartDate: number,\r\n  unixEndDate: number\r\n): void {\r\n  const newDate = new ScheduleGrid(unixStartDate, unixEndDate);\r\n  newDate.setGrid();\r\n  console.log(newDate);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}