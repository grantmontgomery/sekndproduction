{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gmont\\\\sekndproduction\\\\components\\\\SearchResults\\\\ResultCard\\\\Parts\\\\EventsInfo\\\\EventTimesVenue\\\\EventTimesVenue.tsx\";\nvar __jsx = React.createElement;\nimport * as React from \"react\";\nimport css from \"./EventTimesVenue.module.scss\";\nexport const EventTimesVenue = ({\n  startTime,\n  endTime,\n  source,\n  venue\n}) => {\n  const parseYelpTimes = () => {\n    const yelpStartObject = new Date(startTime);\n    const yelpEndObject = new Date(endTime); //yelp start time\n\n    const yelpStartTime = yelpStartObject.toLocaleTimeString(\"en-US\");\n    const startAmPm = yelpStartTime.substring(yelpStartTime.length - 2);\n    const startWithoutSeconds = yelpStartTime.substring(0, yelpStartTime.length - 6);\n    const yelpStartFormattedTime = `${startWithoutSeconds} ${startAmPm}`; //yelp start date\n\n    const yelpStartDate = `${yelpStartObject.toLocaleDateString(\"en-US\", {\n      weekday: \"long\"\n    })} ${yelpStartObject.toLocaleDateString()}`; //yelp end time\n\n    const yelpEndTime = yelpEndObject.toLocaleTimeString(\"en-US\");\n    const endAmPm = yelpEndTime.substring(yelpEndTime.length - 2);\n    const endWithoutSeconds = yelpEndTime.substring(0, yelpEndTime.length - 6);\n    const yelpEndFormattedTime = `${endWithoutSeconds} ${endAmPm}`; //yelp end Date\n\n    const yelpEndDate = yelpEndObject.toLocaleDateString();\n    return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 12\n      }\n    }, `${yelpStartDate} ${yelpStartFormattedTime}`);\n  };\n\n  const parseTicketMasterTime = () => {\n    const ticketmasterStartObject = new Date(startTime);\n    const ticketmasterStartTime = ticketmasterStartObject.toLocaleTimeString(\"en-US\");\n    const startAmPm = ticketmasterStartTime.substring(ticketmasterStartTime.length - 2);\n    const startWithoutSeconds = ticketmasterStartTime.substring(0, ticketmasterStartTime.length - 6);\n    const ticketmasterStartFormattedTime = `${startWithoutSeconds} ${startAmPm}`;\n    const ticketmasterDate = `${ticketmasterStartObject.toLocaleDateString(\"en-US\", {\n      weekday: \"long\"\n    })} ${ticketmasterStartObject.toLocaleDateString()}`;\n    return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 12\n      }\n    }, `${ticketmasterDate} ${ticketmasterStartFormattedTime}`);\n  };\n\n  const determineSource = () => {\n    return source === \"yelp\" ? parseYelpTimes() : parseTicketMasterTime();\n  };\n\n  return __jsx(\"div\", {\n    className: css.times,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 10\n    }\n  }, determineSource());\n};","map":{"version":3,"sources":["C:/Users/gmont/sekndproduction/components/SearchResults/ResultCard/Parts/EventsInfo/EventTimesVenue/EventTimesVenue.tsx"],"names":["React","css","EventTimesVenue","startTime","endTime","source","venue","parseYelpTimes","yelpStartObject","Date","yelpEndObject","yelpStartTime","toLocaleTimeString","startAmPm","substring","length","startWithoutSeconds","yelpStartFormattedTime","yelpStartDate","toLocaleDateString","weekday","yelpEndTime","endAmPm","endWithoutSeconds","yelpEndFormattedTime","yelpEndDate","parseTicketMasterTime","ticketmasterStartObject","ticketmasterStartTime","ticketmasterStartFormattedTime","ticketmasterDate","determineSource","times"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport css from \"./EventTimesVenue.module.scss\";\r\n\r\nexport const EventTimesVenue: React.FC<{\r\n  startTime: string;\r\n  endTime: string | null;\r\n  source: string;\r\n  venue: string;\r\n}> = ({ startTime, endTime, source, venue }) => {\r\n  const parseYelpTimes: () => JSX.Element = () => {\r\n    const yelpStartObject: Date = new Date(startTime);\r\n    const yelpEndObject: Date = new Date(endTime);\r\n\r\n    //yelp start time\r\n    const yelpStartTime: string = yelpStartObject.toLocaleTimeString(\"en-US\");\r\n    const startAmPm: string = yelpStartTime.substring(yelpStartTime.length - 2);\r\n    const startWithoutSeconds: string = yelpStartTime.substring(\r\n      0,\r\n      yelpStartTime.length - 6\r\n    );\r\n\r\n    const yelpStartFormattedTime: string = `${startWithoutSeconds} ${startAmPm}`;\r\n\r\n    //yelp start date\r\n\r\n    const yelpStartDate: string = `${yelpStartObject.toLocaleDateString(\r\n      \"en-US\",\r\n      { weekday: \"long\" }\r\n    )} ${yelpStartObject.toLocaleDateString()}`;\r\n\r\n    //yelp end time\r\n\r\n    const yelpEndTime: string = yelpEndObject.toLocaleTimeString(\"en-US\");\r\n    const endAmPm: string = yelpEndTime.substring(yelpEndTime.length - 2);\r\n    const endWithoutSeconds: string = yelpEndTime.substring(\r\n      0,\r\n      yelpEndTime.length - 6\r\n    );\r\n\r\n    const yelpEndFormattedTime: string = `${endWithoutSeconds} ${endAmPm}`;\r\n\r\n    //yelp end Date\r\n\r\n    const yelpEndDate: string = yelpEndObject.toLocaleDateString();\r\n\r\n    return <p>{`${yelpStartDate} ${yelpStartFormattedTime}`}</p>;\r\n  };\r\n\r\n  const parseTicketMasterTime: () => JSX.Element = () => {\r\n    const ticketmasterStartObject: Date = new Date(startTime);\r\n\r\n    const ticketmasterStartTime: string = ticketmasterStartObject.toLocaleTimeString(\r\n      \"en-US\"\r\n    );\r\n    const startAmPm: string = ticketmasterStartTime.substring(\r\n      ticketmasterStartTime.length - 2\r\n    );\r\n    const startWithoutSeconds: string = ticketmasterStartTime.substring(\r\n      0,\r\n      ticketmasterStartTime.length - 6\r\n    );\r\n\r\n    const ticketmasterStartFormattedTime: string = `${startWithoutSeconds} ${startAmPm}`;\r\n\r\n    const ticketmasterDate: string = `${ticketmasterStartObject.toLocaleDateString(\r\n      \"en-US\",\r\n      { weekday: \"long\" }\r\n    )} ${ticketmasterStartObject.toLocaleDateString()}`;\r\n\r\n    return <p>{`${ticketmasterDate} ${ticketmasterStartFormattedTime}`}</p>;\r\n  };\r\n\r\n  const determineSource: () => JSX.Element = () => {\r\n    return source === \"yelp\" ? parseYelpTimes() : parseTicketMasterTime();\r\n  };\r\n\r\n  return <div className={css.times}>{determineSource()}</div>;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}