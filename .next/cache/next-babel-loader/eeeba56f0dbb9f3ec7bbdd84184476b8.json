{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\gmont\\\\sekndproduction\\\\pages\\\\search\\\\[queried].tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport * as React from \"react\";\nimport { Layout, ResultCard, SekndLoader } from \"../../components\";\nimport useAPICalls from \"../../swr/useAPICalls\";\nimport { useRouter } from \"next/router\";\nimport css from \"../../styles/Queried.module.scss\";\n\nvar QueryDisplay = function QueryDisplay(_ref) {\n  _s();\n\n  var loading = _ref.loading,\n      items = _ref.items,\n      searchType = _ref.searchType;\n\n  var _React$useState = React.useState({\n    resultsType: \"\"\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  React.useEffect(function () {\n    if (searchType === \"EVENTS\") setState({\n      resultsType: \"EVENTS\"\n    });\n    setState({\n      resultsType: \"PLACES\"\n    });\n  }, []);\n\n  var setTypeButtons = function setTypeButtons() {\n    if (searchType !== \"ALL\") return null;\n    return __jsx(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, __jsx(\"button\", {\n      className: css.typeButton,\n      onClick: function onClick() {\n        return setState({\n          resultsType: \"PLACES\"\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, \"Places\"), __jsx(\"button\", {\n      className: css.typeButton,\n      onClick: function onClick() {\n        return setState({\n          resultsType: \"EVENTS\"\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, \"Events\"));\n  };\n\n  var setItems = function setItems() {\n    if (loading) return __jsx(SekndLoader, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    });\n\n    if (searchType === \"ALL\") {\n      __jsx(\"div\", {\n        className: css.resultsSlider,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }\n      }, state.resultsType === \"PLACES\" ? items === null || items === void 0 ? void 0 : items.filter(function (item) {\n        return item.type === \"place\";\n      }).map(function (item) {\n        return __jsx(ResultCard, {\n          key: item.id,\n          item: item,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }\n        });\n      }) : items === null || items === void 0 ? void 0 : items.filter(function (item) {\n        return item.type === \"event\";\n      }).map(function (item) {\n        return __jsx(ResultCard, {\n          key: item.id,\n          item: item,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }\n        });\n      }));\n    }\n\n    return __jsx(\"div\", {\n      className: css.resultsSlider,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, items === null || items === void 0 ? void 0 : items.map(function (item) {\n      return __jsx(ResultCard, {\n        key: item.id,\n        item: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      });\n    }));\n  };\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, __jsx(\"main\", {\n    className: css.queriedPage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, __jsx(\"section\", {\n    className: css.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, setTypeButtons(), __jsx(\"button\", {\n    className: css.sort,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"Sort\")), setItems()));\n};\n\n_s(QueryDisplay, \"I97e2cl6KHkNVF7ElKr87MCTP7M=\");\n\n_c = QueryDisplay;\nexport default function Queried() {\n  _s2();\n\n  var _React$useState3 = React.useState({\n    loading: true\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      state = _React$useState4[0],\n      setState = _React$useState4[1];\n\n  var _React$useState5 = React.useState({\n    results: {\n      items: [],\n      errors: {\n        yelpEventsError: \"\",\n        yelpPlacesError: \"\",\n        ticketmasterError: \"\"\n      }\n    }\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      results = _React$useState6[0],\n      setResults = _React$useState6[1];\n\n  var router = useRouter();\n  var urlStart = true ? \"http://localhost:3000\" : \"https://sekndapp.com\";\n\n  var setSearchParameters = function setSearchParameters() {\n    var query = router.query;\n    if (!query.queried) return null;\n    if (query.searchType) return query;\n    var checkURLIsString = query.queried.toString();\n    var paramValueArray = checkURLIsString.split(\"+\");\n    var SearchParams = {};\n    paramValueArray.forEach(function (param) {\n      var indexOfEqual = param.search(\"=\");\n      if (indexOfEqual === -1) return;else {\n        var paramKey = param.substring(0, indexOfEqual);\n        var paramValue = param.substring(indexOfEqual + 1);\n        SearchParams[paramKey] = paramValue;\n      }\n    });\n    return SearchParams;\n  };\n\n  var _useAPICalls = useAPICalls(setSearchParameters(), urlStart),\n      items = _useAPICalls.items,\n      loading = _useAPICalls.loading,\n      errors = _useAPICalls.errors;\n}\n\n_s2(Queried, \"j2R8rrv2JDPsvy49QUukge7V3Bg=\", false, function () {\n  return [useRouter, useAPICalls];\n});\n\n_c2 = Queried;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"QueryDisplay\");\n$RefreshReg$(_c2, \"Queried\");","map":{"version":3,"sources":["C:/Users/gmont/sekndproduction/pages/search/[queried].tsx"],"names":["React","Layout","ResultCard","SekndLoader","useAPICalls","useRouter","css","QueryDisplay","loading","items","searchType","useState","resultsType","state","setState","useEffect","setTypeButtons","typeButton","setItems","resultsSlider","filter","item","type","map","id","queriedPage","header","sort","Queried","results","errors","yelpEventsError","yelpPlacesError","ticketmasterError","setResults","router","urlStart","setSearchParameters","query","queried","checkURLIsString","toString","paramValueArray","split","SearchParams","forEach","param","indexOfEqual","search","paramKey","substring","paramValue"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport { Layout, ResultCard, SekndLoader } from \"../../components\";\r\nimport useAPICalls from \"../../swr/useAPICalls\";\r\nimport { NextRouter, useRouter } from \"next/router\";\r\nimport useSWR, { responseInterface } from \"swr\";\r\nimport css from \"../../styles/Queried.module.scss\";\r\nimport { ParsedUrlQuery } from \"querystring\";\r\nimport { SearchBox } from \"../../components/SearchBox\";\r\n\r\ntype Results = {\r\n  items: { [key: string]: any }[];\r\n  errors: {\r\n    yelpPlacesError?: string | undefined;\r\n    yelpEventsError?: string | undefined;\r\n    ticketmasterError?: string | undefined;\r\n  };\r\n};\r\n\r\ntype APIResponse = { [key: string]: any }[];\r\n\r\ntype SearchParams = { [key: string]: any };\r\n\r\nconst QueryDisplay: React.FC<{\r\n  loading: boolean;\r\n  searchType: string;\r\n  items?: Results[\"items\"];\r\n}> = ({ loading, items, searchType }) => {\r\n  const [state, setState] = React.useState<{ resultsType: string }>({\r\n    resultsType: \"\",\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (searchType === \"EVENTS\") setState({ resultsType: \"EVENTS\" });\r\n    setState({ resultsType: \"PLACES\" });\r\n  }, []);\r\n\r\n  const setTypeButtons: () => JSX.Element = () => {\r\n    if (searchType !== \"ALL\") return null;\r\n    return (\r\n      <React.Fragment>\r\n        <button\r\n          className={css.typeButton}\r\n          onClick={() => setState({ resultsType: \"PLACES\" })}\r\n        >\r\n          Places\r\n        </button>\r\n        <button\r\n          className={css.typeButton}\r\n          onClick={() => setState({ resultsType: \"EVENTS\" })}\r\n        >\r\n          Events\r\n        </button>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const setItems: () => JSX.Element = () => {\r\n    if (loading) return <SekndLoader></SekndLoader>;\r\n    if (searchType === \"ALL\") {\r\n      <div className={css.resultsSlider}>\r\n        {state.resultsType === \"PLACES\"\r\n          ? items\r\n              ?.filter((item) => item.type === \"place\")\r\n              .map((item) => (\r\n                <ResultCard key={item.id} item={item}></ResultCard>\r\n              ))\r\n          : items\r\n              ?.filter((item) => item.type === \"event\")\r\n              .map((item) => (\r\n                <ResultCard key={item.id} item={item}></ResultCard>\r\n              ))}\r\n      </div>;\r\n    }\r\n\r\n    return (\r\n      <div className={css.resultsSlider}>\r\n        {items?.map((item) => (\r\n          <ResultCard key={item.id} item={item}></ResultCard>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <main className={css.queriedPage}>\r\n        {/* <section className={css.queryDisplay}></section> */}\r\n        <section className={css.header}>\r\n          {setTypeButtons()}\r\n          <button className={css.sort}>Sort</button>\r\n        </section>\r\n        {setItems()}\r\n      </main>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default function Queried(): JSX.Element {\r\n  const [state, setState] = React.useState<{ loading: boolean }>({\r\n    loading: true,\r\n  });\r\n  const [results, setResults] = React.useState<{ results: Results }>({\r\n    results: {\r\n      items: [],\r\n      errors: {\r\n        yelpEventsError: \"\",\r\n        yelpPlacesError: \"\",\r\n        ticketmasterError: \"\",\r\n      },\r\n    },\r\n  });\r\n  const router: NextRouter = useRouter();\r\n\r\n  const urlStart: string =\r\n    process.env.NODE_ENV !== \"production\"\r\n      ? \"http://localhost:3000\"\r\n      : \"https://sekndapp.com\";\r\n\r\n  const setSearchParameters: () => { [key: string]: any } | null = () => {\r\n    const { query } = router;\r\n    if (!query.queried) return null;\r\n    if (query.searchType) return query;\r\n\r\n    const checkURLIsString: string = query.queried.toString();\r\n    const paramValueArray: string[] = checkURLIsString.split(\"+\");\r\n\r\n    const SearchParams: SearchParams = {};\r\n\r\n    paramValueArray.forEach((param) => {\r\n      const indexOfEqual: number = param.search(\"=\");\r\n      if (indexOfEqual === -1) return;\r\n      else {\r\n        const paramKey: string = param.substring(0, indexOfEqual);\r\n        const paramValue: string = param.substring(indexOfEqual + 1);\r\n        SearchParams[paramKey] = paramValue;\r\n      }\r\n    });\r\n    return SearchParams;\r\n  };\r\n\r\n  const { items, loading, errors } = useAPICalls(\r\n    setSearchParameters(),\r\n    urlStart\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}