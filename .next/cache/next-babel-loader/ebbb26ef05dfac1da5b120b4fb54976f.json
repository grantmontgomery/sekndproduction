{"ast":null,"code":"export default (async (req, res) => {\n  try {\n    if (req.method !== \"GET\") {\n      const {\n        location,\n        radius,\n        term\n      } = req.body;\n      const yelpBusinesses = new URL(\"https://api.yelp.com/v3/businesses/search\"),\n            params = {\n        location,\n        radius,\n        term\n      };\n      Object.keys(params).forEach(key => yelpBusinesses.searchParams.append(key, params[key]));\n      const yelpUrlString = yelpBusinesses.toString(); //function\n\n      const yelpResponse = await fetch(yelpUrlString, {\n        headers: {\n          Authorization: `Bearer ${process.env.YELP_API_KEY}`\n        }\n      });\n      const jsonResponse = await yelpResponse.json();\n      return res.send(jsonResponse);\n    }\n\n    return res.status(200).end(\"Yelp Businesses API\");\n  } catch (err) {\n    return res.send(err);\n  }\n});","map":{"version":3,"sources":["C:/Users/gmont/sekndproduction/pages/api/yelpBusinessesAPI.ts"],"names":["req","res","method","location","radius","term","body","yelpBusinesses","URL","params","Object","keys","forEach","key","searchParams","append","yelpUrlString","toString","yelpResponse","fetch","headers","Authorization","process","env","YELP_API_KEY","jsonResponse","json","send","status","end","err"],"mappings":"AAQA,gBAAe,OAAOA,GAAP,EAA4BC,GAA5B,KAAqD;AAClE,MAAI;AACF,QAAID,GAAG,CAACE,MAAJ,KAAe,KAAnB,EAA0B;AACxB,YAAM;AAAEC,QAAAA,QAAF;AAAYC,QAAAA,MAAZ;AAAoBC,QAAAA;AAApB,UAA6BL,GAAG,CAACM,IAAvC;AACA,YAAMC,cAAmB,GAAG,IAAIC,GAAJ,CACxB,2CADwB,CAA5B;AAAA,YAGEC,MAAc,GAAG;AACfN,QAAAA,QADe;AAEfC,QAAAA,MAFe;AAGfC,QAAAA;AAHe,OAHnB;AAQAK,MAAAA,MAAM,CAACC,IAAP,CAAYF,MAAZ,EAAoBG,OAApB,CAA6BC,GAAD,IAC1BN,cAAc,CAACO,YAAf,CAA4BC,MAA5B,CAAmCF,GAAnC,EAAwCJ,MAAM,CAACI,GAAD,CAA9C,CADF;AAIA,YAAMG,aAAqB,GAAGT,cAAc,CAACU,QAAf,EAA9B,CAdwB,CAgBxB;;AAEA,YAAMC,YAAsB,GAAG,MAAMC,KAAK,CAACH,aAAD,EAAgB;AACxDI,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,UAASC,OAAO,CAACC,GAAR,CAAYC,YAAa;AAD3C;AAD+C,OAAhB,CAA1C;AAKA,YAAMC,YAAkB,GAAG,MAAMP,YAAY,CAACQ,IAAb,EAAjC;AACA,aAAOzB,GAAG,CAAC0B,IAAJ,CAASF,YAAT,CAAP;AACD;;AACD,WAAOxB,GAAG,CAAC2B,MAAJ,CAAW,GAAX,EAAgBC,GAAhB,CAAoB,qBAApB,CAAP;AACD,GA5BD,CA4BE,OAAOC,GAAP,EAAY;AACZ,WAAO7B,GAAG,CAAC0B,IAAJ,CAASG,GAAT,CAAP;AACD;AACF,CAhCD","sourcesContent":["import { NextApiRequest, NextApiResponse } from \"next\";\r\n\r\ntype Params = {\r\n  location: string;\r\n  radius: number;\r\n  term: string;\r\n};\r\n\r\nexport default async (req: NextApiRequest, res: NextApiResponse) => {\r\n  try {\r\n    if (req.method !== \"GET\") {\r\n      const { location, radius, term } = req.body;\r\n      const yelpBusinesses: URL = new URL(\r\n          \"https://api.yelp.com/v3/businesses/search\"\r\n        ),\r\n        params: Params = {\r\n          location,\r\n          radius,\r\n          term,\r\n        };\r\n      Object.keys(params).forEach((key) =>\r\n        yelpBusinesses.searchParams.append(key, params[key])\r\n      );\r\n\r\n      const yelpUrlString: string = yelpBusinesses.toString();\r\n\r\n      //function\r\n\r\n      const yelpResponse: Response = await fetch(yelpUrlString, {\r\n        headers: {\r\n          Authorization: `Bearer ${process.env.YELP_API_KEY}`,\r\n        },\r\n      });\r\n      const jsonResponse: JSON = await yelpResponse.json();\r\n      return res.send(jsonResponse);\r\n    }\r\n    return res.status(200).end(\"Yelp Businesses API\");\r\n  } catch (err) {\r\n    return res.send(err);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}