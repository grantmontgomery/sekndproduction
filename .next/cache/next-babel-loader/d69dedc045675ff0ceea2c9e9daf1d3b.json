{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { PlacesPrice } from \"./PlacesInfo\";\nimport * as React from \"react\";\nimport css from \"./ResultCard.module.scss\";\nexport var ResultCard = function ResultCard(_ref) {\n  var item = _ref.item;\n\n  var _React$useState = React.useState({\n    added: false\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var determineCardType = function determineCardType(type) {\n    return;\n  };\n\n  return __jsx(\"div\", {\n    className: css.resultCard\n  }, __jsx(\"span\", {\n    className: css.title\n  }, \"Title\"), __jsx(\"button\", {\n    className: css.addButton,\n    onClick: function onClick() {\n      return state.added ? setState(function (state) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          added: false\n        });\n      }) : setState(function (state) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          added: true\n        });\n      });\n    }\n  }, state.added ? \"Remove from Parts -\" : \"Add to Parts +\"), __jsx(PlacesPrice, {\n    price: [\"\", \"\", \"\"]\n  }), __jsx(\"div\", {\n    className: css.starsWrapper\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}