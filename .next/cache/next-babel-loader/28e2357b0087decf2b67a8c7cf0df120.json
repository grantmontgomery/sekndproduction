{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\gmont\\\\sekndproduction\\\\components\\\\SearchResults\\\\ResultCard\\\\ResultCard.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport * as React from \"react\";\nimport css from \"./ResultCard.module.scss\";\nexport var ResultCard = function ResultCard(_ref) {\n  _s();\n\n  var item = _ref.item;\n\n  var _React$useState = React.useState({\n    added: false\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      useState = _React$useState2[1];\n\n  var determineCardType = function determineCardType(type) {\n    return;\n  };\n\n  return __jsx(\"div\", {\n    className: css.resultCard,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, __jsx(\"span\", {\n    className: css.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, \"Title\"), __jsx(\"button\", {\n    className: css.addButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, state.added ? \"-\" : \"Add to Parts+\"), __jsx(\"div\", {\n    className: css.starsWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(ResultCard, \"RkKfc4LzLy/asYnNwdqMT3XOmiI=\");\n\n_c = ResultCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultCard\");","map":{"version":3,"sources":["C:/Users/gmont/sekndproduction/components/SearchResults/ResultCard/ResultCard.tsx"],"names":["React","css","ResultCard","item","useState","added","state","determineCardType","type","resultCard","title","addButton","starsWrapper"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,GAAP,MAAgB,0BAAhB;AAEA,OAAO,IAAMC,UAAkC,GAAG,SAArCA,UAAqC,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,wBACpCH,KAAK,CAACI,QAAN,CAAe;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAf,CADoC;AAAA;AAAA,MACvDC,KADuD;AAAA,MAChDF,QADgD;;AAE9D,MAAMG,iBAAyC,GAAG,SAA5CA,iBAA4C,CAACC,IAAD,EAAU;AAC1D;AACD,GAFD;;AAGA,SACE;AAAK,IAAA,SAAS,EAAEP,GAAG,CAACQ,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAER,GAAG,CAACS,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAQ,IAAA,SAAS,EAAET,GAAG,CAACU,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,KAAK,CAACD,KAAN,GAAc,GAAd,GAAoB,eADvB,CAFF,EAKE;AAAK,IAAA,SAAS,EAAEJ,GAAG,CAACW,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AASD,CAdM;;GAAMV,U;;KAAAA,U","sourcesContent":["import * as React from \"react\";\r\nimport css from \"./ResultCard.module.scss\";\r\n\r\nexport const ResultCard: React.FC<{ item: {} }> = ({ item }) => {\r\n  const [state, useState] = React.useState({ added: false });\r\n  const determineCardType: (type: string) => void = (type) => {\r\n    return;\r\n  };\r\n  return (\r\n    <div className={css.resultCard}>\r\n      <span className={css.title}>Title</span>\r\n      <button className={css.addButton}>\r\n        {state.added ? \"-\" : \"Add to Parts+\"}\r\n      </button>\r\n      <div className={css.starsWrapper}></div>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}