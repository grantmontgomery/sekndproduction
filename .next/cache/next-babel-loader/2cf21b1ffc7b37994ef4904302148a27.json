{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gmont\\\\sekndproduction\\\\components\\\\SearchResults\\\\ResultCard\\\\ResultCard.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { PlacesPrice } from \"./Parts/PlacesInfo\";\nimport { ImageBackground } from \"./Parts/ImageBackground\";\nimport * as React from \"react\";\nimport css from \"./ResultCard.module.scss\";\nexport const ResultCard = ({\n  item\n}) => {\n  const [state, setState] = React.useState({\n    added: false\n  });\n\n  const determineImageBackgroundSource = () => {\n    switch (item.type) {\n      case \"place\":\n        return item.source === \"yelp\" ? item.image_url : null;\n\n      case \"event\":\n        return item.source === \"yelp\" ? item.image_url : item.images[0].url;\n\n      default:\n        return \"\";\n    }\n  };\n\n  const setCardDetails = () => {\n    switch (item.type) {\n      case \"place\":\n        return __jsx(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 11\n          }\n        }, __jsx(PlacesPrice, {\n          price: [\"\", \"\", \"\"],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }\n        }), __jsx(\"div\", {\n          className: css.starsWrapper,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }\n        }));\n\n      case \"event\":\n        return __jsx(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 16\n          }\n        });\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: css.resultCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, __jsx(ImageBackground, {\n    source: determineImageBackgroundSource(),\n    alt: item.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: css.titleBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    className: css.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, item.name), setCardDetails()), __jsx(\"button\", {\n    className: `${css.addButton} ${state.added ? css.remove : null}`,\n    onClick: () => state.added ? setState(state => _objectSpread(_objectSpread({}, state), {}, {\n      added: false\n    })) : setState(state => _objectSpread(_objectSpread({}, state), {}, {\n      added: true\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, state.added ? \"Remove from Parts -\" : \"Add to Parts +\"));\n};","map":{"version":3,"sources":["C:/Users/gmont/sekndproduction/components/SearchResults/ResultCard/ResultCard.tsx"],"names":["PlacesPrice","ImageBackground","React","css","ResultCard","item","state","setState","useState","added","determineImageBackgroundSource","type","source","image_url","images","url","setCardDetails","starsWrapper","resultCard","name","titleBar","title","addButton","remove"],"mappings":";;;;;;;;;AAAA,SAASA,WAAT,QAA4B,oBAA5B;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,GAAP,MAAgB,0BAAhB;AAEA,OAAO,MAAMC,UAAsD,GAAG,CAAC;AACrEC,EAAAA;AADqE,CAAD,KAEhE;AACJ,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,KAAK,CAACM,QAAN,CAAe;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAf,CAA1B;;AAEA,QAAMC,8BAA4C,GAAG,MAAM;AACzD,YAAQL,IAAI,CAACM,IAAb;AACE,WAAK,OAAL;AACE,eAAON,IAAI,CAACO,MAAL,KAAgB,MAAhB,GAAyBP,IAAI,CAACQ,SAA9B,GAA0C,IAAjD;;AACF,WAAK,OAAL;AACE,eAAOR,IAAI,CAACO,MAAL,KAAgB,MAAhB,GAAyBP,IAAI,CAACQ,SAA9B,GAA0CR,IAAI,CAACS,MAAL,CAAY,CAAZ,EAAeC,GAAhE;;AACF;AACE,eAAO,EAAP;AANJ;AAQD,GATD;;AAWA,QAAMC,cAAiC,GAAG,MAAM;AAC9C,YAAQX,IAAI,CAACM,IAAb;AACE,WAAK,OAAL;AACE,eACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,WAAD;AAAa,UAAA,KAAK,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAK,UAAA,SAAS,EAAER,GAAG,CAACc,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CADF;;AAMF,WAAK,OAAL;AACE,eAAO,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AATJ;AAWD,GAZD;;AAaA,SACE;AAAK,IAAA,SAAS,EAAEd,GAAG,CAACe,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,eAAD;AACE,IAAA,MAAM,EAAER,8BAA8B,EADxC;AAEE,IAAA,GAAG,EAAEL,IAAI,CAACc,IAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE;AAAK,IAAA,SAAS,EAAEhB,GAAG,CAACiB,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAEjB,GAAG,CAACkB,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BhB,IAAI,CAACc,IAAlC,CADF,EAEGH,cAAc,EAFjB,CALF,EASE;AACE,IAAA,SAAS,EAAG,GAAEb,GAAG,CAACmB,SAAU,IAAGhB,KAAK,CAACG,KAAN,GAAcN,GAAG,CAACoB,MAAlB,GAA2B,IAAK,EADjE;AAEE,IAAA,OAAO,EAAE,MACPjB,KAAK,CAACG,KAAN,GACIF,QAAQ,CAAED,KAAD,oCAAiBA,KAAjB;AAAwBG,MAAAA,KAAK,EAAE;AAA/B,MAAD,CADZ,GAEIF,QAAQ,CAAED,KAAD,oCAAiBA,KAAjB;AAAwBG,MAAAA,KAAK,EAAE;AAA/B,MAAD,CALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGH,KAAK,CAACG,KAAN,GAAc,qBAAd,GAAsC,gBARzC,CATF,CADF;AAsBD,CAnDM","sourcesContent":["import { PlacesPrice } from \"./Parts/PlacesInfo\";\r\nimport { ImageBackground } from \"./Parts/ImageBackground\";\r\nimport * as React from \"react\";\r\nimport css from \"./ResultCard.module.scss\";\r\n\r\nexport const ResultCard: React.FC<{ item: { [key: string]: any } }> = ({\r\n  item,\r\n}) => {\r\n  const [state, setState] = React.useState({ added: false });\r\n\r\n  const determineImageBackgroundSource: () => string = () => {\r\n    switch (item.type) {\r\n      case \"place\":\r\n        return item.source === \"yelp\" ? item.image_url : null;\r\n      case \"event\":\r\n        return item.source === \"yelp\" ? item.image_url : item.images[0].url;\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const setCardDetails: () => JSX.Element = () => {\r\n    switch (item.type) {\r\n      case \"place\":\r\n        return (\r\n          <React.Fragment>\r\n            <PlacesPrice price={[\"\", \"\", \"\"]}></PlacesPrice>\r\n            <div className={css.starsWrapper}></div>\r\n          </React.Fragment>\r\n        );\r\n      case \"event\":\r\n        return <React.Fragment></React.Fragment>;\r\n    }\r\n  };\r\n  return (\r\n    <div className={css.resultCard}>\r\n      <ImageBackground\r\n        source={determineImageBackgroundSource()}\r\n        alt={item.name}\r\n      ></ImageBackground>\r\n      <div className={css.titleBar}>\r\n        <span className={css.title}>{item.name}</span>\r\n        {setCardDetails()}\r\n      </div>\r\n      <button\r\n        className={`${css.addButton} ${state.added ? css.remove : null}`}\r\n        onClick={() =>\r\n          state.added\r\n            ? setState((state) => ({ ...state, added: false }))\r\n            : setState((state) => ({ ...state, added: true }))\r\n        }\r\n      >\r\n        {state.added ? \"Remove from Parts -\" : \"Add to Parts +\"}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}