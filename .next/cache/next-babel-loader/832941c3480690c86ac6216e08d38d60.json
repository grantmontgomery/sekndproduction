{"ast":null,"code":"export const yelpBusinessesAPI = async ({\n  location,\n  radius,\n  placeType\n}) => {\n  try {\n    const yelpBusinesses = new URL(\"https://api.yelp.com/v3/businesses/search\"),\n          params = {\n      location,\n      radius,\n      term: placeType\n    };\n    Object.keys(params).forEach(key => yelpBusinesses.searchParams.append(key, params[key]));\n    const yelpUrlString = yelpBusinesses.toString(); //function\n\n    const yelpResponse = await fetch(yelpUrlString, {\n      headers: {\n        Authorization: `Bearer ${process.env.YELP_API_KEY}`\n      }\n    });\n    const jsonResponse = await yelpResponse.json();\n    return jsonResponse;\n  } catch (err) {\n    return {\n      err\n    };\n  }\n};","map":{"version":3,"sources":["C:/Users/gmont/sekndproduction/apicalls/yelpBusinessesAPI.ts"],"names":["yelpBusinessesAPI","location","radius","placeType","yelpBusinesses","URL","params","term","Object","keys","forEach","key","searchParams","append","yelpUrlString","toString","yelpResponse","fetch","headers","Authorization","process","env","YELP_API_KEY","jsonResponse","json","err"],"mappings":"AAIA,OAAO,MAAMA,iBAIoB,GAAG,OAAO;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,MAAZ;AAAoBC,EAAAA;AAApB,CAAP,KAA2C;AAC7E,MAAI;AACF,UAAMC,cAAmB,GAAG,IAAIC,GAAJ,CACxB,2CADwB,CAA5B;AAAA,UAGEC,MAAM,GAAG;AACPL,MAAAA,QADO;AAEPC,MAAAA,MAFO;AAGPK,MAAAA,IAAI,EAAEJ;AAHC,KAHX;AAQAK,IAAAA,MAAM,CAACC,IAAP,CAAYH,MAAZ,EAAoBI,OAApB,CAA6BC,GAAD,IAC1BP,cAAc,CAACQ,YAAf,CAA4BC,MAA5B,CAAmCF,GAAnC,EAAwCL,MAAM,CAACK,GAAD,CAA9C,CADF;AAIA,UAAMG,aAAqB,GAAGV,cAAc,CAACW,QAAf,EAA9B,CAbE,CAeF;;AAEA,UAAMC,YAAsB,GAAG,MAAMC,KAAK,CAACH,aAAD,EAAgB;AACxDI,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASC,OAAO,CAACC,GAAR,CAAYC,YAAa;AAD3C;AAD+C,KAAhB,CAA1C;AAKA,UAAMC,YAAkB,GAAG,MAAMP,YAAY,CAACQ,IAAb,EAAjC;AACA,WAAOD,YAAP;AACD,GAxBD,CAwBE,OAAOE,GAAP,EAAY;AACZ,WAAO;AAAEA,MAAAA;AAAF,KAAP;AACD;AACF,CAhCM","sourcesContent":["type Query = {\r\n  [key: string]: string;\r\n};\r\n\r\nexport const yelpBusinessesAPI: ({\r\n  location,\r\n  radius,\r\n  placeType,\r\n}: Query) => Error | Promise<any> = async ({ location, radius, placeType }) => {\r\n  try {\r\n    const yelpBusinesses: URL = new URL(\r\n        \"https://api.yelp.com/v3/businesses/search\"\r\n      ),\r\n      params = {\r\n        location,\r\n        radius,\r\n        term: placeType,\r\n      };\r\n    Object.keys(params).forEach((key) =>\r\n      yelpBusinesses.searchParams.append(key, params[key])\r\n    );\r\n\r\n    const yelpUrlString: string = yelpBusinesses.toString();\r\n\r\n    //function\r\n\r\n    const yelpResponse: Response = await fetch(yelpUrlString, {\r\n      headers: {\r\n        Authorization: `Bearer ${process.env.YELP_API_KEY}`,\r\n      },\r\n    });\r\n    const jsonResponse: JSON = await yelpResponse.json();\r\n    return jsonResponse;\r\n  } catch (err) {\r\n    return { err };\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}