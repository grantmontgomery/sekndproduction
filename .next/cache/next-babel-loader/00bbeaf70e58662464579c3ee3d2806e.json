{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\gmont\\\\sekndproduction\\\\components\\\\SearchResults\\\\ResultCard\\\\Parts\\\\EventsInfo\\\\EventTimes\\\\EventTimes.tsx\";\n\nvar __jsx = React.createElement;\nimport * as React from \"react\";\nimport css from \"./EventTimes.module.scss\";\nexport var EventTimes = function EventTimes(_ref) {\n  var startTime = _ref.startTime,\n      endTime = _ref.endTime,\n      source = _ref.source;\n\n  var parseYelpTimes = function parseYelpTimes() {\n    var yelpStartObject = new Date(startTime);\n    var yelpEndObject = new Date(endTime); //yelp start time\n\n    var yelpStartTime = yelpStartObject.toLocaleTimeString();\n    var startAmPm = yelpStartTime.substring(yelpStartTime.length - 2);\n    var startWithoutSeconds = yelpStartTime.substring(0, yelpStartTime.length - 6);\n    var yelpStartFormattedTime = \"\".concat(startWithoutSeconds, \" \").concat(startAmPm); //yelp start date\n\n    var yelpStartDate = yelpStartObject.toLocaleDateString(); //yelp end time\n\n    var yelpEndTime = yelpEndObject.toLocaleTimeString();\n    var endAmPm = yelpEndTime.substring(yelpEndTime.length - 2);\n    var endWithoutSeconds = yelpEndTime.substring(0, yelpEndTime.length - 6);\n    var yelpEndFormattedTime = \"\".concat(endWithoutSeconds, \" \").concat(endAmPm); //yelp end Date\n\n    var yelpEndDate = yelpEndObject.toLocaleTimeString();\n    return __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 12\n      }\n    }, \"\".concat(yelpStartDate, \" \").concat(yelpStartFormattedTime));\n  };\n\n  var determineSource = function determineSource() {\n    return source === \"yelp\" ? parseYelpTimes() : null;\n  };\n\n  console.log(startTime);\n  console.log(endTime);\n  return __jsx(\"div\", {\n    className: css.times,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, determineSource()), __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \" 9/26/2020 8:30 PM\"));\n};\n_c = EventTimes;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventTimes\");","map":{"version":3,"sources":["C:/Users/gmont/sekndproduction/components/SearchResults/ResultCard/Parts/EventsInfo/EventTimes/EventTimes.tsx"],"names":["React","css","EventTimes","startTime","endTime","source","parseYelpTimes","yelpStartObject","Date","yelpEndObject","yelpStartTime","toLocaleTimeString","startAmPm","substring","length","startWithoutSeconds","yelpStartFormattedTime","yelpStartDate","toLocaleDateString","yelpEndTime","endAmPm","endWithoutSeconds","yelpEndFormattedTime","yelpEndDate","determineSource","console","log","times"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,GAAP,MAAgB,0BAAhB;AAEA,OAAO,IAAMC,UAIX,GAAG,SAJQA,UAIR,OAAoC;AAAA,MAAjCC,SAAiC,QAAjCA,SAAiC;AAAA,MAAtBC,OAAsB,QAAtBA,OAAsB;AAAA,MAAbC,MAAa,QAAbA,MAAa;;AACvC,MAAMC,cAAiC,GAAG,SAApCA,cAAoC,GAAM;AAC9C,QAAMC,eAAqB,GAAG,IAAIC,IAAJ,CAASL,SAAT,CAA9B;AACA,QAAMM,aAAmB,GAAG,IAAID,IAAJ,CAASJ,OAAT,CAA5B,CAF8C,CAI9C;;AACA,QAAMM,aAAqB,GAAGH,eAAe,CAACI,kBAAhB,EAA9B;AACA,QAAMC,SAAiB,GAAGF,aAAa,CAACG,SAAd,CAAwBH,aAAa,CAACI,MAAd,GAAuB,CAA/C,CAA1B;AACA,QAAMC,mBAA2B,GAAGL,aAAa,CAACG,SAAd,CAClC,CADkC,EAElCH,aAAa,CAACI,MAAd,GAAuB,CAFW,CAApC;AAKA,QAAME,sBAA8B,aAAMD,mBAAN,cAA6BH,SAA7B,CAApC,CAZ8C,CAc9C;;AAEA,QAAMK,aAAqB,GAAGV,eAAe,CAACW,kBAAhB,EAA9B,CAhB8C,CAkB9C;;AAEA,QAAMC,WAAmB,GAAGV,aAAa,CAACE,kBAAd,EAA5B;AACA,QAAMS,OAAe,GAAGD,WAAW,CAACN,SAAZ,CAAsBM,WAAW,CAACL,MAAZ,GAAqB,CAA3C,CAAxB;AACA,QAAMO,iBAAyB,GAAGF,WAAW,CAACN,SAAZ,CAChC,CADgC,EAEhCM,WAAW,CAACL,MAAZ,GAAqB,CAFW,CAAlC;AAKA,QAAMQ,oBAA4B,aAAMD,iBAAN,cAA2BD,OAA3B,CAAlC,CA3B8C,CA6B9C;;AAEA,QAAMG,WAAmB,GAAGd,aAAa,CAACE,kBAAd,EAA5B;AAEA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAUM,aAAV,cAA2BD,sBAA3B,EAAP;AACD,GAlCD;;AAoCA,MAAMQ,eAAkC,GAAG,SAArCA,eAAqC,GAAM;AAC/C,WAAOnB,MAAM,KAAK,MAAX,GAAoBC,cAAc,EAAlC,GAAuC,IAA9C;AACD,GAFD;;AAGAmB,EAAAA,OAAO,CAACC,GAAR,CAAYvB,SAAZ;AACAsB,EAAAA,OAAO,CAACC,GAAR,CAAYtB,OAAZ;AAEA,SACE;AAAK,IAAA,SAAS,EAAEH,GAAG,CAAC0B,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOH,eAAe,EAAtB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,CADF;AAMD,CArDM;KAAMtB,U","sourcesContent":["import * as React from \"react\";\r\nimport css from \"./EventTimes.module.scss\";\r\n\r\nexport const EventTimes: React.FC<{\r\n  startTime: string;\r\n  endTime: string | null;\r\n  source: string;\r\n}> = ({ startTime, endTime, source }) => {\r\n  const parseYelpTimes: () => JSX.Element = () => {\r\n    const yelpStartObject: Date = new Date(startTime);\r\n    const yelpEndObject: Date = new Date(endTime);\r\n\r\n    //yelp start time\r\n    const yelpStartTime: string = yelpStartObject.toLocaleTimeString();\r\n    const startAmPm: string = yelpStartTime.substring(yelpStartTime.length - 2);\r\n    const startWithoutSeconds: string = yelpStartTime.substring(\r\n      0,\r\n      yelpStartTime.length - 6\r\n    );\r\n\r\n    const yelpStartFormattedTime: string = `${startWithoutSeconds} ${startAmPm}`;\r\n\r\n    //yelp start date\r\n\r\n    const yelpStartDate: string = yelpStartObject.toLocaleDateString();\r\n\r\n    //yelp end time\r\n\r\n    const yelpEndTime: string = yelpEndObject.toLocaleTimeString();\r\n    const endAmPm: string = yelpEndTime.substring(yelpEndTime.length - 2);\r\n    const endWithoutSeconds: string = yelpEndTime.substring(\r\n      0,\r\n      yelpEndTime.length - 6\r\n    );\r\n\r\n    const yelpEndFormattedTime: string = `${endWithoutSeconds} ${endAmPm}`;\r\n\r\n    //yelp end Date\r\n\r\n    const yelpEndDate: string = yelpEndObject.toLocaleTimeString();\r\n\r\n    return <span>{`${yelpStartDate} ${yelpStartFormattedTime}`}</span>;\r\n  };\r\n\r\n  const determineSource: () => JSX.Element = () => {\r\n    return source === \"yelp\" ? parseYelpTimes() : null;\r\n  };\r\n  console.log(startTime);\r\n  console.log(endTime);\r\n\r\n  return (\r\n    <div className={css.times}>\r\n      <span>{determineSource()}</span>\r\n      <span> 9/26/2020 8:30 PM</span>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}