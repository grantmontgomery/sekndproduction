{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gmont\\\\sekndproduction\\\\components\\\\SearchResults\\\\ResultCard\\\\Parts\\\\PlacesInfo\\\\PriceAndType\\\\PriceAndType.tsx\";\nvar __jsx = React.createElement;\nimport * as React from \"react\";\nimport css from \"./PriceAndType.module.scss\";\nexport const PriceAndType = ({\n  price,\n  type,\n  cityPiece\n}) => {\n  let city = \"\";\n\n  if (cityPiece) {// const parseYelpCity = addressPiece => {\n    //   let splitted = addressPiece.split(\",\");\n    //   if (splitted[0] === splitted[0].toUpperCase()) {\n    //     if (splitted[0].includes(\" \")) {\n    //       let splitCity = splitted[0].split(\" \");\n    //       for (let i = 0; i < splitCity.length; i++) {\n    //         splitCity[i].toLowerCase();\n    //         splitCity[i][0].toUpperCase();\n    //       }\n    //       let newCity = splitCity.join(\" \");\n    //       return splitted.splice(0, 1, newCity);\n    //     } else {\n    //       let newCity =\n    //         splitted[0][0].toUpperCase() + splitted[0].toLowerCase().substring(1);\n    //       splitted.splice(0, 1, newCity);\n    //       return splitted.join(\",\");\n    //     }\n    //   } else {\n    //     return splitted.join(\",\");\n    //   }\n    // };\n  }\n\n  const singularType = () => {\n    if (!type || type.length === 0) return null;else {\n      const indexLastLetter = type.length - 1;\n\n      switch (type[indexLastLetter]) {\n        case \"s\":\n          return type.indexOf(\"ies\") !== -1 ? __jsx(\"span\", {\n            className: css.type,\n            style: {\n              marginLeft: price ? \"2vw\" : null\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 13\n            }\n          }, `${type.substring(0, type.indexOf(\"ies\"))}y`) : __jsx(\"span\", {\n            className: css.type,\n            style: {\n              marginLeft: price ? \"2vw\" : null\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 13\n            }\n          }, type.substring(0, indexLastLetter));\n\n        default:\n          return __jsx(\"span\", {\n            className: css.type,\n            style: {\n              marginLeft: price ? \"2vw\" : null\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 13\n            }\n          }, `${type}`);\n      }\n    }\n  };\n\n  return price ? __jsx(\"div\", {\n    className: css.placePrice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, __jsx(\"span\", {\n    className: css.light,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, price[0]), __jsx(\"span\", {\n    className: price.length >= 2 ? css.light : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, price[0]), __jsx(\"span\", {\n    className: price.length >= 3 ? css.light : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, price[0]), __jsx(\"span\", {\n    className: price.length === 4 ? css.light : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, price[0]), singularType()) : __jsx(\"div\", {\n    className: css.placePrice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, singularType());\n};","map":{"version":3,"sources":["C:/Users/gmont/sekndproduction/components/SearchResults/ResultCard/Parts/PlacesInfo/PriceAndType/PriceAndType.tsx"],"names":["React","css","PriceAndType","price","type","cityPiece","city","singularType","length","indexLastLetter","indexOf","marginLeft","substring","placePrice","light"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport css from \"./PriceAndType.module.scss\";\r\n\r\nexport const PriceAndType: React.FC<{\r\n  price: string;\r\n  type: string | null;\r\n  cityPiece: string;\r\n}> = ({ price, type, cityPiece }) => {\r\n  let city: string = \"\";\r\n\r\n  if (cityPiece) {\r\n    // const parseYelpCity = addressPiece => {\r\n    //   let splitted = addressPiece.split(\",\");\r\n    //   if (splitted[0] === splitted[0].toUpperCase()) {\r\n    //     if (splitted[0].includes(\" \")) {\r\n    //       let splitCity = splitted[0].split(\" \");\r\n    //       for (let i = 0; i < splitCity.length; i++) {\r\n    //         splitCity[i].toLowerCase();\r\n    //         splitCity[i][0].toUpperCase();\r\n    //       }\r\n    //       let newCity = splitCity.join(\" \");\r\n    //       return splitted.splice(0, 1, newCity);\r\n    //     } else {\r\n    //       let newCity =\r\n    //         splitted[0][0].toUpperCase() + splitted[0].toLowerCase().substring(1);\r\n    //       splitted.splice(0, 1, newCity);\r\n    //       return splitted.join(\",\");\r\n    //     }\r\n    //   } else {\r\n    //     return splitted.join(\",\");\r\n    //   }\r\n    // };\r\n  }\r\n\r\n  const singularType: () => JSX.Element | null = () => {\r\n    if (!type || type.length === 0) return null;\r\n    else {\r\n      const indexLastLetter: number = type.length - 1;\r\n      switch (type[indexLastLetter]) {\r\n        case \"s\":\r\n          return type.indexOf(\"ies\") !== -1 ? (\r\n            <span\r\n              className={css.type}\r\n              style={{ marginLeft: price ? \"2vw\" : null }}\r\n            >{`${type.substring(0, type.indexOf(\"ies\"))}y`}</span>\r\n          ) : (\r\n            <span\r\n              className={css.type}\r\n              style={{ marginLeft: price ? \"2vw\" : null }}\r\n            >\r\n              {type.substring(0, indexLastLetter)}\r\n            </span>\r\n          );\r\n        default:\r\n          return (\r\n            <span\r\n              className={css.type}\r\n              style={{ marginLeft: price ? \"2vw\" : null }}\r\n            >{`${type}`}</span>\r\n          );\r\n      }\r\n    }\r\n  };\r\n  return price ? (\r\n    <div className={css.placePrice}>\r\n      <span className={css.light}>{price[0]}</span>\r\n      <span className={price.length >= 2 ? css.light : null}>{price[0]}</span>\r\n      <span className={price.length >= 3 ? css.light : null}>{price[0]}</span>\r\n      <span className={price.length === 4 ? css.light : null}>{price[0]}</span>\r\n      {singularType()}\r\n    </div>\r\n  ) : (\r\n    <div className={css.placePrice}>{singularType()}</div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}