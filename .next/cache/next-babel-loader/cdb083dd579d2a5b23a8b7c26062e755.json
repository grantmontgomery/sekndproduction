{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\gmont\\\\sekndproduction\\\\components\\\\SearchResults\\\\ResultCard\\\\Parts\\\\PlacesInfo\\\\PriceAndType\\\\PriceAndType.tsx\";\n\nvar __jsx = React.createElement;\nimport * as React from \"react\";\nimport css from \"./PriceAndType.module.scss\";\nexport var PriceAndType = function PriceAndType(_ref) {\n  var price = _ref.price,\n      type = _ref.type,\n      cityPiece = _ref.cityPiece;\n  var city = \"\";\n\n  if (cityPiece && cityPiece.includes(\",\")) {\n    var indexOfComma = cityPiece.indexOf(\",\");\n    city = cityPiece.substring(0, indexOfComma + 4);\n  }\n\n  var insertCity = function insertCity(city) {\n    return city !== \"\" ? __jsx(\"span\", {\n      className: css.city,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 26\n      }\n    }, \"\\u2022 \".concat(city)) : null;\n  };\n\n  var singularType = function singularType() {\n    if (!type || type.length === 0) return null;else {\n      var indexLastLetter = type.length - 1;\n\n      switch (type[indexLastLetter]) {\n        case \"s\":\n          return type.indexOf(\"ies\") !== -1 ? __jsx(\"span\", {\n            className: css.type,\n            style: {\n              marginLeft: price ? \"2vw\" : null\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 13\n            }\n          }, \"\".concat(type.substring(0, type.indexOf(\"ies\")), \"y\")) : __jsx(\"span\", {\n            className: css.type,\n            style: {\n              marginLeft: price ? \"2vw\" : null\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 13\n            }\n          }, type.substring(0, indexLastLetter));\n\n        default:\n          return __jsx(\"span\", {\n            className: css.type,\n            style: {\n              marginLeft: price ? \"2vw\" : null\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 13\n            }\n          }, \"\".concat(type));\n      }\n    }\n  };\n\n  return price ? __jsx(\"div\", {\n    className: css.placePrice,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, __jsx(\"span\", {\n    className: css.light,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, price[0]), __jsx(\"span\", {\n    className: price.length >= 2 ? css.light : null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, price[0]), __jsx(\"span\", {\n    className: price.length >= 3 ? css.light : null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, price[0]), __jsx(\"span\", {\n    className: price.length === 4 ? css.light : null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, price[0]), singularType(), insertCity(city)) : __jsx(\"div\", {\n    className: css.placePrice,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, singularType(), insertCity(city));\n};\n_c = PriceAndType;\n\nvar _c;\n\n$RefreshReg$(_c, \"PriceAndType\");","map":{"version":3,"sources":["C:/Users/gmont/sekndproduction/components/SearchResults/ResultCard/Parts/PlacesInfo/PriceAndType/PriceAndType.tsx"],"names":["React","css","PriceAndType","price","type","cityPiece","city","includes","indexOfComma","indexOf","substring","insertCity","singularType","length","indexLastLetter","marginLeft","placePrice","light"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport css from \"./PriceAndType.module.scss\";\r\n\r\nexport const PriceAndType: React.FC<{\r\n  price: string;\r\n  type: string | null;\r\n  cityPiece: string;\r\n}> = ({ price, type, cityPiece }) => {\r\n  let city: string = \"\";\r\n\r\n  if (cityPiece && cityPiece.includes(\",\")) {\r\n    let indexOfComma: number = cityPiece.indexOf(\",\");\r\n    city = cityPiece.substring(0, indexOfComma + 4);\r\n  }\r\n\r\n  const insertCity: (city: string) => JSX.Element | null = (city) => {\r\n    return city !== \"\" ? <span className={css.city}>{`â€¢ ${city}`}</span> : null;\r\n  };\r\n\r\n  const singularType: () => JSX.Element | null = () => {\r\n    if (!type || type.length === 0) return null;\r\n    else {\r\n      const indexLastLetter: number = type.length - 1;\r\n      switch (type[indexLastLetter]) {\r\n        case \"s\":\r\n          return type.indexOf(\"ies\") !== -1 ? (\r\n            <span\r\n              className={css.type}\r\n              style={{ marginLeft: price ? \"2vw\" : null }}\r\n            >{`${type.substring(0, type.indexOf(\"ies\"))}y`}</span>\r\n          ) : (\r\n            <span\r\n              className={css.type}\r\n              style={{ marginLeft: price ? \"2vw\" : null }}\r\n            >\r\n              {type.substring(0, indexLastLetter)}\r\n            </span>\r\n          );\r\n        default:\r\n          return (\r\n            <span\r\n              className={css.type}\r\n              style={{ marginLeft: price ? \"2vw\" : null }}\r\n            >{`${type}`}</span>\r\n          );\r\n      }\r\n    }\r\n  };\r\n  return price ? (\r\n    <div className={css.placePrice}>\r\n      <span className={css.light}>{price[0]}</span>\r\n      <span className={price.length >= 2 ? css.light : null}>{price[0]}</span>\r\n      <span className={price.length >= 3 ? css.light : null}>{price[0]}</span>\r\n      <span className={price.length === 4 ? css.light : null}>{price[0]}</span>\r\n      {singularType()}\r\n      {insertCity(city)}\r\n    </div>\r\n  ) : (\r\n    <div className={css.placePrice}>\r\n      {singularType()}\r\n\r\n      {insertCity(city)}\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}