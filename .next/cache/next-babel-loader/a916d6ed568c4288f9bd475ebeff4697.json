{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gmont\\\\sekndproduction\\\\pages\\\\_document.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport Document, { Html, Head, Main, NextScript } from \"next/document\";\nimport { ServerStyleSheets } from \"@material-ui/core/styles\";\nexport default class CustomDocument extends Document {\n  render() {\n    return __jsx(Html, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 7\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }\n    }, __jsx(\"meta\", {\n      content: \"Description goes here.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 11\n      }\n    }), __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 11\n      }\n    }, \"Seknd\"), __jsx(\"link\", {\n      rel: \"icon\",\n      href: \"/favicon.ico\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }\n    })), __jsx(\"body\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }\n    }, __jsx(Main, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }\n    }), __jsx(NextScript, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }\n    })));\n  }\n\n} // `getInitialProps` belongs to `_document` (instead of `_app`),\n// it's compatible with server-side generation (SSG).\n\nCustomDocument.getInitialProps = async ctx => {\n  // Render app and page and get the context of the page with collected side effects.\n  const sheets = new ServerStyleSheets();\n  const originalRenderPage = ctx.renderPage;\n\n  ctx.renderPage = () => originalRenderPage({\n    enhanceApp: App => props => sheets.collect(__jsx(App, _extends({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 54\n      }\n    })))\n  });\n\n  const initialProps = await Document.getInitialProps(ctx);\n  return _objectSpread(_objectSpread({}, initialProps), {}, {\n    // Styles fragment is rendered after the app and page rendering finish.\n    styles: [...React.Children.toArray(initialProps.styles), sheets.getStyleElement()]\n  });\n};","map":{"version":3,"sources":["C:/Users/gmont/sekndproduction/pages/_document.tsx"],"names":["Document","Html","Head","Main","NextScript","ServerStyleSheets","CustomDocument","render","getInitialProps","ctx","sheets","originalRenderPage","renderPage","enhanceApp","App","props","collect","initialProps","styles","React","Children","toArray","getStyleElement"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,IAA/B,EAAqCC,UAArC,QAAuD,eAAvD;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,eAAe,MAAMC,cAAN,SAA6BN,QAA7B,CAAsC;AACnDO,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,OAAO,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,EAGE;AAAM,MAAA,GAAG,EAAC,MAAV;AAAiB,MAAA,IAAI,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CANF,CADF;AAaD;;AAfkD,C,CAkBrD;AACA;;AACAD,cAAc,CAACE,eAAf,GAAiC,MAAOC,GAAP,IAAe;AAC9C;AACA,QAAMC,MAAM,GAAG,IAAIL,iBAAJ,EAAf;AACA,QAAMM,kBAAkB,GAAGF,GAAG,CAACG,UAA/B;;AAEAH,EAAAA,GAAG,CAACG,UAAJ,GAAiB,MACfD,kBAAkB,CAAC;AACjBE,IAAAA,UAAU,EAAGC,GAAD,IAAUC,KAAD,IAAWL,MAAM,CAACM,OAAP,CAAe,MAAC,GAAD,eAASD,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAf;AADf,GAAD,CADpB;;AAKA,QAAME,YAAY,GAAG,MAAMjB,QAAQ,CAACQ,eAAT,CAAyBC,GAAzB,CAA3B;AAEA,yCACKQ,YADL;AAEE;AACAC,IAAAA,MAAM,EAAE,CACN,GAAGC,KAAK,CAACC,QAAN,CAAeC,OAAf,CAAuBJ,YAAY,CAACC,MAApC,CADG,EAENR,MAAM,CAACY,eAAP,EAFM;AAHV;AAQD,CApBD","sourcesContent":["import Document, { Html, Head, Main, NextScript } from \"next/document\";\r\nimport { ServerStyleSheets } from \"@material-ui/core/styles\";\r\nexport default class CustomDocument extends Document {\r\n  render() {\r\n    return (\r\n      <Html>\r\n        <Head>\r\n          <meta content=\"Description goes here.\" />\r\n          <title>Seknd</title>\r\n          <link rel=\"icon\" href=\"/favicon.ico\" />\r\n        </Head>\r\n        <body>\r\n          <Main></Main>\r\n          <NextScript></NextScript>\r\n        </body>\r\n      </Html>\r\n    );\r\n  }\r\n}\r\n\r\n// `getInitialProps` belongs to `_document` (instead of `_app`),\r\n// it's compatible with server-side generation (SSG).\r\nCustomDocument.getInitialProps = async (ctx) => {\r\n  // Render app and page and get the context of the page with collected side effects.\r\n  const sheets = new ServerStyleSheets();\r\n  const originalRenderPage = ctx.renderPage;\r\n\r\n  ctx.renderPage = () =>\r\n    originalRenderPage({\r\n      enhanceApp: (App) => (props) => sheets.collect(<App {...props} />),\r\n    });\r\n\r\n  const initialProps = await Document.getInitialProps(ctx);\r\n\r\n  return {\r\n    ...initialProps,\r\n    // Styles fragment is rendered after the app and page rendering finish.\r\n    styles: [\r\n      ...React.Children.toArray(initialProps.styles),\r\n      sheets.getStyleElement(),\r\n    ],\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}