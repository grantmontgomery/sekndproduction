{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { PriceAndType, Reviews, Phone } from \"./Parts/PlacesInfo\";\nimport { ImageBackground } from \"./Parts/ImageBackground\";\nimport * as React from \"react\";\nimport css from \"./ResultCard.module.scss\";\nexport const ResultCard = ({\n  item\n}) => {\n  const [state, setState] = React.useState({\n    added: false,\n    moreInfo: false\n  });\n\n  const determineImageBackgroundSource = () => {\n    switch (item.type) {\n      case \"place\":\n        return item.source === \"yelp\" ? item.image_url : null;\n\n      case \"event\":\n        return item.source === \"yelp\" ? item.image_url : item.images[0].url;\n\n      default:\n        return \"\";\n    }\n  };\n\n  const handleRetract = () => {\n    return state.moreInfo ? setState(state => _objectSpread(_objectSpread({}, state), {}, {\n      moreInfo: false\n    })) : null;\n  };\n\n  const moreDetails = type => {\n    if (!state.moreInfo) return null;\n\n    switch (type) {\n      case \"place\":\n        return __jsx(\"div\", {\n          className: css.detailsWrapper\n        }, __jsx(Phone, {\n          phone: item.phone\n        }));\n\n      case \"events\":\n        return __jsx(\"div\", {\n          className: css.detailsWrapper\n        });\n\n      default:\n        return __jsx(\"div\", {\n          className: css.detailsWrapper\n        });\n    }\n  };\n\n  const setCardDetails = () => {\n    switch (item.type) {\n      case \"place\":\n        return __jsx(React.Fragment, null, __jsx(\"div\", {\n          className: `${css.infoBar} ${state.moreInfo ? css.extended : null}`\n        }, __jsx(\"span\", {\n          className: css.title\n        }, item.name), __jsx(Reviews, {\n          reviewCount: item.review_count,\n          rating: item.rating\n        }), __jsx(PriceAndType, {\n          price: item.price,\n          type: item.categories && item.categories.length > 0 ? item.categories[0].title : null\n        }), __jsx(\"div\", {\n          className: css.starsWrapper\n        })), moreDetails(\"place\"));\n\n      case \"event\":\n        return __jsx(React.Fragment, null, __jsx(\"div\", {\n          className: `${css.infoBar} ${state.moreInfo ? css.extended : null}`\n        }, __jsx(\"span\", {\n          className: css.title\n        }, item.name)), moreDetails(\"event\"));\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: `${css.resultCard} ${state.moreInfo ? css.extended : null}`,\n    onClick: () => state.moreInfo ? null : setState(state => _objectSpread(_objectSpread({}, state), {}, {\n      moreInfo: true\n    }))\n  }, __jsx(ImageBackground, {\n    source: determineImageBackgroundSource(),\n    alt: item.name,\n    extended: state.moreInfo,\n    handleRetract: handleRetract\n  }), __jsx(\"button\", {\n    className: `${css.addButton} ${state.added ? css.remove : null}`,\n    onClick: event => (event.stopPropagation(), state.added ? setState(state => _objectSpread(_objectSpread({}, state), {}, {\n      added: false\n    })) : setState(state => _objectSpread(_objectSpread({}, state), {}, {\n      added: true\n    })))\n  }, state.added ? \"Remove from Parts -\" : \"Add to Parts +\"), setCardDetails());\n};","map":null,"metadata":{},"sourceType":"module"}