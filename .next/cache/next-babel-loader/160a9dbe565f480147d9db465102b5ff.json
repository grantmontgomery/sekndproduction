{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nexport var yelpEventsCall = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var location, radius, unixStartDate, unixEndDate, categories, response, responseJson, events;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            location = _ref.location, radius = _ref.radius, unixStartDate = _ref.unixStartDate, unixEndDate = _ref.unixEndDate, categories = _ref.categories;\n            _context.prev = 1;\n            _context.next = 4;\n            return fetch(\"/api/yelpEventsAPI\", {\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n              },\n              method: \"POST\",\n              body: JSON.stringify({\n                location: location,\n                radius: radius,\n                start_date: unixStartDate,\n                end_date: unixEndDate\n              })\n            });\n\n          case 4:\n            response = _context.sent;\n            _context.next = 7;\n            return response.json();\n\n          case 7:\n            responseJson = _context.sent;\n            console.log(responseJson);\n            events = responseJson.events;\n            return _context.abrupt(\"return\", events);\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](1);\n            return _context.abrupt(\"return\", _context.t0.message);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 13]]);\n  }));\n\n  return function yelpEventsCall(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["C:/Users/gmont/sekndproduction/apicalls/yelpEventsCall.ts"],"names":["yelpEventsCall","location","radius","unixStartDate","unixEndDate","categories","fetch","headers","Accept","method","body","JSON","stringify","start_date","end_date","response","json","responseJson","console","log","events","message"],"mappings":";;AAEA,OAAO,IAAMA,cAMa;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3BC,YAAAA,QAD2B,QAC3BA,QAD2B,EAE3BC,MAF2B,QAE3BA,MAF2B,EAG3BC,aAH2B,QAG3BA,aAH2B,EAI3BC,WAJ2B,QAI3BA,WAJ2B,EAK3BC,UAL2B,QAK3BA,UAL2B;AAAA;AAAA;AAAA,mBAQQC,KAAK,CAAC,oBAAD,EAAuB;AAC3DC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,MAAM,EAAE,kBADD;AAEP,gCAAgB;AAFT,eADkD;AAK3DC,cAAAA,MAAM,EAAE,MALmD;AAM3DC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBX,gBAAAA,QAAQ,EAARA,QADmB;AAEnBC,gBAAAA,MAAM,EAANA,MAFmB;AAGnBW,gBAAAA,UAAU,EAAEV,aAHO;AAInBW,gBAAAA,QAAQ,EAAEV;AAJS,eAAf;AANqD,aAAvB,CARb;;AAAA;AAQnBW,YAAAA,QARmB;AAAA;AAAA,mBAqBEA,QAAQ,CAACC,IAAT,EArBF;;AAAA;AAqBnBC,YAAAA,YArBmB;AAsBzBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACQG,YAAAA,MAvBiB,GAuBNH,YAvBM,CAuBjBG,MAvBiB;AAAA,6CAwBlBA,MAxBkB;;AAAA;AAAA;AAAA;AAAA,6CA0BlB,YAAIC,OA1Bc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBANbrB,cAMa;AAAA;AAAA;AAAA,GANnB","sourcesContent":["type Params = { [key: string]: string };\r\n\r\nexport const yelpEventsCall: ({\r\n  location,\r\n  radius,\r\n  unixStartDate,\r\n  unixEndDate,\r\n  categories,\r\n}: Params) => Promise<any> = async ({\r\n  location,\r\n  radius,\r\n  unixStartDate,\r\n  unixEndDate,\r\n  categories,\r\n}) => {\r\n  try {\r\n    const response: Response = await fetch(\"/api/yelpEventsAPI\", {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        location,\r\n        radius,\r\n        start_date: unixStartDate,\r\n        end_date: unixEndDate,\r\n      }),\r\n    });\r\n    const responseJson = await response.json();\r\n    console.log(responseJson);\r\n    const { events } = responseJson;\r\n    return events;\r\n  } catch (err) {\r\n    return err.message;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}