{"ast":null,"code":"// type Params = {\n//   location: string;\n//   start_date: string;\n//   end_date: string;\n//   radius: number;\n// };\nexport default ((req, res) => {\n  if (req.method !== \"GET\") {\n    const yelpEvents = new URL(\"https://api.yelp.com/v3/events\"),\n          params = {\n      location: req.body.location,\n      start_date: req.body.start_date,\n      end_date: req.body.end_date,\n      radius: req.body.radiusInt\n    };\n    Object.keys(params).forEach(key => yelpEvents.searchParams.append(key, params[key]));\n\n    if (req.body.categories) {\n      yelpEvents.searchParams.append(\"categories\", req.body.categories);\n    }\n\n    console.log(yelpEvents.toString()); //   fetch(yelpEvents.toString(), {\n    //     headers: {\n    //       Authorization: `Bearer ${process.env.REACT_APP_YELP_API_KEY}`\n    //     }\n    //   })\n    //     .then(res => res.json())\n    //     .then(data => res.send(data))\n    //     .catch(err => res.send(err.message));\n\n    return res.status(200).end(\"Request Sent\");\n  }\n\n  return res.status(200).end(\"Hello World\");\n});","map":{"version":3,"sources":["C:/Users/gmont/sekndproduction/pages/api/yelpEvents.ts"],"names":["req","res","method","yelpEvents","URL","params","location","body","start_date","end_date","radius","radiusInt","Object","keys","forEach","key","searchParams","append","categories","console","log","toString","status","end"],"mappings":"AAEA;AACA;AACA;AACA;AACA;AACA;AASA,gBAAe,CAACA,GAAD,EAAsBC,GAAtB,KAA+C;AAC5D,MAAID,GAAG,CAACE,MAAJ,KAAe,KAAnB,EAA0B;AACxB,UAAMC,UAAe,GAAG,IAAIC,GAAJ,CAAQ,gCAAR,CAAxB;AAAA,UACEC,MAAc,GAAG;AACfC,MAAAA,QAAQ,EAAEN,GAAG,CAACO,IAAJ,CAASD,QADJ;AAEfE,MAAAA,UAAU,EAAER,GAAG,CAACO,IAAJ,CAASC,UAFN;AAGfC,MAAAA,QAAQ,EAAET,GAAG,CAACO,IAAJ,CAASE,QAHJ;AAIfC,MAAAA,MAAM,EAAEV,GAAG,CAACO,IAAJ,CAASI;AAJF,KADnB;AAOAC,IAAAA,MAAM,CAACC,IAAP,CAAYR,MAAZ,EAAoBS,OAApB,CAA6BC,GAAD,IAC1BZ,UAAU,CAACa,YAAX,CAAwBC,MAAxB,CAA+BF,GAA/B,EAAoCV,MAAM,CAACU,GAAD,CAA1C,CADF;;AAIA,QAAIf,GAAG,CAACO,IAAJ,CAASW,UAAb,EAAyB;AACvBf,MAAAA,UAAU,CAACa,YAAX,CAAwBC,MAAxB,CAA+B,YAA/B,EAA6CjB,GAAG,CAACO,IAAJ,CAASW,UAAtD;AACD;;AAEDC,IAAAA,OAAO,CAACC,GAAR,CAAYjB,UAAU,CAACkB,QAAX,EAAZ,EAhBwB,CAkBxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,WAAOpB,GAAG,CAACqB,MAAJ,CAAW,GAAX,EAAgBC,GAAhB,CAAoB,cAApB,CAAP;AACD;;AACD,SAAOtB,GAAG,CAACqB,MAAJ,CAAW,GAAX,EAAgBC,GAAhB,CAAoB,aAApB,CAAP;AACD,CA9BD","sourcesContent":["import { NextApiRequest, NextApiResponse } from \"next\";\r\n\r\n// type Params = {\r\n//   location: string;\r\n//   start_date: string;\r\n//   end_date: string;\r\n//   radius: number;\r\n// };\r\n\r\ntype Params = {\r\n  location: string;\r\n  start_date: number;\r\n  end_date: number;\r\n  radius: string;\r\n};\r\n\r\nexport default (req: NextApiRequest, res: NextApiResponse) => {\r\n  if (req.method !== \"GET\") {\r\n    const yelpEvents: URL = new URL(\"https://api.yelp.com/v3/events\"),\r\n      params: Params = {\r\n        location: req.body.location,\r\n        start_date: req.body.start_date,\r\n        end_date: req.body.end_date,\r\n        radius: req.body.radiusInt,\r\n      };\r\n    Object.keys(params).forEach((key) =>\r\n      yelpEvents.searchParams.append(key, params[key])\r\n    );\r\n\r\n    if (req.body.categories) {\r\n      yelpEvents.searchParams.append(\"categories\", req.body.categories);\r\n    }\r\n\r\n    console.log(yelpEvents.toString());\r\n\r\n    //   fetch(yelpEvents.toString(), {\r\n    //     headers: {\r\n    //       Authorization: `Bearer ${process.env.REACT_APP_YELP_API_KEY}`\r\n    //     }\r\n    //   })\r\n    //     .then(res => res.json())\r\n    //     .then(data => res.send(data))\r\n    //     .catch(err => res.send(err.message));\r\n    return res.status(200).end(\"Request Sent\");\r\n  }\r\n  return res.status(200).end(\"Hello World\");\r\n};\r\n"]},"metadata":{},"sourceType":"module"}