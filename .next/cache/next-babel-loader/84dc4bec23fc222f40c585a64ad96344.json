{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gmont\\\\sekndproduction\\\\components\\\\SearchBox\\\\SearchBox.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from \"react\";\nimport { SearchSelector, WhereInput, WhenInput, EventsInput, PlacesInput } from \"./Parts\";\nimport Link from \"next/link\";\nimport css from \"./SearchBox.module.scss\";\nexport const SearchBox = () => {\n  const [searchQuery, setSearchQuery] = React.useState({\n    searchType: \"ALL\",\n    eventsCategory: \"\",\n    radius: \"\",\n    startTime: 0,\n    endTime: 0,\n    endDate: \"\",\n    startDate: \"\",\n    placeType: \"Bruh\",\n    startFormatted: \"\",\n    endFormatted: \"\",\n    unixStartDate: \"\",\n    unixEndDate: \"\",\n    ticketMasterCategories: \"\",\n    yelpCategories: \"\"\n  });\n  console.log(searchQuery);\n\n  const setDynamicPage = () => {\n    return \"\";\n  };\n\n  const linked = () => {\n    return __jsx(Link, {\n      href: \"/search/[query]\",\n      as: `/search/${searchQuery.searchType}+${setDynamicPage()}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, __jsx(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, \"Search\"));\n  };\n\n  const handleInputChange = (key, input) => {\n    return setSearchQuery(state => _objectSpread(_objectSpread({}, state), {}, {\n      [key]: input\n    }));\n  };\n\n  return __jsx(\"div\", {\n    className: css.searchBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, __jsx(SearchSelector, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), __jsx(WhereInput, {\n    handleInputChange: handleInputChange,\n    placeType: searchQuery.placeType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), __jsx(WhenInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), __jsx(EventsInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), __jsx(PlacesInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), __jsx(\"button\", {\n    className: css.searchButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, \"Search\"));\n};","map":{"version":3,"sources":["C:/Users/gmont/sekndproduction/components/SearchBox/SearchBox.tsx"],"names":["React","SearchSelector","WhereInput","WhenInput","EventsInput","PlacesInput","Link","css","SearchBox","searchQuery","setSearchQuery","useState","searchType","eventsCategory","radius","startTime","endTime","endDate","startDate","placeType","startFormatted","endFormatted","unixStartDate","unixEndDate","ticketMasterCategories","yelpCategories","console","log","setDynamicPage","linked","handleInputChange","key","input","state","searchBox","searchButton"],"mappings":";;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,cADF,EAEEC,UAFF,EAGEC,SAHF,EAIEC,WAJF,EAKEC,WALF,QAMO,SANP;AAOA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,GAAP,MAAgB,yBAAhB;AAqBA,OAAO,MAAMC,SAAmB,GAAG,MAAM;AACvC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,KAAK,CAACW,QAAN,CAA4B;AAChEC,IAAAA,UAAU,EAAE,KADoD;AAEhEC,IAAAA,cAAc,EAAE,EAFgD;AAGhEC,IAAAA,MAAM,EAAE,EAHwD;AAIhEC,IAAAA,SAAS,EAAE,CAJqD;AAKhEC,IAAAA,OAAO,EAAE,CALuD;AAMhEC,IAAAA,OAAO,EAAE,EANuD;AAOhEC,IAAAA,SAAS,EAAE,EAPqD;AAQhEC,IAAAA,SAAS,EAAE,MARqD;AAShEC,IAAAA,cAAc,EAAE,EATgD;AAUhEC,IAAAA,YAAY,EAAE,EAVkD;AAWhEC,IAAAA,aAAa,EAAE,EAXiD;AAYhEC,IAAAA,WAAW,EAAE,EAZmD;AAahEC,IAAAA,sBAAsB,EAAE,EAbwC;AAchEC,IAAAA,cAAc,EAAE;AAdgD,GAA5B,CAAtC;AAiBAC,EAAAA,OAAO,CAACC,GAAR,CAAYlB,WAAZ;;AACA,QAAMmB,cAA4B,GAAG,MAAM;AACzC,WAAO,EAAP;AACD,GAFD;;AAIA,QAAMC,MAAM,GAAG,MAAM;AACnB,WACE,MAAC,IAAD;AACE,MAAA,IAAI,EAAC,iBADP;AAEE,MAAA,EAAE,EAAG,WAAUpB,WAAW,CAACG,UAAW,IAAGgB,cAAc,EAAG,EAF5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,CADF;AAQD,GATD;;AAWA,QAAME,iBAA8B,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACrD,WAAOtB,cAAc,CAAEuB,KAAD,oCACjBA,KADiB;AAEpB,OAACF,GAAD,GAAOC;AAFa,MAAD,CAArB;AAID,GALD;;AAOA,SACE;AAAK,IAAA,SAAS,EAAEzB,GAAG,CAAC2B,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,UAAD;AACE,IAAA,iBAAiB,EAAEJ,iBADrB;AAEE,IAAA,SAAS,EAAErB,WAAW,CAACU,SAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAME,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE;AAAQ,IAAA,SAAS,EAAEZ,GAAG,CAAC4B,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,CADF;AAaD,CAtDM","sourcesContent":["import * as React from \"react\";\r\nimport {\r\n  SearchSelector,\r\n  WhereInput,\r\n  WhenInput,\r\n  EventsInput,\r\n  PlacesInput,\r\n} from \"./Parts\";\r\nimport Link from \"next/link\";\r\nimport css from \"./SearchBox.module.scss\";\r\n\r\nexport type InputChange = (key: string, input: string) => void;\r\n\r\ninterface SearchQuery {\r\n  searchType: string;\r\n  eventsCategory: string;\r\n  radius: string;\r\n  startTime: number;\r\n  endTime: number;\r\n  placeType: string;\r\n  endDate: string;\r\n  startDate: string;\r\n  startFormatted: string;\r\n  endFormatted: string;\r\n  unixStartDate: string;\r\n  unixEndDate: string;\r\n  ticketMasterCategories: string;\r\n  yelpCategories: string;\r\n}\r\n\r\nexport const SearchBox: React.FC = () => {\r\n  const [searchQuery, setSearchQuery] = React.useState<SearchQuery>({\r\n    searchType: \"ALL\",\r\n    eventsCategory: \"\",\r\n    radius: \"\",\r\n    startTime: 0,\r\n    endTime: 0,\r\n    endDate: \"\",\r\n    startDate: \"\",\r\n    placeType: \"Bruh\",\r\n    startFormatted: \"\",\r\n    endFormatted: \"\",\r\n    unixStartDate: \"\",\r\n    unixEndDate: \"\",\r\n    ticketMasterCategories: \"\",\r\n    yelpCategories: \"\",\r\n  });\r\n\r\n  console.log(searchQuery);\r\n  const setDynamicPage: () => string = () => {\r\n    return \"\";\r\n  };\r\n\r\n  const linked = () => {\r\n    return (\r\n      <Link\r\n        href=\"/search/[query]\"\r\n        as={`/search/${searchQuery.searchType}+${setDynamicPage()}`}\r\n      >\r\n        <button>Search</button>\r\n      </Link>\r\n    );\r\n  };\r\n\r\n  const handleInputChange: InputChange = (key, input) => {\r\n    return setSearchQuery((state) => ({\r\n      ...state,\r\n      [key]: input,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className={css.searchBox}>\r\n      <SearchSelector></SearchSelector>\r\n      <WhereInput\r\n        handleInputChange={handleInputChange}\r\n        placeType={searchQuery.placeType}\r\n      ></WhereInput>\r\n      <WhenInput></WhenInput>\r\n      <EventsInput></EventsInput>\r\n      <PlacesInput></PlacesInput>\r\n      <button className={css.searchButton}>Search</button>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}