{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\gmont\\\\sekndproduction\\\\state\\\\DatePartsContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport * as React from \"react\";\n\nvar partsReducer = function partsReducer(state, action) {\n  switch (action.type) {\n    case \"ADD_PART\":\n      return {\n        parts: [].concat(_toConsumableArray(state.parts), [action.payload.part])\n      };\n\n    case \"REMOVE_PART\":\n      return {\n        parts: state.parts.filter(function (part) {\n          return part.id === action.payload.id;\n        })\n      };\n\n    default:\n      return state;\n  }\n};\n\nvar PartsStateContext = /*#__PURE__*/React.createContext(undefined);\nvar PartsDispatchContext = /*#__PURE__*/React.createContext(undefined);\nexport var PartsProvider = function PartsProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _React$useReducer = React.useReducer(partsReducer, {\n    parts: []\n  }),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      state = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  return __jsx(PartsStateContext.Provider, {\n    value: state,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, __jsx(PartsDispatchContext.Provider, {\n    value: dispatch,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, children));\n};\n\n_s(PartsProvider, \"0F22lj2TMUsE9PhOsF2W79NnyC4=\");\n\n_c = PartsProvider;\nexport var usePartsState = function usePartsState() {\n  _s2();\n\n  var context = React.useContext(PartsStateContext);\n\n  if (undefined === context) {\n    throw new Error(\"Please use within PartsProvider\");\n  }\n\n  return context;\n};\n\n_s2(usePartsState, \"LryiO+jz3qgcMP+0uXVPI23dn1o=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"PartsProvider\");","map":{"version":3,"sources":["C:/Users/gmont/sekndproduction/state/DatePartsContext.tsx"],"names":["React","partsReducer","state","action","type","parts","payload","part","filter","id","PartsStateContext","createContext","undefined","PartsDispatchContext","PartsProvider","children","useReducer","dispatch","usePartsState","context","useContext","Error"],"mappings":";;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AASA,IAAMC,YAA+C,GAAG,SAAlDA,YAAkD,CACtDC,KADsD,EAEtDC,MAFsD,EAGnD;AACH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,aAAO;AAAEC,QAAAA,KAAK,+BAAMH,KAAK,CAACG,KAAZ,IAAmBF,MAAM,CAACG,OAAP,CAAeC,IAAlC;AAAP,OAAP;;AACF,SAAK,aAAL;AACE,aAAO;AACLF,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,CAAYG,MAAZ,CAAmB,UAACD,IAAD;AAAA,iBAAUA,IAAI,CAACE,EAAL,KAAYN,MAAM,CAACG,OAAP,CAAeG,EAArC;AAAA,SAAnB;AADF,OAAP;;AAGF;AACE,aAAOP,KAAP;AARJ;AAUD,CAdD;;AAgBA,IAAMQ,iBAA4C,gBAAGV,KAAK,CAACW,aAAN,CACnDC,SADmD,CAArD;AAIA,IAAMC,oBAEL,gBAAGb,KAAK,CAACW,aAAN,CAAoBC,SAApB,CAFJ;AAIA,OAAO,IAAME,aAII,GAAG,SAJPA,aAIO,OAAiD;AAAA;;AAAA,MAA9CC,QAA8C,QAA9CA,QAA8C;;AAAA,0BACzCf,KAAK,CAACgB,UAAN,CAAiBf,YAAjB,EAA+B;AACvDI,IAAAA,KAAK,EAAE;AADgD,GAA/B,CADyC;AAAA;AAAA,MAC5DH,KAD4D;AAAA,MACrDe,QADqD;;AAKnE,SACE,MAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAEf,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,oBAAD,CAAsB,QAAtB;AAA+B,IAAA,KAAK,EAAEe,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QADH,CADF,CADF;AAOD,CAhBM;;GAAMD,a;;KAAAA,a;AAkBb,OAAO,IAAMI,aAAa,GAAG,SAAhBA,aAAgB,GAAkB;AAAA;;AAC7C,MAAMC,OAAmB,GAAGnB,KAAK,CAACoB,UAAN,CAAiBV,iBAAjB,CAA5B;;AACA,MAAIE,SAAS,KAAKO,OAAlB,EAA2B;AACzB,UAAM,IAAIE,KAAJ,CAAU,iCAAV,CAAN;AACD;;AACD,SAAOF,OAAP;AACD,CANM;;IAAMD,a","sourcesContent":["import * as React from \"react\";\r\n\r\ntype PartsState = {\r\n  parts: { [key: string]: any }[];\r\n};\r\ntype Action = {\r\n  type: string;\r\n  payload: { id?: string; part?: { [key: string]: any } };\r\n};\r\nconst partsReducer: React.Reducer<PartsState, Action> = (\r\n  state: PartsState,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"ADD_PART\":\r\n      return { parts: [...state.parts, action.payload.part] };\r\n    case \"REMOVE_PART\":\r\n      return {\r\n        parts: state.parts.filter((part) => part.id === action.payload.id),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst PartsStateContext: React.Context<PartsState> = React.createContext(\r\n  undefined\r\n);\r\n\r\nconst PartsDispatchContext: React.Context<\r\n  React.Dispatch<Action> | undefined\r\n> = React.createContext(undefined);\r\n\r\nexport const PartsProvider: ({\r\n  children,\r\n}: {\r\n  children: React.ReactNode;\r\n}) => JSX.Element = ({ children }: { children: React.ReactNode }) => {\r\n  const [state, dispatch] = React.useReducer(partsReducer, {\r\n    parts: [],\r\n  });\r\n\r\n  return (\r\n    <PartsStateContext.Provider value={state}>\r\n      <PartsDispatchContext.Provider value={dispatch}>\r\n        {children}\r\n      </PartsDispatchContext.Provider>\r\n    </PartsStateContext.Provider>\r\n  );\r\n};\r\n\r\nexport const usePartsState = (): PartsState => {\r\n  const context: PartsState = React.useContext(PartsStateContext);\r\n  if (undefined === context) {\r\n    throw new Error(\"Please use within PartsProvider\");\r\n  }\r\n  return context;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}