{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nexport var yelpBusinessesCall = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var location, radius, placeType, response, responseJson, backtoJson, businesses;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            location = _ref.location, radius = _ref.radius, placeType = _ref.placeType;\n            _context.prev = 1;\n            _context.next = 4;\n            return fetch(\"/api/yelpBusinessesAPI\", {\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n              },\n              method: \"POST\",\n              body: JSON.stringify({\n                location: location,\n                radius: radius,\n                term: placeType\n              })\n            });\n\n          case 4:\n            response = _context.sent;\n            _context.next = 7;\n            return response.json();\n\n          case 7:\n            responseJson = _context.sent;\n            backtoJson = JSON.parse(JSON.stringify(responseJson));\n            businesses = backtoJson.businesses;\n            return _context.abrupt(\"return\", {\n              results: businesses\n            });\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](1);\n            return _context.abrupt(\"return\", {\n              results: _context.t0\n            });\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 13]]);\n  }));\n\n  return function yelpBusinessesCall(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["C:/Users/gmont/sekndproduction/apicalls/yelpBusinessesCall.ts"],"names":["yelpBusinessesCall","location","radius","placeType","fetch","headers","Accept","method","body","JSON","stringify","term","response","json","responseJson","backtoJson","parse","businesses","results"],"mappings":";;AAEA,OAAO,IAAMA,kBAIa;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,QAAT,QAASA,QAAT,EAAmBC,MAAnB,QAAmBA,MAAnB,EAA2BC,SAA3B,QAA2BA,SAA3B;AAAA;AAAA;AAAA,mBAEQC,KAAK,CAAC,wBAAD,EAA2B;AAC/DC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,MAAM,EAAE,kBADD;AAEP,gCAAgB;AAFT,eADsD;AAK/DC,cAAAA,MAAM,EAAE,MALuD;AAM/DC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBT,gBAAAA,QAAQ,EAARA,QADmB;AAEnBC,gBAAAA,MAAM,EAANA,MAFmB;AAGnBS,gBAAAA,IAAI,EAAER;AAHa,eAAf;AANyD,aAA3B,CAFb;;AAAA;AAEnBS,YAAAA,QAFmB;AAAA;AAAA,mBAcEA,QAAQ,CAACC,IAAT,EAdF;;AAAA;AAcnBC,YAAAA,YAdmB;AAgBnBC,YAAAA,UAhBmB,GAgBNN,IAAI,CAACO,KAAL,CAAWP,IAAI,CAACC,SAAL,CAAeI,YAAf,CAAX,CAhBM;AAkBjBG,YAAAA,UAlBiB,GAkBFF,UAlBE,CAkBjBE,UAlBiB;AAAA,6CAmBlB;AACLC,cAAAA,OAAO,EAAED;AADJ,aAnBkB;;AAAA;AAAA;AAAA;AAAA,6CAuBlB;AACLC,cAAAA,OAAO;AADF,aAvBkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAJblB,kBAIa;AAAA;AAAA;AAAA,GAJnB","sourcesContent":["type Params = { [key: string]: string };\r\n\r\nexport const yelpBusinessesCall: ({\r\n  location,\r\n  radius,\r\n  placeType,\r\n}: Params) => Promise<any> = async ({ location, radius, placeType }) => {\r\n  try {\r\n    const response: Response = await fetch(\"/api/yelpBusinessesAPI\", {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        location,\r\n        radius,\r\n        term: placeType,\r\n      }),\r\n    });\r\n    const responseJson = await response.json();\r\n\r\n    const backtoJson = JSON.parse(JSON.stringify(responseJson));\r\n\r\n    const { businesses } = backtoJson;\r\n    return {\r\n      results: businesses,\r\n    };\r\n  } catch (err) {\r\n    return {\r\n      results: err,\r\n    };\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}