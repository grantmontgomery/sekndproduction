{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\gmont\\\\sekndproduction\\\\pages\\\\search\\\\[queried].tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from \"react\";\nimport { yelpBusinessesCall } from \"../../apicalls\";\nexport default function Queried(_ref) {\n  var results = _ref.results;\n  console.log(results);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 10\n    }\n  }); // return (\n  //   <Layout>\n  //     <main className={css.queriedPage}>\n  //       <section className={css.queryDisplay}></section>\n  //       <section className={css.header}></section>\n  //       <section className={css.results}>\n  //         <div className={css.resultsSlider}>\n  //           {results.map((business) => {\n  //             return <ResultCard></ResultCard>;\n  //           })}\n  //         </div>\n  //       </section>\n  //     </main>\n  //   </Layout>\n  // );\n}\n_c = Queried;\n\nQueried.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var query, checkURLIsString, paramValueArray, searchParamsValues, apiResponse, results;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            query = _ref2.query;\n\n            if (!query.queried) {\n              _context.next = 13;\n              break;\n            }\n\n            checkURLIsString = query.queried.toString();\n            paramValueArray = checkURLIsString.split(\"+\");\n            searchParamsValues = {};\n            paramValueArray.forEach(function (param) {\n              var indexOfEqual = param.search(\"=\");\n              if (indexOfEqual === -1) return;else {\n                var paramKey = param.substring(0, indexOfEqual);\n                var paramValue = param.substring(indexOfEqual + 1);\n                searchParamsValues[paramKey] = paramValue;\n              }\n            });\n            _context.next = 8;\n            return yelpBusinessesCall(searchParamsValues);\n\n          case 8:\n            apiResponse = _context.sent;\n            results = _objectSpread({}, apiResponse);\n            return _context.abrupt(\"return\", {\n              results: results\n            });\n\n          case 13:\n            return _context.abrupt(\"return\", {\n              results: {}\n            });\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar _c;\n\n$RefreshReg$(_c, \"Queried\");","map":{"version":3,"sources":["C:/Users/gmont/sekndproduction/pages/search/[queried].tsx"],"names":["React","yelpBusinessesCall","Queried","results","console","log","getInitialProps","query","queried","checkURLIsString","toString","paramValueArray","split","searchParamsValues","forEach","param","indexOfEqual","search","paramKey","substring","paramValue","apiResponse"],"mappings":";;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SACEC,kBADF,QAIO,gBAJP;AAOA,eAAe,SAASC,OAAT,OAA8B;AAAA,MAAXC,OAAW,QAAXA,OAAW;AAC3CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP,CAF2C,CAG3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;KAlBuBD,O;;AAoBxBA,OAAO,CAACI,eAAR;AAAA,uEAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,KAAT,SAASA,KAAT;;AAAA,iBACpBA,KAAK,CAACC,OADc;AAAA;AAAA;AAAA;;AAEhBC,YAAAA,gBAFgB,GAEWF,KAAK,CAACC,OAAN,CAAcE,QAAd,EAFX;AAGhBC,YAAAA,eAHgB,GAGYF,gBAAgB,CAACG,KAAjB,CAAuB,GAAvB,CAHZ;AAKhBC,YAAAA,kBALgB,GAKgC,EALhC;AAOtBF,YAAAA,eAAe,CAACG,OAAhB,CAAwB,UAACC,KAAD,EAAW;AACjC,kBAAMC,YAAoB,GAAGD,KAAK,CAACE,MAAN,CAAa,GAAb,CAA7B;AACA,kBAAID,YAAY,KAAK,CAAC,CAAtB,EAAyB,OAAzB,KACK;AACH,oBAAME,QAAgB,GAAGH,KAAK,CAACI,SAAN,CAAgB,CAAhB,EAAmBH,YAAnB,CAAzB;AACA,oBAAMI,UAAkB,GAAGL,KAAK,CAACI,SAAN,CAAgBH,YAAY,GAAG,CAA/B,CAA3B;AACAH,gBAAAA,kBAAkB,CAACK,QAAD,CAAlB,GAA+BE,UAA/B;AACD;AACF,aARD;AAPsB;AAAA,mBAiBcnB,kBAAkB,CAACY,kBAAD,CAjBhC;;AAAA;AAiBhBQ,YAAAA,WAjBgB;AAkBhBlB,YAAAA,OAlBgB,qBAkBGkB,WAlBH;AAAA,6CAoBf;AAAElB,cAAAA,OAAO,EAAPA;AAAF,aApBe;;AAAA;AAAA,6CAsBf;AAAEA,cAAAA,OAAO,EAAE;AAAX,aAtBe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import * as React from \"react\";\r\nimport { Layout, ResultCard } from \"../../components\";\r\nimport {\r\n  yelpBusinessesCall,\r\n  yelpEventsCall,\r\n  ticketMasterCall,\r\n} from \"../../apicalls\";\r\nimport css from \"../../styles/Queried.module.scss\";\r\n\r\nexport default function Queried({ results }) {\r\n  console.log(results);\r\n  return <div></div>;\r\n  // return (\r\n  //   <Layout>\r\n  //     <main className={css.queriedPage}>\r\n  //       <section className={css.queryDisplay}></section>\r\n  //       <section className={css.header}></section>\r\n  //       <section className={css.results}>\r\n  //         <div className={css.resultsSlider}>\r\n  //           {results.map((business) => {\r\n  //             return <ResultCard></ResultCard>;\r\n  //           })}\r\n  //         </div>\r\n  //       </section>\r\n  //     </main>\r\n  //   </Layout>\r\n  // );\r\n}\r\n\r\nQueried.getInitialProps = async ({ query }): Promise<any> => {\r\n  if (query.queried) {\r\n    const checkURLIsString: string = query.queried.toString();\r\n    const paramValueArray: string[] = checkURLIsString.split(\"+\");\r\n\r\n    const searchParamsValues: { [key: string]: string } = {};\r\n\r\n    paramValueArray.forEach((param) => {\r\n      const indexOfEqual: number = param.search(\"=\");\r\n      if (indexOfEqual === -1) return;\r\n      else {\r\n        const paramKey: string = param.substring(0, indexOfEqual);\r\n        const paramValue: string = param.substring(indexOfEqual + 1);\r\n        searchParamsValues[paramKey] = paramValue;\r\n      }\r\n    });\r\n\r\n    const apiResponse: Response = await yelpBusinessesCall(searchParamsValues);\r\n    const results: {} = { ...apiResponse };\r\n\r\n    return { results };\r\n  } else {\r\n    return { results: {} };\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}