{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\gmont\\\\sekndproduction\\\\components\\\\SearchBox\\\\SearchBox.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from \"react\";\nimport { SearchSelector, WhereInput, WhenInput, EventsInput, PlacesInput } from \"./Parts\";\nimport Link from \"next/link\";\nimport css from \"./SearchBox.module.scss\";\nexport var SearchBox = function SearchBox() {\n  _s();\n\n  var _React$useState = React.useState({\n    searchType: \"ALL\",\n    eventsCategory: \"\",\n    radius: \"\",\n    startTime: 0,\n    where: \"\",\n    endTime: 0,\n    endDate: null,\n    startDate: null,\n    placeType: \"\",\n    startFormatted: \"\",\n    endFormatted: \"\",\n    unixStartDate: null,\n    unixEndDate: null,\n    ticketMasterCategories: \"\",\n    yelpCategories: \"\"\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      searchQuery = _React$useState2[0],\n      setSearchQuery = _React$useState2[1];\n\n  var setDynamicPage = function setDynamicPage() {\n    return \"\";\n  };\n\n  var linked = function linked() {\n    return __jsx(Link, {\n      href: \"/search/[query]\",\n      as: \"/search/\".concat(searchQuery.searchType, \"+\").concat(setDynamicPage()),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, __jsx(\"button\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, \"Search\"));\n  };\n\n  var handleInputChange = function handleInputChange(key, input) {\n    return setSearchQuery(function (state) {\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, key, input));\n    });\n  };\n\n  var handleQueryDate = function handleQueryDate(key, date) {\n    if (key === \"startDate\") {\n      var unixStartDate = Math.round(new Date(date).getTime() / 1000);\n      var timeOffSet = date.getTimezoneOffset() * 60;\n      var localStartTimeISO = new Date((unixStartDate - timeOffSet) * 1000).toISOString();\n      var localStartTimeISOFormatted = \"\".concat(localStartTimeISO.substring(0, 19), \"Z\");\n      return setSearchQuery(function (state) {\n        var _objectSpread3;\n\n        return _objectSpread(_objectSpread({}, state), {}, (_objectSpread3 = {}, _defineProperty(_objectSpread3, key, date), _defineProperty(_objectSpread3, \"unixStartDate\", unixStartDate), _defineProperty(_objectSpread3, \"startFormatted\", localStartTimeISOFormatted), _objectSpread3));\n      });\n    } else {\n      var unixEndDate = Math.round(new Date(date).getTime() / 1000);\n\n      var _timeOffSet = date.getTimezoneOffset() * 60;\n\n      var localEndTimeISO = new Date((unixEndDate - _timeOffSet) * 1000).toISOString();\n      var localEndTimeISOFormatted = \"\".concat(localEndTimeISO.substring(0, 19), \"Z\");\n      return setSearchQuery(function (state) {\n        var _objectSpread4;\n\n        return _objectSpread(_objectSpread({}, state), {}, (_objectSpread4 = {}, _defineProperty(_objectSpread4, key, date), _defineProperty(_objectSpread4, \"unixEndDate\", unixEndDate), _defineProperty(_objectSpread4, \"endFormatted\", localEndTimeISOFormatted), _objectSpread4));\n      });\n    }\n  };\n\n  function ApiTest() {\n    return _ApiTest.apply(this, arguments);\n  }\n\n  function _ApiTest() {\n    _ApiTest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch(\"/api/hello\", {\n                headers: {\n                  Accept: \"application/json\",\n                  \"Content-Type\": \"text/plain\"\n                },\n                method: \"POST\",\n                body: JSON.stringify({\n                  Test: \"Hello this is a test\"\n                })\n              });\n\n            case 3:\n              response = _context.sent;\n              return _context.abrupt(\"return\", response);\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(\"error\");\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n    return _ApiTest.apply(this, arguments);\n  }\n\n  return __jsx(\"div\", {\n    className: css.searchBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }\n  }, __jsx(SearchSelector, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }), __jsx(WhereInput, {\n    handleInputChange: handleInputChange,\n    where: searchQuery.where,\n    radius: searchQuery.radius,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }), __jsx(WhenInput, {\n    handleQueryDate: handleQueryDate,\n    startDate: searchQuery.startDate,\n    endDate: searchQuery.endDate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }), __jsx(EventsInput, {\n    handleInputChange: handleInputChange,\n    eventsCategory: searchQuery.eventsCategory,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }), __jsx(PlacesInput, {\n    handleInputChange: handleInputChange,\n    placeType: searchQuery.placeType,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }), __jsx(\"button\", {\n    className: css.searchButton,\n    onClick: ApiTest,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, \"Search\"));\n};\n\n_s(SearchBox, \"Zuqv6FMC6/uc49aq6msogk11n6U=\");\n\n_c = SearchBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBox\");","map":{"version":3,"sources":["C:/Users/gmont/sekndproduction/components/SearchBox/SearchBox.tsx"],"names":["React","SearchSelector","WhereInput","WhenInput","EventsInput","PlacesInput","Link","css","SearchBox","useState","searchType","eventsCategory","radius","startTime","where","endTime","endDate","startDate","placeType","startFormatted","endFormatted","unixStartDate","unixEndDate","ticketMasterCategories","yelpCategories","searchQuery","setSearchQuery","setDynamicPage","linked","handleInputChange","key","input","state","handleQueryDate","date","Math","round","Date","getTime","timeOffSet","getTimezoneOffset","localStartTimeISO","toISOString","localStartTimeISOFormatted","substring","localEndTimeISO","localEndTimeISOFormatted","ApiTest","fetch","headers","Accept","method","body","JSON","stringify","Test","response","console","log","searchBox","searchButton"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport {\r\n  SearchSelector,\r\n  WhereInput,\r\n  WhenInput,\r\n  EventsInput,\r\n  PlacesInput,\r\n} from \"./Parts\";\r\nimport Link from \"next/link\";\r\nimport css from \"./SearchBox.module.scss\";\r\n\r\nexport type InputChange = (key: string, input: string | Date) => void;\r\n\r\nexport default interface InputProps {\r\n  handleInputChange: InputChange;\r\n  placeType: string;\r\n  radius: string;\r\n  eventsCategory: string;\r\n  where: string;\r\n  startDate: Date;\r\n  endDate: Date;\r\n  handleQueryDate: (key: string, date: Date) => void;\r\n}\r\n\r\ninterface SearchQuery {\r\n  searchType: string;\r\n  eventsCategory: string;\r\n  radius: string;\r\n  where: string;\r\n  startTime: number;\r\n  endTime: number;\r\n  placeType: string;\r\n  endDate: Date;\r\n  startDate: Date;\r\n  startFormatted: string;\r\n  endFormatted: string;\r\n  unixStartDate: number;\r\n  unixEndDate: number;\r\n  ticketMasterCategories: string;\r\n  yelpCategories: string;\r\n}\r\n\r\nexport const SearchBox: React.FC = () => {\r\n  const [searchQuery, setSearchQuery] = React.useState<SearchQuery>({\r\n    searchType: \"ALL\",\r\n    eventsCategory: \"\",\r\n    radius: \"\",\r\n    startTime: 0,\r\n    where: \"\",\r\n    endTime: 0,\r\n    endDate: null,\r\n    startDate: null,\r\n    placeType: \"\",\r\n    startFormatted: \"\",\r\n    endFormatted: \"\",\r\n    unixStartDate: null,\r\n    unixEndDate: null,\r\n    ticketMasterCategories: \"\",\r\n    yelpCategories: \"\",\r\n  });\r\n\r\n  const setDynamicPage: () => string = () => {\r\n    return \"\";\r\n  };\r\n\r\n  const linked = () => {\r\n    return (\r\n      <Link\r\n        href=\"/search/[query]\"\r\n        as={`/search/${searchQuery.searchType}+${setDynamicPage()}`}\r\n      >\r\n        <button>Search</button>\r\n      </Link>\r\n    );\r\n  };\r\n\r\n  const handleInputChange: InputChange = (key, input) => {\r\n    return setSearchQuery((state) => ({\r\n      ...state,\r\n      [key]: input,\r\n    }));\r\n  };\r\n\r\n  const handleQueryDate: (key: string, date: Date) => void = (key, date) => {\r\n    if (key === \"startDate\") {\r\n      const unixStartDate: number = Math.round(new Date(date).getTime() / 1000);\r\n      const timeOffSet: number = date.getTimezoneOffset() * 60;\r\n      const localStartTimeISO: string = new Date(\r\n        (unixStartDate - timeOffSet) * 1000\r\n      ).toISOString();\r\n      const localStartTimeISOFormatted: string = `${localStartTimeISO.substring(\r\n        0,\r\n        19\r\n      )}Z`;\r\n\r\n      return setSearchQuery((state) => ({\r\n        ...state,\r\n        [key]: date,\r\n        unixStartDate,\r\n        startFormatted: localStartTimeISOFormatted,\r\n      }));\r\n    } else {\r\n      const unixEndDate: number = Math.round(new Date(date).getTime() / 1000);\r\n      const timeOffSet: number = date.getTimezoneOffset() * 60;\r\n      const localEndTimeISO: string = new Date(\r\n        (unixEndDate - timeOffSet) * 1000\r\n      ).toISOString();\r\n      const localEndTimeISOFormatted: string = `${localEndTimeISO.substring(\r\n        0,\r\n        19\r\n      )}Z`;\r\n      return setSearchQuery((state) => ({\r\n        ...state,\r\n        [key]: date,\r\n        unixEndDate,\r\n        endFormatted: localEndTimeISOFormatted,\r\n      }));\r\n    }\r\n  };\r\n\r\n  async function ApiTest() {\r\n    try {\r\n      const response = await fetch(\"/api/hello\", {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"text/plain\",\r\n        },\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          Test: \"Hello this is a test\",\r\n        }),\r\n      });\r\n\r\n      return response;\r\n    } catch {\r\n      console.log(\"error\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={css.searchBox}>\r\n      <SearchSelector></SearchSelector>\r\n      <WhereInput\r\n        handleInputChange={handleInputChange}\r\n        where={searchQuery.where}\r\n        radius={searchQuery.radius}\r\n      ></WhereInput>\r\n      <WhenInput\r\n        handleQueryDate={handleQueryDate}\r\n        startDate={searchQuery.startDate}\r\n        endDate={searchQuery.endDate}\r\n      ></WhenInput>\r\n      <EventsInput\r\n        handleInputChange={handleInputChange}\r\n        eventsCategory={searchQuery.eventsCategory}\r\n      ></EventsInput>\r\n      <PlacesInput\r\n        handleInputChange={handleInputChange}\r\n        placeType={searchQuery.placeType}\r\n      ></PlacesInput>\r\n      <button className={css.searchButton} onClick={ApiTest}>\r\n        Search\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}