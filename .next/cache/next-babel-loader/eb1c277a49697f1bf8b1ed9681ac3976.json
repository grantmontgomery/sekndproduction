{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\gmont\\\\sekndproduction\\\\components\\\\SearchResults\\\\ResultCard\\\\ResultCard.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { PlacesPrice } from \"./PlacesInfo\";\nimport * as React from \"react\";\nimport css from \"./ResultCard.module.scss\";\nexport var ResultCard = function ResultCard(_ref) {\n  _s();\n\n  var item = _ref.item;\n\n  var _React$useState = React.useState({\n    added: false\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var determineCardType = function determineCardType(type) {\n    return;\n  };\n\n  return __jsx(\"div\", {\n    className: css.resultCard,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, __jsx(\"span\", {\n    className: css.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"Title\"), __jsx(\"button\", {\n    className: css.addButton,\n    onClick: function onClick() {\n      return state.added ? setState(function (state) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          added: false\n        });\n      }) : setState(function (state) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          added: true\n        });\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, state.added ? \"Remove from Parts -\" : \"Add to Parts +\"), __jsx(PlacesPrice, {\n    price: [\"\", \"\", \"\"],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: css.starsWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(ResultCard, \"LUjicgL5ZyzJ/ju0YTaEgWScLPo=\");\n\n_c = ResultCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultCard\");","map":{"version":3,"sources":["C:/Users/gmont/sekndproduction/components/SearchResults/ResultCard/ResultCard.tsx"],"names":["PlacesPrice","React","css","ResultCard","item","useState","added","state","setState","determineCardType","type","resultCard","title","addButton","starsWrapper"],"mappings":";;;;;;;;;;;;;AACA,SAASA,WAAT,QAA4B,cAA5B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,GAAP,MAAgB,0BAAhB;AAEA,OAAO,IAAMC,UAAsD,GAAG,SAAzDA,UAAyD,OAEhE;AAAA;;AAAA,MADJC,IACI,QADJA,IACI;;AAAA,wBACsBH,KAAK,CAACI,QAAN,CAAe;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAf,CADtB;AAAA;AAAA,MACGC,KADH;AAAA,MACUC,QADV;;AAEJ,MAAMC,iBAAyC,GAAG,SAA5CA,iBAA4C,CAACC,IAAD,EAAU;AAC1D;AACD,GAFD;;AAIA,SACE;AAAK,IAAA,SAAS,EAAER,GAAG,CAACS,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAET,GAAG,CAACU,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AACE,IAAA,SAAS,EAAEV,GAAG,CAACW,SADjB;AAEE,IAAA,OAAO,EAAE;AAAA,aACPN,KAAK,CAACD,KAAN,GACIE,QAAQ,CAAC,UAACD,KAAD;AAAA,+CAAiBA,KAAjB;AAAwBD,UAAAA,KAAK,EAAE;AAA/B;AAAA,OAAD,CADZ,GAEIE,QAAQ,CAAC,UAACD,KAAD;AAAA,+CAAiBA,KAAjB;AAAwBD,UAAAA,KAAK,EAAE;AAA/B;AAAA,OAAD,CAHL;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGC,KAAK,CAACD,KAAN,GAAc,qBAAd,GAAsC,gBARzC,CAFF,EAYE,MAAC,WAAD;AAAa,IAAA,KAAK,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAcE;AAAK,IAAA,SAAS,EAAEJ,GAAG,CAACY,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CADF;AAkBD,CA1BM;;GAAMX,U;;KAAAA,U","sourcesContent":["import { sectionFooterSecondaryContent } from \"aws-amplify\";\r\nimport { PlacesPrice } from \"./PlacesInfo\";\r\nimport * as React from \"react\";\r\nimport css from \"./ResultCard.module.scss\";\r\n\r\nexport const ResultCard: React.FC<{ item: { [key: string]: any } }> = ({\r\n  item,\r\n}) => {\r\n  const [state, setState] = React.useState({ added: false });\r\n  const determineCardType: (type: string) => void = (type) => {\r\n    return;\r\n  };\r\n\r\n  return (\r\n    <div className={css.resultCard}>\r\n      <span className={css.title}>Title</span>\r\n      <button\r\n        className={css.addButton}\r\n        onClick={() =>\r\n          state.added\r\n            ? setState((state) => ({ ...state, added: false }))\r\n            : setState((state) => ({ ...state, added: true }))\r\n        }\r\n      >\r\n        {state.added ? \"Remove from Parts -\" : \"Add to Parts +\"}\r\n      </button>\r\n      <PlacesPrice price={[\"\", \"\", \"\"]}></PlacesPrice>\r\n\r\n      <div className={css.starsWrapper}></div>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}