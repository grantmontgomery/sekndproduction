{"ast":null,"code":"export default (async (req, res) => {\n  try {\n    if (req.method !== \"GET\") {\n      const {\n        location,\n        radius,\n        start_date,\n        end_date,\n        categories\n      } = req.body;\n      const yelpEvents = new URL(\"https://api.yelp.com/v3/events/search\"),\n            params = {\n        location,\n        radius,\n        start_date,\n        end_date\n      };\n      Object.keys(params).forEach(key => yelpEvents.searchParams.append(key, params[key]));\n      const yelpUrlString = yelpEvents.toString(); //function\n\n      const yelpResponse = await fetch(yelpUrlString, {\n        headers: {\n          Authorization: `Bearer ${process.env.YELP_API_KEY}`\n        }\n      });\n      const jsonResponse = await yelpResponse.json();\n      console.log(jsonResponse);\n      return res.send(jsonResponse);\n    }\n\n    return res.status(200).end(\"Yelp Events API\");\n  } catch (err) {\n    return res.send(err);\n  }\n});","map":{"version":3,"sources":["C:/Users/gmont/sekndproduction/pages/api/yelpEventsAPI.ts"],"names":["req","res","method","location","radius","start_date","end_date","categories","body","yelpEvents","URL","params","Object","keys","forEach","key","searchParams","append","yelpUrlString","toString","yelpResponse","fetch","headers","Authorization","process","env","YELP_API_KEY","jsonResponse","json","console","log","send","status","end","err"],"mappings":"AAUA,gBAAe,OAAOA,GAAP,EAA4BC,GAA5B,KAAqD;AAClE,MAAI;AACF,QAAID,GAAG,CAACE,MAAJ,KAAe,KAAnB,EAA0B;AACxB,YAAM;AAAEC,QAAAA,QAAF;AAAYC,QAAAA,MAAZ;AAAoBC,QAAAA,UAApB;AAAgCC,QAAAA,QAAhC;AAA0CC,QAAAA;AAA1C,UAAyDP,GAAG,CAACQ,IAAnE;AACA,YAAMC,UAAe,GAAG,IAAIC,GAAJ,CAAQ,uCAAR,CAAxB;AAAA,YACEC,MAAc,GAAG;AACfR,QAAAA,QADe;AAEfC,QAAAA,MAFe;AAGfC,QAAAA,UAHe;AAIfC,QAAAA;AAJe,OADnB;AAOAM,MAAAA,MAAM,CAACC,IAAP,CAAYF,MAAZ,EAAoBG,OAApB,CAA6BC,GAAD,IAC1BN,UAAU,CAACO,YAAX,CAAwBC,MAAxB,CAA+BF,GAA/B,EAAoCJ,MAAM,CAACI,GAAD,CAA1C,CADF;AAIA,YAAMG,aAAqB,GAAGT,UAAU,CAACU,QAAX,EAA9B,CAbwB,CAexB;;AAEA,YAAMC,YAAsB,GAAG,MAAMC,KAAK,CAACH,aAAD,EAAgB;AACxDI,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,UAASC,OAAO,CAACC,GAAR,CAAYC,YAAa;AAD3C;AAD+C,OAAhB,CAA1C;AAKA,YAAMC,YAAkB,GAAG,MAAMP,YAAY,CAACQ,IAAb,EAAjC;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;AACA,aAAO1B,GAAG,CAAC8B,IAAJ,CAASJ,YAAT,CAAP;AACD;;AACD,WAAO1B,GAAG,CAAC+B,MAAJ,CAAW,GAAX,EAAgBC,GAAhB,CAAoB,iBAApB,CAAP;AACD,GA7BD,CA6BE,OAAOC,GAAP,EAAY;AACZ,WAAOjC,GAAG,CAAC8B,IAAJ,CAASG,GAAT,CAAP;AACD;AACF,CAjCD","sourcesContent":["import { NextApiRequest, NextApiResponse } from \"next\";\r\n\r\ntype Params = {\r\n  location: string;\r\n  radius: string;\r\n  start_date: string;\r\n  end_date: string;\r\n  categories?: string;\r\n};\r\n\r\nexport default async (req: NextApiRequest, res: NextApiResponse) => {\r\n  try {\r\n    if (req.method !== \"GET\") {\r\n      const { location, radius, start_date, end_date, categories } = req.body;\r\n      const yelpEvents: URL = new URL(\"https://api.yelp.com/v3/events/search\"),\r\n        params: Params = {\r\n          location,\r\n          radius,\r\n          start_date,\r\n          end_date,\r\n        };\r\n      Object.keys(params).forEach((key) =>\r\n        yelpEvents.searchParams.append(key, params[key])\r\n      );\r\n\r\n      const yelpUrlString: string = yelpEvents.toString();\r\n\r\n      //function\r\n\r\n      const yelpResponse: Response = await fetch(yelpUrlString, {\r\n        headers: {\r\n          Authorization: `Bearer ${process.env.YELP_API_KEY}`,\r\n        },\r\n      });\r\n      const jsonResponse: JSON = await yelpResponse.json();\r\n\r\n      console.log(jsonResponse);\r\n      return res.send(jsonResponse);\r\n    }\r\n    return res.status(200).end(\"Yelp Events API\");\r\n  } catch (err) {\r\n    return res.send(err);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}